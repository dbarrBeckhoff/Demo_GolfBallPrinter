!function(TcHmi){var e;(function(e){class t{constructor(e,t){this.values=[];for(let s=0;s<e;s++){this.values[s]=[];for(let e=0;e<t;e++)this.values[s].push(0)}}static GenerateFromPoint(e){let s=new t(3,1);return s.values[0][0]=e.X,s.values[1][0]=e.Y,s.values[2][0]=1,s}static FromM3(e){let s=new t(3,3);return s.values=e.values,s}GenerateToPoint(){return 1==this.values[0].length&&3==this.values.length?new e.Point(this.values[0][0],this.values[1][0]):new e.Point}Multiply(e){if(this.values[0].length!=e.values.length)return new t(0,0);let s=new t(this.values.length,e.values[0].length);for(let t=0;t<this.values.length;t++)for(let i=0;i<e.values[0].length;i++)for(let o=0;o<e.values.length;o++)s.values[t][i]+=this.values[t][o]*e.values[o][i];return s}Identity(){for(let e=0;e<this.values.length;e++)for(let t=0;t<this.values[0].length;t++)this.values[e][t]=e==t?1:0}Get(e,t){return this.values[e][t]}}e.Matrix=t})((e=TcHmi.Common||(TcHmi.Common={})).BaseTypes||(e.BaseTypes={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t extends e.Matrix{constructor(){super(3,3),this.GenerateMatrix()}static FromValues(e){if(3!=e.length||3!=e[0].length)return t.Identity;var s=new t;return s.values=e,s.GenerateMatrix(),s}get M12(){return this.m12}get M13(){return this.m13}get M21(){return this.m21}get M22(){return this.m22}get M11(){return this.m11}get M23(){return this.m23}get M31(){return this.m31}get M32(){return this.m32}get M33(){return this.m33}get Values(){return this.values}static get Identity(){let e=new t;return e.Identity(),e.GenerateMatrix(),e}GetInverse(){let e=t.Identity;for(let t=0;t<this.values.length;t++)for(let s=0;s<this.values[0].length;s++){let i=this.GetSubdertimnant(t,s);e.values[s][t]=1/this.Det()*Math.pow(-1,t+s)*i}return e.GenerateMatrix(),e}GetSubdertimnant(e,t){let s=[];for(let i=0;i<3;i++)for(let o=0;o<3;o++)i!=e&&o!=t&&s.push(this.values[i][o]);return s[0]*s[3]-s[1]*s[2]}Det(){return this.m11*this.m22*this.m33+this.m12*this.m23*this.m31+this.m13*this.m21*this.m32-this.m13*this.m22*this.m31-this.m11*this.m23*this.m32-this.m12*this.m21*this.m33}GenerateMatrix(){this.m12=this.values[0][1],this.m13=this.values[0][2],this.m21=this.values[1][0],this.m22=this.values[1][1],this.m11=this.values[0][0],this.m23=this.values[1][2],this.m31=this.values[2][0],this.m32=this.values[2][1],this.m33=this.values[2][2]}Scale(e,s){let i=t.Identity;i.values[0][0]=e,i.values[1][1]=s,this.values=i.Multiply(this).values,this.GenerateMatrix()}Multiply(e){let s=super.Multiply.call(this,e),i=t.Identity;for(let e=0;e<3;e++)for(let t=0;t<3;t++)i.values[e][t]=s.Get(e,t);return i.GenerateMatrix(),i}Translate(e,s){let i=t.Identity;i.values[0][2]=e,i.values[1][2]=s,this.values=i.Multiply(this).values,this.GenerateMatrix()}RotateRad(e){let s=t.Identity;s.values[0][0]=Math.cos(e),s.values[0][1]=-Math.sin(e),s.values[1][0]=Math.sin(e),s.values[1][1]=Math.cos(e),this.values=s.Multiply(this).values,this.GenerateMatrix()}Rotate(e){this.RotateRad(e*(Math.PI/180))}}e.M3=t})((e=TcHmi.Common||(TcHmi.Common={})).BaseTypes||(e.BaseTypes={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t{constructor(t=0,s=0,i=new e.Point){this.height=t,this.width=s,this.topLeft=i}Union(s){if(0==s.width&&0==s.height)return this;if(0==this.width&&0==this.height)return s;let i,o,n=new e.Point(Math.min(this.topLeft.X,s.topLeft.X),Math.min(this.topLeft.Y,s.topLeft.Y));return i=this.topLeft.X+this.width>s.topLeft.X+s.width?this.topLeft.X+this.width-n.X:s.topLeft.X+s.width-n.X,o=this.topLeft.Y+this.height>s.topLeft.Y+s.height?this.topLeft.Y+this.height-n.Y:s.topLeft.Y+s.height-n.Y,new t(o,i,n)}ContainsPoint(e){return e.X>=this.topLeft.X&&e.X<=this.topLeft.X+this.width&&e.Y>=this.topLeft.Y&&e.Y<=this.topLeft.Y+this.height}}e.Rect=t})((e=TcHmi.Common||(TcHmi.Common={})).BaseTypes||(e.BaseTypes={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t{constructor(e=0,t=0){this.X=e,this.Y=t}static FromPosition(e){return new t(e.x,e.y)}Set(e,t){this.X=e,this.Y=t}Add(e){this.X+=e.X,this.Y+=e.Y}Sub(e){return new t(this.X-e.X,this.Y-e.Y)}Transform(t){let s=e.M3.GenerateFromPoint(this);return s=e.Matrix.FromM3(t).Multiply(s),s.GenerateToPoint()}Length(){return Math.sqrt(Math.pow(this.X,2)+Math.pow(this.Y,2))}static GetArea(e,t,s){return Math.abs(t.X*e.Y-e.X*t.Y+(s.X*t.Y-t.X*s.Y)+(e.X*s.Y-s.X*e.Y))/2}}e.Point=t})((e=TcHmi.Common||(TcHmi.Common={})).BaseTypes||(e.BaseTypes={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;((e=TcHmi.Common||(TcHmi.Common={})).BaseTypes||(e.BaseTypes={})).TextConfiguration=class{constructor(e){this.Text="",this.Color={color:"black"},this.FontStyle="Normal",this.FontWeight="Normal",this.FontFamily="Arial",this.HorizontalAlignment="Left",this.VerticalAlignment="Top",this.FontSize=16,Object.assign(this,e)}GetCanvasTextAlign(){switch(this.HorizontalAlignment){case"Left":return"left";case"Center":return"center";case"Right":return"right"}}GetCanvasTextBaseline(){switch(this.VerticalAlignment){case"Top":return"top";case"Center":return"middle";case"Bottom":return"bottom"}}GetCanvasTextFont(){return this.FontWeight.replace("Auto","Normal")+" "+this.FontStyle.replace("Auto","Normal")+" "+this.FontSize+"px "+(""==this.FontFamily?"sans-serif":this.FontFamily)}}}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t{static ComponentToHex(e){var t=e.toString(16);return 1==t.length?"0"+t:t}static RgbToHex(e,s,i){return"#"+t.ComponentToHex(e)+t.ComponentToHex(s)+t.ComponentToHex(i)}static HexToRgb(e){var t=/^#?([a-fd]{2})([a-fd]{2})([a-fd]{2})$/i.exec(e);return t?parseInt(t[1],16)+","+parseInt(t[2],16)+","+parseInt(t[3],16):null}static FromArgb(e){let t=e.toString(16),s=t.substring(2);return s+=t[0]+t[1],"#"+s}}e.ColorConverter=t})((e=TcHmi.Common||(TcHmi.Common={})).Utilities||(e.Utilities={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t{static GetImage(e){let s=t.images.get(e);return s||(s=new Image,s.src=e,this.images.set(e,s),s)}static BinaryToDataUrl(e){return"data:image/jpeg;base64,"+btoa(String.fromCharCode.apply(null,e))}}t.images=new Map,e.ImageHandler=t})((e=TcHmi.Common||(TcHmi.Common={})).Utilities||(e.Utilities={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;((e=TcHmi.Common||(TcHmi.Common={})).Utilities||(e.Utilities={})).BitUtil=class{static IsBitSet(e,t){return(e&1<<t)>0}}}(TcHmi||(TcHmi={})),function(TcHmi){var e;((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={})).TransformableBase=class{constructor(){this.isVisible=!0,this.transformChilds=[],this.matrix=e.BaseTypes.M3.Identity,this.worldMatrix=e.BaseTypes.M3.Identity}get Childs(){return this.transformChilds}get IsVisible(){return this.isVisible}set IsVisible(e){this.isVisible=e;for(let t of this.transformChilds)t.IsVisible=e}get Transformation(){return e.BaseTypes.M3.Identity.Multiply(this.matrix)}AddChild(e){return e.SetTransformation(e.Transformation,this.worldMatrix),e.IsVisible=this.isVisible,this.transformChilds.push(e),e}TransformNode(e){let t=this.worldMatrix.Multiply(this.matrix.GetInverse());this.SetTransformation(e,t)}ClearChilds(){for(let e of this.transformChilds)e.ClearChilds();this.transformChilds=[]}SetTransformation(e,t){this.matrix=e,this.worldMatrix=t.Multiply(e);for(let e of this.transformChilds)e.SetTransformation(e.Transformation,this.worldMatrix)}RemoveChild(e){e.ClearChilds(),this.transformChilds=this.transformChilds.filter((t=>t!==e))}}}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(t){class s extends t.TransformableBase{constructor(e){super(),this.zIndex=e||0}get ZIndex(){return this.zIndex}TransformCanvas(e,t){e.setTransform(t.M11,t.M21,t.M12,t.M22,t.M13,t.M23)}Render(e){this.TransformCanvas(e,this.worldMatrix)}GetBounds(){return new e.BaseTypes.Rect}}t.RenderableBase=s})((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={})).RenderableGroup=class{constructor(e){this.childs=[],this.zIndex=e||0}get ZIndex(){return this.zIndex}get Childs(){return this.childs}get Length(){return this.childs.length}ClearChilds(){this.childs=[]}Render(e){for(let t of this.childs)t.Render(e)}RemoveRenderable(e){this.childs=this.childs.filter((t=>t!==e))}AddRenderable(e){this.childs.length<=0||this.childs[this.childs.length-1].ZIndex<=e.ZIndex?this.childs.push(e):this.childs.splice(this.binarySearch(e.ZIndex),0,e)}binarySearch(e){let t=0,s=this.childs.length-1;for(;t<s;){let i=Math.floor(t+(s-t)/2);this.childs[i].ZIndex<=e?t=i+1:s=i}return t}GetBounds(){let t=new e.BaseTypes.Rect;for(let e of this.childs)t=t.Union(e.GetBounds());return t}}}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t extends e.RenderableBase{constructor(e,t){super(t),this.textConfiguration=e}Render(e){super.Render(e),e.fillStyle=this.textConfiguration.Color.color,e.font=this.textConfiguration.GetCanvasTextFont(),e.textAlign=this.textConfiguration.GetCanvasTextAlign(),e.textBaseline=this.textConfiguration.GetCanvasTextBaseline(),e.fillText(this.textConfiguration.Text,0,0)}}e.TextNode=t})((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t extends e.TransformableBase{constructor(e){super(),this.renderableCollection=e}get Length(){return this.transformChilds.length}AddChild(e){return super.AddChild(e),this.renderableCollection.AddRenderable(e),e}RemoveChild(e){super.RemoveChild(e),this.renderableCollection.RemoveRenderable(e)}ClearChilds(){for(let e of this.transformChilds)e.ClearChilds(),this.renderableCollection.RemoveRenderable(e);this.transformChilds=[]}}e.VisualGroup=t})((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(e){class t extends e.RenderableBase{constructor(e,t){super(t),this.offsetX=0,this.offsetY=0,this.horizontalAlignment="Left",this.verticalAlignment="Top",this.img=e}set RenderHeight(e){this.renderHeight=e,this.SetWidthParameters()}set RenderWidth(e){this.renderWidth=e,this.SetHeightParameters()}set HorizontalAlignment(e){this.horizontalAlignment=e,this.SetWidthParameters()}set VerticalAlignment(e){this.verticalAlignment=e,this.SetHeightParameters()}drawImage(e){var t,s;let i=null!==(t=this.renderWidth)&&void 0!==t?t:this.img.width,o=null!==(s=this.renderHeight)&&void 0!==s?s:this.img.height;e.drawImage(this.img,this.offsetX,this.offsetY,i,o)}Render(e){this.IsVisible&&this.Loaded((()=>{super.Render(e),this.drawImage(e)}))}Loaded(e){e&&(this.img.complete?e():this.img.addEventListener("load",e,!1))}SetWidthParameters(){this.Loaded((()=>{var e,t;switch(this.horizontalAlignment){case"Right":this.offsetX=-(null!==(e=this.renderWidth)&&void 0!==e?e:this.img.width);break;case"Center":this.offsetX=-(null!==(t=this.renderWidth)&&void 0!==t?t:this.img.width)/2}}))}SetHeightParameters(){this.Loaded((()=>{var e,t;switch(this.verticalAlignment){case"Bottom":this.offsetY=-(null!==(e=this.renderHeight)&&void 0!==e?e:this.img.height);break;case"Center":this.offsetY=-(null!==(t=this.renderHeight)&&void 0!==t?t:this.img.height)/2}}))}}e.ImageNode=t})((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;(function(t){class s{constructor(e){this.visuals=new t.RenderableGroup,this.visualsGroupUnderMoverCanv=new t.RenderableGroup(-1),this.visualsGroupOnMoverCanv=new t.RenderableGroup(0),this.visualsGroupOverMoverCanv=new t.RenderableGroup(1),this.div=e,this.visuals.AddRenderable(this.visualsGroupUnderMoverCanv),this.visuals.AddRenderable(this.visualsGroupOnMoverCanv),this.visuals.AddRenderable(this.visualsGroupOverMoverCanv)}get CanvasOverMover(){return this.visualCanvasOverMover}get CanvasUnderMover(){return this.visualCanvasUnderMover}get MoverCanvas(){return this.moverCanvas}get IsCanvasAvailable(){return this.isCanvasAvailable}get Padding(){return this.padding}set Padding(e){this.padding=e,this.ZoomToFit()}AddRenderable(e){e.ZIndex<s.MoverCanvZIndexStart?this.visualsGroupUnderMoverCanv.AddRenderable(e):e.ZIndex<s.MoverCanvZIndexEnd?this.visualsGroupOnMoverCanv.AddRenderable(e):this.visualsGroupOverMoverCanv.AddRenderable(e)}RemoveRenderable(e){e.ZIndex<s.MoverCanvZIndexStart?this.visualsGroupUnderMoverCanv.RemoveRenderable(e):e.ZIndex<s.MoverCanvZIndexEnd?this.visualsGroupOnMoverCanv.RemoveRenderable(e):this.visualsGroupOverMoverCanv.RemoveRenderable(e)}AddEventListener(e,t){this.div.addEventListener(e,t)}ClearVisualCanvas(){this.isCanvasAvailable&&(this.visualCtxOverMover.resetTransform(),this.visualCtxOverMover.clearRect(0,0,this.clientWidth,this.clientHeigth),this.visualCtxUnderMover.resetTransform(),this.visualCtxUnderMover.clearRect(0,0,this.clientWidth,this.clientHeigth))}ClearMoverCanvas(){this.isCanvasAvailable&&(this.moverCtx.resetTransform(),this.moverCtx.clearRect(0,0,this.clientWidth,this.clientHeigth))}CreateCanvas(e,t){for(;this.div.firstChild;)this.div.removeChild(this.div.firstChild);this.visualCanvasUnderMover=document.createElement("canvas"),this.visualCanvasUnderMover.id="canvasUnderMover",this.visualCanvasUnderMover.height=t,this.visualCanvasUnderMover.width=e,this.div.appendChild(this.visualCanvasUnderMover),this.visualCtxUnderMover=this.visualCanvasUnderMover.getContext("2d"),this.moverCanvas=document.createElement("canvas"),this.moverCanvas.id="moverCanvas",this.moverCanvas.height=t,this.moverCanvas.width=e,this.div.appendChild(this.moverCanvas),this.moverCtx=this.moverCanvas.getContext("2d"),this.visualCanvasOverMover=document.createElement("canvas"),this.visualCanvasOverMover.id="canvasOverMover",this.visualCanvasOverMover.height=t,this.visualCanvasOverMover.width=e,this.div.appendChild(this.visualCanvasOverMover),this.visualCtxOverMover=this.visualCanvasOverMover.getContext("2d"),this.clientHeigth=t,this.clientWidth=e,this.isCanvasAvailable=!0}RenderAll(){let e=this;requestAnimationFrame((function(){e.ClearVisualCanvas(),e.ClearMoverCanvas(),e.visualsGroupUnderMoverCanv.Render(e.visualCtxUnderMover),e.visualsGroupOnMoverCanv.Render(e.moverCtx),e.visualsGroupOverMoverCanv.Render(e.visualCtxOverMover)}))}RenderVisuals(){requestAnimationFrame((()=>{this.ClearVisualCanvas(),this.visualsGroupUnderMoverCanv.Render(this.visualCtxUnderMover),this.visualsGroupOverMoverCanv.Render(this.visualCtxOverMover)}))}RenderMover(){let e=this;requestAnimationFrame((function(){e.ClearMoverCanvas(),e.visualsGroupOnMoverCanv.Render(e.moverCtx)}))}Resize(e,t){this.isCanvasAvailable&&(this.visualCanvasOverMover.height=t,this.visualCanvasOverMover.width=e,this.visualCanvasUnderMover.height=t,this.visualCanvasUnderMover.width=e,this.moverCanvas.height=t,this.moverCanvas.width=e,this.clientWidth=e,this.clientHeigth=t,this.ZoomToFit())}TransformView(e){e=e.Multiply(this.System.Transformation),this.System.TransformNode(e),this.RenderAll()}ZoomToFit(){let t=this.visuals.GetBounds();if(0==t.width||0==t.height)return;let s={left:0,top:0,right:0,bottom:0};if(this.Padding){switch(this.Padding.leftUnit){case"px":s.left=this.Padding.left;break;case"%":s.left=t.width*(this.Padding.left/100)}switch(this.Padding.topUnit){case"px":s.top=this.Padding.top;break;case"%":s.top=t.height*(this.Padding.top/100)}switch(this.Padding.rightUnit){case"px":s.right=this.Padding.right;break;case"%":s.right=t.width*(this.Padding.right/100)}switch(this.Padding.bottomUnit){case"px":s.bottom=this.Padding.bottom;break;case"%":s.bottom=t.height*(this.Padding.bottom/100)}}let i=e.BaseTypes.M3.Identity;i.Translate(-t.topLeft.X,-t.topLeft.Y);let o=this.div.getBoundingClientRect();if(0==o.width||0==o.height)return;let n=(o.width-(s.right+s.left))/t.width,a=(o.height-(s.bottom+s.top))/t.height;n<a?i.Scale(n,n):i.Scale(a,a),this.TransformView(i),i=e.BaseTypes.M3.Identity,i.Translate(s.left,s.top),n<a?i.Translate(0,o.height/2-(s.top+t.height*n/2)):i.Translate(o.width/2-(s.left+t.width*a/2),0),this.TransformView(i)}}s.MoverZIndex=1e4,s.MoverCanvZIndexStart=5e3,s.MoverCanvZIndexEnd=15e3,s.ModuleZIndex=0,t.XSystemRenderer=s})((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={}))}(TcHmi||(TcHmi={})),function(TcHmi){var e;((e=TcHmi.Common||(TcHmi.Common={})).Scenegraph||(e.Scenegraph={})).VisualInteractionHandler=class{constructor(e,t){this.lastTouches=[null,null],this.lastMiddlePoint=null,this.pressing=!1,this.moved=!1,this.LockZoom=!1,this.LockPan=!1,this.systemRenderer=e,this.selectionManager=t,this.InitEventListener()}InitEventListener(){this.systemRenderer.AddEventListener("mousewheel",this.MouseWheel.bind(this)),this.systemRenderer.AddEventListener("mousedown",this.MouseDown.bind(this)),this.systemRenderer.AddEventListener("mouseup",this.MouseUp.bind(this)),this.systemRenderer.AddEventListener("mouseleave",this.MouseLeave.bind(this)),this.systemRenderer.AddEventListener("mousemove",this.MouseMove.bind(this)),this.systemRenderer.AddEventListener("touchmove",this.Touchmove.bind(this)),this.systemRenderer.AddEventListener("touchend",this.Touchend.bind(this))}MouseDown(t){this.lastTouches[0]=new e.BaseTypes.Point,this.lastTouches[0].X=t.clientX,this.lastTouches[0].Y=t.clientY,this.pressing=!0}MouseUp(t){var s;this.lastTouches[0]=null,this.pressing=!1,this.moved||null===(s=this.selectionManager)||void 0===s||s.Click(new e.BaseTypes.Point(t.offsetX,t.offsetY)),this.moved=!1}MouseLeave(e){this.lastTouches[0]=null,this.pressing=!1,this.moved=!1}MouseMove(e){if(this.pressing&&!this.LockPan){let t=TcHmi.Common.BaseTypes.M3.Identity;t.Translate(e.clientX-this.lastTouches[0].X,e.clientY-this.lastTouches[0].Y),this.systemRenderer.TransformView(t),e.clientX-this.lastTouches[0].X==0&&e.clientY-this.lastTouches[0].Y==0||(this.moved=!0),this.lastTouches[0].X=e.clientX,this.lastTouches[0].Y=e.clientY}}MouseWheel(t){if(!this.LockZoom){t.preventDefault();let s=1+.2*Math.max(-1,Math.min(1,t.wheelDelta||-t.detail)),i=-(t.offsetX*s-t.offsetX),o=-(t.offsetY*s-t.offsetY),n=e.BaseTypes.M3.Identity;n.Scale(s,s),n.Translate(i,o),this.systemRenderer.TransformView(n)}}Touchend(t){var s;1==t.touches.length?(this.lastTouches[0]=null,this.moved||null===(s=this.selectionManager)||void 0===s||s.Click(new e.BaseTypes.Point(t.touches[0].clientX,t.touches[0].clientY)),this.moved=!1):0==t.touches.length&&(this.lastTouches[0]=null,this.lastTouches[1]=null),this.lastMiddlePoint=null}Touchmove(t){if(1==t.touches.length){if(!this.LockPan){if(t.preventDefault(),null!=this.lastTouches[0]){let s=e.BaseTypes.M3.Identity;s.Translate(t.changedTouches[0].clientX-this.lastTouches[0].X,t.changedTouches[0].clientY-this.lastTouches[0].Y),this.systemRenderer.TransformView(s),t.changedTouches[0].clientX-this.lastTouches[0].X==0&&t.changedTouches[0].clientY-this.lastTouches[0].Y==0||(this.moved=!0)}this.lastTouches[0]=new e.BaseTypes.Point,this.lastTouches[0].X=t.changedTouches[0].clientX,this.lastTouches[0].Y=t.changedTouches[0].clientY}}else if(2==t.touches.length&&!this.LockZoom){if(t.preventDefault(),null!=this.lastTouches[0]&&null!=this.lastTouches[1]){let s=e.BaseTypes.M3.Identity,i=new e.BaseTypes.Point((t.touches[0].clientX+t.touches[1].clientX)/2,(t.touches[0].clientY+t.touches[1].clientY)/2),o=new e.BaseTypes.Point(t.touches[0].clientX-i.X,t.touches[0].clientY-i.Y),n=new e.BaseTypes.Point(t.touches[1].clientX-i.X,t.touches[1].clientY-i.Y),a=o.Length()/this.lastTouches[0].Sub(i).Length(),r=n.Length()/this.lastTouches[1].Sub(i).Length();s.Scale(a*r,a*r);let l=t.target.getBoundingClientRect();s.Translate(i.X-l.x-(i.X-l.x)*a*r,i.Y-l.y-(i.Y-l.y)*a*r),null!=this.lastMiddlePoint&&s.Translate(i.X-this.lastMiddlePoint.X,i.Y-this.lastMiddlePoint.Y),this.systemRenderer.TransformView(s),this.lastMiddlePoint=i}this.lastTouches[0]=new e.BaseTypes.Point,this.lastTouches[1]=new e.BaseTypes.Point,this.lastTouches[0].X=t.touches[0].clientX,this.lastTouches[0].Y=t.touches[0].clientY,this.lastTouches[1].X=t.touches[1].clientX,this.lastTouches[1].Y=t.touches[1].clientY}}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,e,t;XTS=TcHmi.XTS||(TcHmi.XTS={}),e=XTS.BaseTypes||(XTS.BaseTypes={}),(t=e.ModuleType||(e.ModuleType={}))[t.Unknown=0]="Unknown",t[t.__START_OF_AT__=1]="__START_OF_AT__",t[t.AT2000_0250=2]="AT2000_0250",t[t.AT2001_0250=3]="AT2001_0250",t[t.AT2050_0500=4]="AT2050_0500",t[t.AT2050_0501=5]="AT2050_0501",t[t.AT2020_0250=6]="AT2020_0250",t[t.AT2025_0250=7]="AT2025_0250",t[t.AT2040_0250=8]="AT2040_0250",t[t.AT2021_0250=9]="AT2021_0250",t[t.AT2026_0250=10]="AT2026_0250",t[t.AT2041_0250=11]="AT2041_0250",t[t.AT2000_0233=12]="AT2000_0233",t[t.AT2002_0249=13]="AT2002_0249",t[t.AT2002_0250=14]="AT2002_0250",t[t.AT2042_0250=15]="AT2042_0250",t[t.__END_OF_AT__=16]="__END_OF_AT__",t[t.__START_OF_ATH__=256]="__START_OF_ATH__",t[t.ATH2000_0250=257]="ATH2000_0250",t[t.ATH2050_0500=258]="ATH2050_0500",t[t.ATH2050_0501=259]="ATH2050_0501",t[t.__END_OF_ATH__=260]="__END_OF_ATH__",t[t.__START_OF_EHM__=512]="__START_OF_EHM__",t[t.EHM0241_0250=513]="EHM0241_0250",t[t.__END_OF_EHM__=514]="__END_OF_EHM__"}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,e,t;XTS=TcHmi.XTS||(TcHmi.XTS={}),e=XTS.BaseTypes||(XTS.BaseTypes={}),(t=e.RailSystem||(e.RailSystem={}))[t.Normal=0]="Normal",t[t.Blackline=1]="Blackline"}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,e,t;XTS=TcHmi.XTS||(TcHmi.XTS={}),e=XTS.BaseTypes||(XTS.BaseTypes={}),(t=e.PathType||(e.PathType={}))[t.Straight=0]="Straight",t[t.Circular=1]="Circular",t[t.Free=2]="Free"}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,e,t;XTS=TcHmi.XTS||(TcHmi.XTS={}),e=XTS.BaseTypes||(XTS.BaseTypes={}),(t=e.MoverType||(e.MoverType={}))[t.UserSpecific=0]="UserSpecific",t[t.AT9011_0050=1]="AT9011_0050",t[t.AT9011_0070=2]="AT9011_0070",t[t.AT9012_0050=3]="AT9012_0050",t[t.AT9014_0055=4]="AT9014_0055",t[t.AT9014_0070=5]="AT9014_0070",t[t.ATH9011_0075=256]="ATH9011_0075",t[t.Hepco=999]="Hepco"}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(e){let t;!function(e){e[e.Driver=0]="Driver",e[e.Encoder=1]="Encoder"}(t=e.ModuleSide||(e.ModuleSide={})),e.ModuleSideUtil=class{static Invert(e){return e==t.Encoder?t.Driver:t.Encoder}}})((XTS=TcHmi.XTS||(TcHmi.XTS={})).BaseTypes||(XTS.BaseTypes={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;((XTS=TcHmi.XTS||(TcHmi.XTS={})).Server||(XTS.Server={})).ServerConnection=class{constructor(e="Local",t=16){this.moverPositions=[],this.partTransformations=[],this.moverIds=[],this.moduleDriveStates=[],this.refreshRate=16,this.moverPositionChanged=[],this.moduleDriveStateChanged=[],this.partTransformationChanged=[],this.targetName=e,this.refreshRate=t,this.moverPosSubscriptionId=null,this.partTransformationSubscriptionId=null}get XtsModel(){return this.xtsModel}get TargetName(){return this.targetName}get MoverPositions(){return this.moverPositions}get PartTransformations(){return this.partTransformations}get MoverIds(){return this.moverIds}get RefreshRate(){return this.refreshRate}OnPartTransformationChanged(e){return this.partTransformationChanged.push(e),()=>this.partTransformationChanged.splice(this.partTransformationChanged.indexOf(e),1)}OnMoverPositionChanged(e){return this.moverPositionChanged.push(e),()=>this.moverPositionChanged.splice(this.moverPositionChanged.indexOf(e),1)}OnModuleDriveStatesChanged(e){return this.moduleDriveStateChanged.push(e),()=>this.moduleDriveStateChanged.splice(this.moduleDriveStateChanged.indexOf(e),1)}set RefreshRate(e){e<1?TcHmi.Log.error("XTS View: The RefreshRate has to be greater than 1"):e!=this.refreshRate&&(this.refreshRate=e,this.SetMoverPositionSubscription(),this.SetPartTransformationSubscription())}UpdateModel(e){var t={requestType:"ReadWrite",commands:[{commandOptions:["SendErrorMessage","SendWriteValue"],symbol:"TcXtsHmiServerExtension.XtsModel",writeValue:{targetSystem:this.TargetName}}]};TcHmi.Server.requestEx(t,{timeout:1e4},(t=>{var s=this.RequestErrorHandler(t);s&&(this.xtsModel=s.readValue,null==e||e.call(this,this.xtsModel))}))}SetMoverPositionSubscription(){this.UnsubscribeMoverPosition();let e=[{commandOptions:["SendErrorMessage","SendWriteValue"],symbol:"TcXtsHmiServerExtension.MoverPositions",writeValue:{targetSystem:this.TargetName}}];this.moverPosSubscriptionId=TcHmi.Server.subscribeEx(e,this.refreshRate,{timeout:1e4,parallel:!0},(e=>{var t=this.RequestErrorHandler(e);t&&(this.moverPositions=t.readValue,this.moverPositionChanged.forEach((e=>e(this.moverPositions))))}))}UnsubscribeMoverPosition(){this.moverPosSubscriptionId&&(TcHmi.Server.unsubscribeEx(this.moverPosSubscriptionId,{timeout:1e4},null),this.moverPosSubscriptionId=null)}SetModuleDriveStateSubscription(){this.UnsubscribeModuleDriveStates();let e=[{commandOptions:["SendErrorMessage","SendWriteValue"],symbol:"TcXtsHmiServerExtension.ModuleDriveStates",writeValue:{targetSystem:this.TargetName}}];this.moduleDriveStatesSubId=TcHmi.Server.subscribeEx(e,this.refreshRate,{timeout:1e4,parallel:!0},(e=>{var t=this.RequestErrorHandler(e);t&&(this.moduleDriveStates=t.readValue,this.moduleDriveStateChanged.forEach((e=>e(this.moduleDriveStates))))}))}UnsubscribeModuleDriveStates(){this.moduleDriveStatesSubId&&(TcHmi.Server.unsubscribeEx(this.moduleDriveStatesSubId,{timeout:1e4},null),this.moduleDriveStatesSubId=null)}SetPartTransformationSubscription(){this.UnsubscribePartTransformation();let e=[{commandOptions:["SendErrorMessage","SendWriteValue"],symbol:"TcXtsHmiServerExtension.PartTransformations",writeValue:{targetSystem:this.TargetName}}];this.partTransformationSubscriptionId=TcHmi.Server.subscribeEx(e,this.refreshRate,{timeout:1e4},(e=>{var t=this.RequestErrorHandler(e);t&&(this.partTransformations=t.readValue,this.partTransformationChanged.forEach((e=>e(this.partTransformations))))}))}UnsubscribePartTransformation(){this.partTransformationSubscriptionId&&(TcHmi.Server.unsubscribeEx(this.partTransformationSubscriptionId,{timeout:1e4},null),this.partTransformationSubscriptionId=null)}RequestErrorHandler(e){if(e.error!==TcHmi.Errors.NONE)return TcHmi.Log.error('XTS View: HMI Server response with Error "'+e.details.message+'"'),null;var t=e.response;if(!t||void 0!==t.error)return TcHmi.Log.error('XTS View: HMI Server response with Error "'+t.error+'"'),null;var s=t.commands;return void 0===s?null:s[0]||void 0===s[0].error?e.response.commands[0]:(TcHmi.Log.error('XTS View: HMI Server response with Error "'+s[0].error+'", reason: "'+s[0].error.reason+'"'),null)}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={})}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e{static get PixelRealityScale(){return e.pixelRealityScale}get Img(){return this.img}get Side(){return this.side}get Railsystem(){return this.railsystem}get ModuleType(){return this.moduleType}get ModuleLength(){return this.moduleLength}get StartAngle(){return this.startAngle}get StartPoint(){return this.startPoint}get EndAngle(){return this.endAngle}get EndPoint(){return this.endPoint}get Width(){return this.width}get Height(){return this.height}get PathType(){return this.pathType}get XScaling(){return this.xScaling}get YScaling(){return this.yScaling}get PointCloud(){return this.pointCloud}static GetMetaDataByModuleType(t,s=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,i=TcHmi.XTS.BaseTypes.RailSystem.Normal){let o=e.allModules[0];for(let e=0;e<this.allModules.length;e++){let n=this.allModules[e];n.moduleType==t&&n.side==s&&n.railsystem==i&&(o=n)}return o}static Initialize(t){e.InitPointClouds(),e.InitializeMetaData(t)}static InitPointClouds(){let t=[];for(let e=0;e<Controls.PointCloud.AT2050_0500_Points.length;e+=2)t.push(new TcHmi.Common.BaseTypes.Point(Controls.PointCloud.AT2050_0500_Points[e],Controls.PointCloud.AT2050_0500_Points[e+1]));e.pointCloud500=t,t=[];for(let e=0;e<Controls.PointCloud.AT2050_0501_Points.length;e+=2)t.push(new TcHmi.Common.BaseTypes.Point(Controls.PointCloud.AT2050_0501_Points[e],Controls.PointCloud.AT2050_0501_Points[e+1]));e.pointCloud501=t,t=new Array(Controls.PointCloud.AT2050_0500_Points.length/2);for(let e=0,s=0;e<Controls.PointCloud.AT2050_0500_Points.length;e+=2,s++)t[s]=new TcHmi.Common.BaseTypes.Point(-Controls.PointCloud.AT2050_0500_Points[e],Controls.PointCloud.AT2050_0500_Points[e+1]);e.pointCloud500N=t,t=new Array(Controls.PointCloud.AT2050_0501_Points.length/2);for(let e=0,s=0;e<Controls.PointCloud.AT2050_0501_Points.length;e+=2,s++)t[s]=new TcHmi.Common.BaseTypes.Point(-Controls.PointCloud.AT2050_0501_Points[e],Controls.PointCloud.AT2050_0501_Points[e+1]);e.pointCloud501N=t}static InitializeMetaData(t){e.allModules=[],e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2001_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2001-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(500,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,118),width:500,height:312,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2000_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2000-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(500,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,118),width:500,height:270,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2050_0500,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2050-0500-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(468,118),endAngle:-90,endPoint:new TcHmi.Common.BaseTypes.Point(118,385),width:486,height:385,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud500N})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2050_0501,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2050-0501-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(385,118),endAngle:-90,endPoint:new TcHmi.Common.BaseTypes.Point(118,468),width:385,height:486,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud501N})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2020_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2020-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(532,118),endAngle:-22.5,endPoint:new TcHmi.Common.BaseTypes.Point(45,215),width:532,height:356,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2021_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2021-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(532,118),endAngle:-22.5,endPoint:new TcHmi.Common.BaseTypes.Point(45,215),width:532,height:356,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2025_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2025-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(544,206),endAngle:22.5,endPoint:new TcHmi.Common.BaseTypes.Point(57.5,109),width:544,height:358,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2026_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2026-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(544,206),endAngle:22.5,endPoint:new TcHmi.Common.BaseTypes.Point(57.5,109),width:544,height:400,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2040_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2040-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(530,118),endAngle:-45,endPoint:new TcHmi.Common.BaseTypes.Point(80,302),width:530,height:412,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2041_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2041-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(530,118),endAngle:-45,endPoint:new TcHmi.Common.BaseTypes.Point(80,302),width:530,height:412,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2042_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2042-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(528,118),endAngle:-45,endPoint:new TcHmi.Common.BaseTypes.Point(84,302),width:530,height:412,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2000_0233,moduleLength:233,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2000-0233-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(466,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,118),width:466,height:270,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2002_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2002-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(500,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,118),width:500,height:360,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2002_0249,moduleLength:249,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2002-0249-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(498,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,118),width:498,height:360,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2001_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2001-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(500,118),width:500,height:312,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2000_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2000-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(500,118),width:500,height:270,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2050_0500,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2050-0500-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(18,118),endAngle:90,endPoint:new TcHmi.Common.BaseTypes.Point(368,385),width:486,height:385,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud500})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2050_0501,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2050-0501-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:90,endPoint:new TcHmi.Common.BaseTypes.Point(267,468),width:385,height:486,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud501})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2020_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2020-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:22.5,endPoint:new TcHmi.Common.BaseTypes.Point(487,215),width:532,height:356,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2021_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2021-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:22.5,endPoint:new TcHmi.Common.BaseTypes.Point(487,215),width:532,height:356,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2025_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2025-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,206),endAngle:-22.5,endPoint:new TcHmi.Common.BaseTypes.Point(487,109),width:544,height:358,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2026_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2026-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,206),endAngle:-22.5,endPoint:new TcHmi.Common.BaseTypes.Point(487,109),width:544,height:400,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2040_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2040-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:45,endPoint:new TcHmi.Common.BaseTypes.Point(448,303),width:530,height:412,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2041_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2041-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:45,endPoint:new TcHmi.Common.BaseTypes.Point(448,303),width:530,height:412,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2042_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2042-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(19,118),endAngle:45,endPoint:new TcHmi.Common.BaseTypes.Point(464,303),width:548,height:411,pathType:TcHmi.XTS.BaseTypes.PathType.Circular,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2000_0233,moduleLength:233,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2000-0233-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(466,118),width:466,height:270,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2002_0250,moduleLength:233,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2000-0233-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(466,118),width:466,height:270,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2002_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2002-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(500,118),width:500,height:360,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.AT2002_0249,moduleLength:249,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/AT2002-0249-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,118),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(498,118),width:498,height:360,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2000_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2000-0250-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,138),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(500,138),width:500,height:282,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2050_0500,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2050-0500-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,137),endAngle:90,endPoint:new TcHmi.Common.BaseTypes.Point(349,404),width:487,height:404,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud500})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Encoder,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2050_0501,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2050-0501-FrontSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(0,137),endAngle:90,endPoint:new TcHmi.Common.BaseTypes.Point(266,487),width:404,height:487,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud501})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2000_0250,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2000-0250-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(500,138),endAngle:0,endPoint:new TcHmi.Common.BaseTypes.Point(0,138),width:500,height:282,pathType:TcHmi.XTS.BaseTypes.PathType.Straight,xScaling:2,yScaling:2,pointCloud:[]})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2050_0500,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2050-0500-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(487,137),endAngle:-90,endPoint:new TcHmi.Common.BaseTypes.Point(138,404),width:487,height:404,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud500N})),e.allModules.push(Object.assign(new e,{side:TcHmi.XTS.BaseTypes.ModuleSide.Driver,railsystem:TcHmi.XTS.BaseTypes.RailSystem.Normal,moduleType:TcHmi.XTS.BaseTypes.ModuleType.ATH2050_0501,moduleLength:250,img:TcHmi.Common.Utilities.ImageHandler.GetImage(t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH2050-0501-BackSide.png"),startAngle:0,startPoint:new TcHmi.Common.BaseTypes.Point(404,138),endAngle:-90,endPoint:new TcHmi.Common.BaseTypes.Point(138,487),width:404,height:487,pathType:TcHmi.XTS.BaseTypes.PathType.Free,xScaling:2,yScaling:2,pointCloud:e.pointCloud501N}))}}e.pixelRealityScale=2,Controls.ModuleMetaData=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e{}e.AT2050_0500_Points=[0,0,.1,0,.2,0,.3,0,.4,0,.5,0,.6,0,.7,0,.8,0,.9,0,1,0,1.1,0,1.2,0,1.3,0,1.4,0,1.5,0,1.6,1e-7,1.7,1e-7,1.8,1e-7,1.9,1e-7,2,2e-7,2.1,2e-7,2.2,3e-7,2.3,4e-7,2.4,5e-7,2.5,6e-7,2.6,7e-7,2.7,9e-7,2.8,1e-6,2.9,12e-7,3,15e-7,3.1,17e-7,3.2,2e-6,3.3,24e-7,3.4,28e-7,3.5,32e-7,3.6,37e-7,3.7,42e-7,3.8,48e-7,3.9,55e-7,4,62e-7,4.1,7e-6,4.2,79e-7,4.3,89e-7,4.4,1e-5,4.5,111e-7,4.6,124e-7,4.7,138e-7,4.8,153e-7,4.9,169e-7,5,187e-7,5.1,207e-7,5.2,227e-7,5.3,25e-6,5.4,274e-7,5.5,3e-5,5.6,328e-7,5.7,358e-7,5.8,39e-6,5.9,424e-7,6,461e-7,6.099999999,5e-5,6.199999999,541e-7,6.299999999,586e-7,6.399999999,633e-7,6.499999999,683e-7,6.599999999,736e-7,6.699999999,793e-7,6.799999999,853e-7,6.899999998,916e-7,6.999999998,983e-7,7.099999998,1054e-7,7.199999998,1129e-7,7.299999997,1209e-7,7.399999997,1292e-7,7.499999997,138e-6,7.599999996,1473e-7,7.699999996,157e-6,7.799999995,1673e-7,7.899999995,1781e-7,7.999999994,1894e-7,8.099999993,2013e-7,8.199999992,2138e-7,8.299999992,2268e-7,8.399999991,2405e-7,8.49999999,2549e-7,8.599999988,2699e-7,8.699999987,2856e-7,8.799999986,302e-6,8.899999984,3192e-7,8.999999983,3371e-7,9.099999981,3558e-7,9.199999979,3753e-7,9.299999977,3957e-7,9.399999975,4169e-7,9.499999972,439e-6,9.59999997,462e-6,9.699999967,486e-6,9.799999964,5109e-7,9.89999996,5368e-7,9.999999957,5638e-7,10.09999995,5918e-7,10.19999995,6209e-7,10.29999994,6511e-7,10.39999994,6825e-7,10.49999993,7151e-7,10.59999993,7488e-7,10.69999992,7838e-7,10.79999992,8201e-7,10.89999991,8577e-7,10.9999999,8967e-7,11.09999989,937e-6,11.19999988,9787e-7,11.29999987,.0010219,11.39999986,.0010666,11.49999985,.0011128,11.59999984,.0011606,11.69999983,.0012099,11.79999982,.0012609,11.8999998,.0013136,11.99999979,.001368,12.09999977,.0014242,12.19999976,.0014821,12.29999974,.0015419,12.39999972,.0016036,12.4999997,.0016672,12.59999968,.0017327,12.69999965,.0018003,12.79999963,.0018699,12.8999996,.0019416,12.99999958,.0020155,13.09999955,.0020916,13.19999952,.0021699,13.29999949,.0022504,13.39999945,.0023333,13.49999941,.0024186,13.59999938,.0025063,13.69999934,.0025965,13.79999929,.0026892,13.89999925,.0027845,13.9999992,.0028825,14.09999915,.0029831,14.1999991,.0030864,14.29999904,.0031925,14.39999898,.0033015,14.49999892,.0034133,14.59999885,.0035281,14.69999878,.0036459,14.79999871,.0037668,14.89999863,.0038908,14.99999855,.0040179,15.09999847,.0041483,15.19999838,.004282,15.29999828,.004419,15.39999818,.0045595,15.49999808,.0047034,15.59999797,.0048508,15.69999786,.0050018,15.79999774,.0051565,15.89999761,.0053148,15.99999748,.005477,16.09999734,.005643,16.1999972,.0058129,16.29999705,.0059868,16.39999689,.0061647,16.49999672,.0063467,16.59999655,.0065329,16.69999637,.0067233,16.79999618,.0069181,16.89999598,.0071172,16.99999577,.0073207,17.09999556,.0075288,17.19999533,.0077414,17.2999951,.0079587,17.39999485,.0081807,17.49999459,.0084076,17.59999432,.0086393,17.69999404,.0088759,17.79999375,.0091176,17.89999345,.0093643,17.99999313,.0096163,18.0999928,.0098735,18.19999245,.010136,18.2999921,.0104039,18.39999172,.0106772,18.49999133,.0109562,18.59999093,.0112408,18.69999051,.0115311,18.79999007,.0118272,18.89998961,.0121291,18.99998914,.0124371,19.09998865,.012751,19.19998813,.0130711,19.2999876,.0133974,19.39998705,.01373,19.49998647,.014069,19.59998588,.0144145,19.69998526,.0147665,19.79998461,.0151251,19.89998395,.0154904,19.99998325,.0158626,20.09998253,.0162417,20.19998179,.0166277,20.29998102,.0170208,20.39998022,.0174211,20.49997939,.0178287,20.59997852,.0182436,20.69997763,.0186659,20.79997671,.0190958,20.89997575,.0195333,20.99997476,.0199786,21.09997373,.0204316,21.19997267,.0208926,21.29997157,.0213616,21.39997043,.0218387,21.49996926,.0223239,21.59996804,.0228175,21.69996678,.0233195,21.79996547,.02383,21.89996413,.024349,21.99996274,.0248768,22.0999613,.0254134,22.19995981,.0259588,22.29995827,.0265133,22.39995668,.0270768,22.49995504,.0276496,22.59995335,.0282317,22.6999516,.0288231,22.79994979,.0294241,22.89994793,.0300347,22.999946,.0306551,23.09994402,.0312852,23.19994197,.0319253,23.29993986,.0325755,23.39993768,.0332358,23.49993543,.0339064,23.59993311,.0345873,23.69993072,.0352788,23.79992825,.0359808,23.89992571,.0366935,23.9999231,.0374171,24.0999204,.0381515,24.19991762,.038897,24.29991476,.0396537,24.39991181,.0404216,24.49990877,.0412009,24.59990565,.0419918,24.69990243,.0427942,24.79989911,.0436083,24.8998957,.0444343,24.99989219,.0452723,25.09988858,.0461223,25.19988486,.0469845,25.29988104,.0478591,25.3998771,.048746,25.49987306,.0496456,25.59986889,.0505578,25.69986462,.0514828,25.79986022,.0524207,25.8998557,.0533716,25.99985105,.0543358,26.09984627,.0553132,26.19984136,.056304,26.29983632,.0573083,26.39983114,.0583263,26.49982581,.0593581,26.59982035,.0604038,26.69981473,.0614635,26.79980897,.0625373,26.89980304,.0636255,26.99979697,.0647281,27.09979073,.0658452,27.19978432,.066977,27.29977775,.0681235,27.399771,.069285,27.49976408,.0704616,27.59975698,.0716534,27.69974969,.0728604,27.79974222,.074083,27.89973455,.0753211,27.99972669,.0765749,28.09971863,.0778446,28.19971037,.0791302,28.29970189,.080432,28.39969321,.08175,28.4996843,.0830844,28.59967518,.0844353,28.69966583,.0858029,28.79965624,.0871873,28.89964643,.0885886,28.99963637,.0900069,29.09962606,.0914425,29.19961551,.0928954,29.29960469,.0943658,29.39959362,.0958538,29.49958229,.0973596,29.59957068,.0988833,29.69955879,.100425,29.79954663,.1019848,29.89953417,.103563,29.99952142,.1051597,30.09950838,.106775,30.19949503,.108409,30.29948136,.1100619,30.39946739,.1117338,30.49945309,.1134249,30.59943846,.1151353,30.69942349,.1168652,30.79940819,.1186147,30.89939254,.1203839,30.99937653,.1221731,31.09936016,.1239823,31.19934343,.1258116,31.29932632,.1276613,31.39930883,.1295315,31.49929095,.1314224,31.59927268,.133334,31.699254,.1352665,31.79923492,.1372201,31.89921542,.139195,31.99919549,.1411912,32.09917513,.1432089,32.19915433,.1452483,32.29913309,.1473096,32.39911138,.1493928,32.49908922,.1514981,32.59906658,.1536257,32.69904347,.1557758,32.79901986,.1579484,32.89899576,.1601438,32.99897115,.162362,33.09894603,.1646033,33.19892039,.1668678,33.29889422,.1691557,33.3988675,.171467,33.49884024,.173802,33.59881241,.1761608,33.69878402,.1785436,33.79875505,.1809505,33.89872549,.1833816,33.99869534,.1858372,34.09866458,.1883174,34.1986332,.1908224,34.29860119,.1933522,34.39856855,.1959071,34.49853526,.1984872,34.59850131,.2010927,34.69846669,.2037237,34.79843139,.2063804,34.89839541,.209063,34.99835872,.2117716,35.09832132,.2145063,35.19828319,.2172674,35.29824433,.2200549,35.39820472,.2228691,35.49816436,.2257101,35.59812322,.2285781,35.69808131,.2314732,35.7980386,.2343955,35.89799508,.2373454,35.99795074,.2403228,36.09790558,.243328,36.19785957,.2463611,36.2978127,.2494223,36.39776496,.2525118,36.49771635,.2556297,36.59766683,.2587762,36.69761641,.2619514,36.79756506,.2651555,36.89751278,.2683887,36.99745955,.2716512,37.09740535,.274943,37.19735018,.2782644,37.29729402,.2816155,37.39723684,.2849964,37.49717865,.2884075,37.59711942,.2918487,37.69705914,.2953203,37.7969978,.2988225,37.89693537,.3023554,37.99687185,.3059191,38.09680722,.3095139,38.19674145,.3131399,38.29667455,.3167973,38.39660649,.3204862,38.49653725,.3242068,38.59646682,.3279592,38.69639518,.3317437,38.79632232,.3355604,38.89624822,.3394094,38.99617285,.343291,39.09609622,.3472053,39.19601829,.3511524,39.29593905,.3551325,39.39585848,.3591459,39.49577657,.3631926,39.59569329,.3672728,39.69560863,.3713868,39.79552257,.3755346,39.89543509,.3797164,39.99534618,.3839324,40.09525581,.3881828,40.19516397,.3924677,40.29507063,.3967873,40.39497577,.4011418,40.49487939,.4055313,40.59478145,.409956,40.69468194,.414416,40.79458084,.4189116,40.89447812,.4234429,40.99437377,.4280101,41.09426776,.4326133,41.19416008,.4372527,41.29405071,.4419285,41.39393962,.4466408,41.49382679,.4513899,41.5937122,.4561758,41.69359582,.4609987,41.79347765,.4658589,41.89335765,.4707564,41.9932358,.4756915,42.09311208,.4806643,42.19298646,.485675,42.29285893,.4907237,42.39272946,.4958106,42.49259803,.5009359,42.59246461,.5060998,42.69232919,.5113024,42.79219173,.5165439,42.89205221,.5218244,42.99191061,.5271442,43.0917669,.5325033,43.19162106,.537902,43.29147307,.5433404,43.3913229,.5488187,43.49117052,.5543371,43.59101591,.5598957,43.69085904,.5654947,43.79069989,.5711342,43.89053844,.5768145,43.99037464,.5825357,44.09020849,.5882979,44.19003995,.5941013,44.28986899,.5999461,44.38969559,.6058325,44.48951972,.6117606,44.58934136,.6177306,44.68916047,.6237427,44.78897703,.629797,44.88879101,.6358936,44.98860238,.6420328,45.08841112,.6482148,45.18821719,.6544396,45.28802056,.6607075,45.38782121,.6670185,45.48761911,.673373,45.58741423,.679771,45.68720653,.6862127,45.786996,.6926983,45.88678259,.6992279,45.98656628,.7058017,46.08634704,.7124199,46.18612483,.7190826,46.28589963,.72579,46.3856714,.7325423,46.48544012,.7393396,46.58520575,.746182,46.68496826,.7530698,46.78472761,.7600032,46.88448378,.7669821,46.98423674,.774007,47.08398644,.7810778,47.18373286,.7881947,47.28347597,.795358,47.38321572,.8025678,47.4829521,.8098242,47.58268506,.8171274,47.68241457,.8244775,47.78214059,.8318748,47.8818631,.8393194,47.98158205,.8468114,48.08129742,.854351,48.18100916,.8619384,48.28071724,.8695737,48.38042163,.8772571,48.48012229,.8849887,48.57981919,.8927687,48.67951229,.9005973,48.77920155,.9084745,48.87888693,.9164007,48.97856841,.9243758,49.07824593,.9324002,49.17791948,.9404739,49.277589,.9485971,49.37725446,.95677,49.47691583,.9649926,49.57657305,.9732652,49.67622611,.981588,49.77587496,.989961,49.87551955,.9983845,49.97515986,1.0068585,50.07479583,1.0153833,50.17442744,1.0239589,50.27405465,1.0325856,50.3736774,1.0412636,50.47329568,1.0499928,50.57290942,1.0587736,50.6725186,1.067606,50.77212317,1.0764902,50.87172309,1.0854264,50.97131832,1.0944147,51.07090882,1.1034552,51.17049456,1.1125482,51.27007547,1.1216937,51.36965154,1.1308919,51.4692227,1.140143,51.56878893,1.1494471,51.66835018,1.1588043,51.7679064,1.1682149,51.86745755,1.1776789,51.9670036,1.1871965,52.06654449,1.1967678,52.16608019,1.206393,52.26561064,1.2160723,52.36513582,1.2258058,52.46465566,1.2355935,52.56417013,1.2454358,52.66367919,1.2553326,52.76318278,1.2652842,52.86268087,1.2752908,52.9621734,1.2853523,53.06166034,1.2954691,53.16114164,1.3056412,53.26061725,1.3158687,53.36008712,1.3261519,53.45955122,1.3364908,53.55900949,1.3468856,53.65846189,1.3573365,53.75790836,1.3678435,53.85734888,1.3784069,53.95678338,1.3890267,54.05621181,1.3997031,54.15563415,1.4104362,54.25505032,1.4212262,54.35446029,1.4320731,54.45386402,1.4429773,54.55326144,1.4539387,54.65265251,1.4649575,54.75203719,1.4760338,54.85141542,1.4871678,54.95078716,1.4983597,55.05015236,1.5096095,55.14951096,1.5209173,55.24886292,1.5322834,55.34820819,1.5437078,55.44754672,1.5551907,55.54687845,1.5667322,55.64620334,1.5783324,55.74552134,1.5899915,55.8448324,1.6017096,55.94413646,1.6134868,56.04343348,1.6253233,56.1427234,1.6372192,56.24200618,1.6491745,56.34128175,1.6611895,56.44055008,1.6732642,56.5398111,1.6853989,56.63906476,1.6975935,56.73831102,1.7098483,56.83754982,1.7221634,56.93678111,1.7345388,57.03600483,1.7469747,57.13522094,1.7594713,57.23442938,1.7720286,57.33363009,1.7846468,57.43282302,1.7973259,57.53200813,1.8100662,57.63118535,1.8228677,57.73035463,1.8357306,57.82951592,1.8486549,57.92866916,1.8616409,58.0278143,1.8746885,58.12695128,1.8877979,58.22608006,1.9009693,58.32520057,1.9142028,58.42431276,1.9274984,58.52341658,1.9408563,58.62251196,1.9542766,58.72159886,1.9677594,58.82067722,1.9813048,58.91974698,1.994913,59.01880809,2.008584,59.11786048,2.022318,59.21690412,2.036115,59.31593893,2.0499752,59.41496486,2.0638987,59.51398186,2.0778857,59.61298987,2.0919361,59.71198883,2.1060501,59.81097869,2.1202278,59.90995938,2.1344694,60.00893085,2.1487749,60.10789305,2.1631444,60.20684591,2.1775781,60.30578938,2.192076,60.4047234,2.2066382,60.50364792,2.2212649,60.60256286,2.2359562,60.70146819,2.2507121,60.80036383,2.2655327,60.89924973,2.2804182,60.99812583,2.2953687,61.09699207,2.3103842,61.1958484,2.3254649,61.29469475,2.3406108,61.39353107,2.355822,61.4923573,2.3710987,61.59117337,2.3864409,61.68997923,2.4018487,61.78877482,2.4173223,61.88756007,2.4328617,61.98633494,2.448467,62.08509936,2.4641383,62.18385327,2.4798757,62.2825966,2.4956792,62.38132931,2.5115491,62.48005133,2.5274853,62.5787626,2.543488,62.67746305,2.5595572,62.77615264,2.575693,62.87483129,2.5918956,62.97349896,2.6081649,63.07215557,2.6245012,63.17080106,2.6409044,63.26943538,2.6573747,63.36805847,2.6739121,63.46667026,2.6905168,63.56527069,2.7071887,63.66385971,2.7239281,63.76243725,2.7407349,63.86100324,2.7576092,63.95955763,2.7745512,64.05810036,2.791561,64.15663136,2.8086385,64.25515058,2.8257838,64.35365795,2.8429971,64.4521534,2.8602785,64.55063689,2.8776279,64.64910834,2.8950455,64.7475677,2.9125313,64.84601489,2.9300855,64.94444987,2.9477081,65.04287257,2.9653991,65.14128292,2.9831587,65.23968087,3.0009868,65.33806634,3.0188837,65.43643929,3.0368493,65.53479965,3.0548837,65.63314734,3.072987,65.73148232,3.0911593,65.82980452,3.1094006,65.92811388,3.127711,66.02641033,3.1460905,66.12469382,3.1645392,66.22296427,3.1830573,66.32122163,3.2016446,66.41946584,3.2203014,66.51769682,3.2390277,66.61591453,3.2578235,66.71411889,3.2766889,66.81230984,3.2956239,66.91048733,3.3146287,67.00865128,3.3337033,67.10680164,3.3528476,67.20493833,3.3720619,67.30306131,3.3913461,67.4011705,3.4107003,67.49926585,3.4301246,67.59734728,3.449619,67.69541475,3.4691836,67.79346817,3.4888184,67.8915075,3.5085234,67.98953267,3.5282988,68.08754361,3.5481446,68.18554026,3.5680608,68.28352256,3.5880475,68.38149045,3.6081048,68.47944386,3.6282326,68.57738273,3.648431,68.675307,3.6687001,68.7732166,3.68904,68.87111148,3.7094506,68.96899156,3.7299321,69.06685678,3.7504843,69.16470709,3.7711076,69.26254242,3.7918017,69.36036271,3.8125669,69.45816788,3.8334031,69.55595789,3.8543103,69.65373267,3.8752887,69.75149215,3.8963383,69.84923627,3.917459,69.94696497,3.938651,70.04467819,3.9599143,70.14237586,3.9812489,70.24005792,4.0026548,70.33772431,4.0241321,70.43537497,4.0456809,70.53300982,4.0673011,70.63062882,4.0889928,70.7282319,4.1107561,70.82581899,4.1325909,70.92339003,4.1544973,71.02094496,4.1764754,71.11848372,4.1985251,71.21600625,4.2206465,71.31351248,4.2428396,71.41100234,4.2651045,71.50847579,4.2874412,71.60593275,4.3098497,71.70337317,4.33233,71.80079698,4.3548822,71.89820411,4.3775063,71.99559452,4.4002023,72.09296813,4.4229702,72.19032488,4.4458102,72.28766471,4.4687221,72.38498757,4.491706,72.48229338,4.514762,72.57958209,4.5378901,72.67685363,4.5610902,72.77410795,4.5843624,72.87134498,4.6077068,72.96856465,4.6311234,73.06576692,4.6546121,73.16295171,4.6781729,73.26011897,4.701806,73.35726863,4.7255114,73.45440064,4.7492889,73.55151493,4.7731388,73.64861144,4.7970609,73.74569011,4.8210553,73.84275088,4.845122,73.93979369,4.869261,74.03681848,4.8934724,74.13382518,4.9177561,74.23081374,4.9421122,74.3277841,4.9665406,74.42473619,4.9910415,74.52166996,5.0156147,74.61858534,5.0402604,74.71548227,5.0649785,74.8123607,5.089769,74.90922057,5.1146319,75.00606181,5.1395673,75.10288436,5.1645752,75.19968817,5.1896555,75.29647317,5.2148083,75.3932393,5.2400336,75.48998652,5.2653313,75.58671474,5.2907016,75.68342393,5.3161443,75.78011401,5.3416596,75.87678493,5.3672473,75.97343662,5.3929076,76.07006904,5.4186403,76.16668212,5.4444456,76.26327579,5.4703235,76.35985001,5.4962738,76.45640471,5.5222966,76.55293984,5.548392,76.64945533,5.5745599,76.74595114,5.6008003,76.84242719,5.6271133,76.93888343,5.6534988,77.0353198,5.6799568,77.13173625,5.7064873,77.22813271,5.7330903,77.32450913,5.7597659,77.42086545,5.7865139,77.51720161,5.8133345,77.61351756,5.8402276,77.70981323,5.8671932,77.80608857,5.8942313,77.90234353,5.9213418,77.99857803,5.9485249,78.09479204,5.9757805,78.19098548,6.0031085,78.2871583,6.030509,78.38331045,6.057982,78.47944187,6.0855274,78.5755525,6.1131452,78.67164228,6.1408356,78.76771116,6.1685983,78.86375908,6.1964335,78.95978598,6.2243411,79.05579181,6.2523211,79.15177651,6.2803735,79.24774002,6.3084982,79.34368229,6.3366954,79.43960327,6.3649649,79.53550289,6.3933068,79.63138109,6.4217211,79.72723783,6.4502076,79.82307305,6.4787665,79.91888669,6.5073977,80.0146787,6.5361012,80.11044901,6.564877,80.20619758,6.5937251,80.30192434,6.6226455,80.39762925,6.651638,80.49331225,6.6807029,80.58897328,6.7098399,80.68461228,6.7390492,80.78022921,6.7683306,80.875824,6.7976842,80.9713966,6.82711,81.06694696,6.856608,81.16247502,6.886178,81.25798072,6.9158202,81.35346402,6.9455345,81.44892485,6.9753209,81.54436316,7.0051794,81.6397789,7.0351099,81.73517201,7.0651125,81.83054243,7.0951871,81.92589012,7.1253337,82.02121501,7.1555523,82.11651706,7.1858429,82.21179621,7.2162054,82.3070524,7.2466399,82.40228558,7.2771463,82.49749569,7.3077246,82.59268269,7.3383749,82.68784651,7.3690969,82.7829871,7.3998909,82.87810441,7.4307567,82.97319839,7.4616943,83.06826897,7.4927037,83.16331611,7.5237849,83.25833975,7.5549379,83.35333983,7.5861626,83.44831631,7.617459,83.54326913,7.6488272,83.63819823,7.6802671,83.73310356,7.7117786,83.82798506,7.7433619,83.92284269,7.7750167,84.01767638,7.8067432,84.11248609,7.8385413,84.20727176,7.870411,84.30203333,7.9023522,84.39677076,7.934365,84.49148398,7.9664494,84.58617294,7.9986053,84.68083759,8.0308326,84.77547788,8.0631315,84.87009375,8.0955018,84.96468515,8.1279435,85.05925202,8.1604567,85.15379431,8.1930413,85.24831196,8.2256973,85.34280493,8.2584246,85.43727315,8.2912233,85.53171658,8.3240933,85.62613516,8.3570346,85.72052883,8.3900473,85.81489755,8.4231312,85.90924126,8.4562863,86.0035599,8.4895127,86.09785342,8.5228103,86.19212177,8.5561792,86.28636489,8.5896192,86.38058274,8.6231303,86.47477524,8.6567126,86.56894236,8.690366,86.66308404,8.7240906,86.75720022,8.7578862,86.85129085,8.7917529,86.94535588,8.8256906,87.03939526,8.8596994,87.13340892,8.8937792,87.22739681,8.9279299,87.32135889,8.9621517,87.41529509,8.9964444,87.50920537,9.030808,87.60308968,9.0652425,87.69694795,9.099748,87.79078014,9.1343242,87.88458619,9.1689714,87.97836605,9.2036894,88.07211967,9.2384781,88.16584699,9.2733377,88.25954796,9.308268,88.35322252,9.3432691,88.44687063,9.3783409,88.54049223,9.4134834,88.63408726,9.4486966,88.72765567,9.4839805,88.82119741,9.519335,88.91471243,9.5547601,89.00820068,9.5902558,89.10166208,9.6258222,89.19509658,9.6614592,89.28850414,9.6971667,89.38188471,9.7329448,89.47523825,9.7687933,89.56856467,9.8047123,89.66186393,9.8407019,89.75513599,9.8767619,89.84838079,9.9128923,89.94159828,9.9490931,90.0347884,9.9853643,90.12795111,10.0217059,90.22108634,10.0581178,90.31419405,10.0946001,90.40727425,10.1311524,90.50032674,10.1677753,90.59335155,10.2044684,90.68634863,10.2412317,90.77931796,10.2780652,90.87225941,10.3149689,90.96517299,10.3519428,91.05805858,10.3889869,91.15091618,10.4261012,91.24374572,10.4632855,91.33654715,10.5005399,91.42932043,10.5378644,91.5220655,10.575259,91.6147823,10.6127236,91.70747091,10.6502578,91.80013103,10.6878624,91.89276272,10.7255369,91.98536593,10.7632813,92.07794062,10.8010957,92.17048672,10.83898,92.26300429,10.8769339,92.35549305,10.9149579,92.44795306,10.9530518,92.54038428,10.9912156,92.63278665,11.0294491,92.72516012,11.0677524,92.81750464,11.1061254,92.90982016,11.1445681,93.00210662,11.1830806,93.09436398,11.2216627,93.18659218,11.2603144,93.27879116,11.2990359,93.37096087,11.3378269,93.46310127,11.3766875,93.55521231,11.4156176,93.64729412,11.4546168,93.73934626,11.493686,93.83136886,11.5328247,93.9233619,11.5720329,94.01532526,11.6113106,94.10725892,11.6506578,94.19916284,11.6900744,94.29103697,11.7295604,94.38288125,11.7691158,94.47469564,11.8087406,94.56648003,11.8484347,94.65823446,11.8881981,94.74995883,11.9280307,94.8416531,11.9679326,94.93331721,12.0079037,95.02495112,12.0479441,95.11655477,12.0880536,95.20812821,12.128232,95.29967132,12.1684794,95.39118383,12.2087964,95.48266587,12.2491825,95.57411726,12.289638,95.66553817,12.3301623,95.75692844,12.3707556,95.84828804,12.4114179,95.9396169,12.4521492,96.03091497,12.4929495,96.12218253,12.533818,96.2134189,12.5747561,96.30462432,12.615763,96.39579875,12.6568389,96.48694214,12.6979835,96.57805444,12.739197,96.66913589,12.7804785,96.76018585,12.8218295,96.85120455,12.8632492,96.94219193,12.9047377,97.03314797,12.9462949,97.12407261,12.9879207,97.21496579,13.0296152,97.30582746,13.0713783,97.39665758,13.11321,97.48745609,13.1551102,97.57822273,13.1970794,97.66895779,13.2391169,97.75966112,13.2812227,97.85033264,13.323397,97.94097228,13.3656398,98.03158006,13.4079509,98.12215634,13.4503293,98.21270008,13.4927772,98.30321172,13.5352936,98.39369122,13.5778783,98.48413857,13.6205312,98.57455366,13.6632526,98.6649364,13.7060423,98.75528684,13.7489001,98.8456049,13.7918262,98.93589051,13.8348205,99.02614363,13.8778829,99.1163642,13.9210135,99.20655218,13.9642122,99.2967075,14.007479,99.38683013,14.0508139,99.47692028,14.0942161,99.56697731,14.1376872,99.65700146,14.1812263,99.74699272,14.2248334,99.83695102,14.2685084,99.92687629,14.3122514,100.0167685,14.3560623,100.1066276,14.3999411,100.1964535,14.4438877,100.2862462,14.4879022,100.3760057,14.5319844,100.4657318,14.5761344,100.5554246,14.6203521,100.645084,14.6646376,100.7347094,14.7089917,100.8243015,14.7534132,100.9138606,14.7979008,101.0033857,14.8424571,101.0928772,14.8870808,101.1823352,14.9317715,101.27176,14.9765286,101.3611502,15.0213549,101.4505065,15.0662487,101.539829,15.1112097,101.6291174,15.1562384,101.7183718,15.2013346,101.8075913,15.2464996,101.8967774,15.2917307,101.9859293,15.337029,102.075047,15.3823946,102.1641314,15.4278256,102.2531805,15.4733256,102.3421952,15.5188929,102.4311756,15.5645271,102.5201215,15.6102288,102.6090328,15.6559976,102.6979095,15.7018334,102.7867516,15.7477364,102.8755588,15.7937068,102.9643315,15.8397438,103.0530693,15.885848,103.1417724,15.9320191,103.2304405,15.9782571,103.3190737,16.0245621,103.407672,16.0709338,103.4962353,16.1173724,103.5847633,16.1638781,103.6732562,16.2104507,103.7617139,16.2570901,103.8501364,16.3037962,103.9385221,16.3505722,104.0268738,16.397412,104.1151902,16.4443184,104.2034711,16.4912915,104.2917181,16.5383282,104.379928,16.5854345,104.4681024,16.6326074,104.5562411,16.6798468,104.6443441,16.7271528,104.7324115,16.7745248,104.820443,16.8219637,104.9084389,16.8694685,104.996398,16.9170418,105.0843216,16.9646804,105.1722092,17.0123853,105.2600608,17.0601567,105.3478763,17.1079943,105.4356557,17.1558982,105.5233988,17.2038684,105.611107,17.2519021,105.6987776,17.3000046,105.7864119,17.3481734,105.8740098,17.3964083,105.9615713,17.4447094,106.0490962,17.4930766,106.1365846,17.5415098,106.2240364,17.5900092,106.3114515,17.6385745,106.3988305,17.6872046,106.4861721,17.7359021,106.573477,17.7846654,106.660745,17.8334946,106.7479761,17.8823897,106.8351703,17.9313507,106.9223276,17.9803773,107.0094477,18.02947,107.0965307,18.0786284,107.1835747,18.1278564,107.2705833,18.1771465,107.3575547,18.2265022,107.4444887,18.2759236,107.5313874,18.3254066,107.6182468,18.3749591,107.7050687,18.4245772,107.7918532,18.4742608,107.8786001,18.52401,107.9653096,18.5738243,108.0519813,18.6237044,108.1386152,18.67365,108.2252114,18.7236611,108.3117693,18.7737386,108.3982898,18.8238805,108.4847724,18.8740877,108.5712171,18.9243603,108.657623,18.9746995,108.7439916,19.0251025,108.8303231,19.0755693,108.9166159,19.126102,109.0028701,19.1767005,109.0890861,19.2273642,109.1752642,19.2780924,109.2614036,19.3288862,109.3475046,19.3797451,109.4335672,19.4306689,109.5195913,19.4816577,109.6055769,19.5327115,109.6915212,19.5838348,109.7774295,19.6350184,109.8633016,19.6862628,109.9491325,19.737576,110.0349248,19.788954,110.1206785,19.8403961,110.206393,19.8919037,110.2920687,19.9434757,110.3777053,19.9951126,110.4633029,20.0468142,110.5488614,20.0985804,110.6343804,20.1504123,110.7198606,20.2023079,110.8053015,20.2542679,110.8907032,20.3062925,110.9760657,20.3583815,111.0613887,20.4105349,111.1466723,20.4627528,111.2319166,20.5150349,111.3171225,20.5673785,111.4022878,20.6197892,111.4874133,20.6722644,111.5724992,20.7248036,111.657543,20.777412,111.7425495,20.8300799,111.8275165,20.8828109,111.9124393,20.935614,111.997329,20.9884687,112.0821801,21.041386,112.1669871,21.0943743,112.2517541,21.1474266,112.336481,21.2005429,112.4211678,21.2537232,112.5058144,21.3069674,112.5904204,21.360276,112.6749865,21.413648,112.7595123,21.4670838,112.8439973,21.5205842,112.9284425,21.5741473,113.012847,21.6277743,113.0972104,21.6814662,113.1815338,21.7352207,113.2658167,21.7890389,113.3500594,21.8429192,113.4342613,21.8968637,113.5184225,21.9508717,113.6025424,22.0049442,113.6866213,22.0590802,113.7706594,22.1132798,113.8546566,22.1675427,113.9386127,22.2218691,114.0225278,22.2762589,114.1064015,22.3307126,114.1902343,22.3852291,114.274026,22.4398089,114.3577763,22.4944519,114.4414854,22.5491582,114.5251532,22.6039277,114.6087796,22.6587604,114.6923645,22.7136562,114.7759075,22.7686159,114.8594094,22.8236379,114.9428702,22.8787221,115.0262889,22.9338702,115.1096665,22.9890804,115.1930018,23.0443544,115.2762898,23.0997011,115.3595414,23.1551012,115.442757,23.210554,115.525925,23.2660796,115.609051,23.321668,115.692135,23.3773192,115.7751769,23.4330331,115.8581767,23.4888097,115.9411344,23.544649,116.0240499,23.600551,116.1069231,23.6565156,116.189754,23.7125427,116.2725426,23.7686325,116.3552889,23.8247847,116.4379926,23.8809994,116.520654,23.9372766,116.6032727,23.9936162,116.6858489,24.0500182,116.7683825,24.1064825,116.8508732,24.1630095,116.9333214,24.2195985,117.0157268,24.2762498,117.0980895,24.3329632,117.1804092,24.389739,117.262686,24.4465769,117.3449198,24.503477,117.4271107,24.5604391,117.5092554,24.6174697,117.59136,24.6745561,117.6734208,24.7317058,117.7554386,24.7889174,117.8374171,24.8461827,117.9193485,24.9035175,118.001237,24.9609135,118.0830822,25.0183713,118.164885,25.0758891,118.2466425,25.1334717,118.3283552,25.1911177,118.4100301,25.2488159,118.4916578,25.3065821,118.5732426,25.3644088,118.6547825,25.4222992,118.7362791,25.4802502,118.8177319,25.5382627,118.899141,25.5963365,118.9805061,25.654472,119.0618273,25.7126689,119.1431046,25.7709272,119.2243378,25.8292469,119.3055275,25.8876267,119.3866666,25.9460775,119.4677674,26.0045811,119.5488301,26.0631373,119.6298425,26.1217633,119.7108106,26.1804503,119.7917344,26.2391986,119.8726138,26.2980079,119.9534414,26.356891,120.0342318,26.4158225,120.1149852,26.474802,120.1956859,26.5338563,120.2763428,26.5929704,120.3569549,26.6521455,120.437523,26.7113804,120.518046,26.7706763,120.5985238,26.8300339,120.6789568,26.8894523,120.7593449,26.9489314,120.839688,27.0084712,120.9199861,27.0680717,121.0002393,27.1277327,121.0804473,27.1874543,121.1606103,27.2472364,121.2407281,27.3070791,121.3208004,27.3669828,121.4008277,27.4269464,121.4808097,27.4869704,121.5607463,27.5470547,121.6406376,27.6071994,121.7204732,27.6674189,121.8002838,27.7276694,121.8800387,27.7879948,121.959748,27.8483803,122.0394124,27.9088242,122.1190304,27.96933,122.1986031,28.0298949,122.2781297,28.0905209,122.3576103,28.1512071,122.4370452,28.211953,122.5164342,28.2727589,122.5957774,28.3336246,122.6750745,28.3945503,122.7543256,28.4555358,122.8335306,28.5165812,122.9126885,28.577688,122.9918012,28.6388529,123.0708677,28.7000775,123.149888,28.7613618,123.228862,28.8227057,123.3077905,28.8841077,123.3866718,28.9455708,123.4655062,29.007094,123.5442945,29.0686761,123.6230355,29.1303193,123.7017301,29.1920213,123.7803788,29.2537816,123.8589808,29.3156014,123.9375369,29.3774793,124.0160454,29.4394178,124.094508,29.501414,124.1729228,29.5634711,124.2512908,29.6255874,124.3296118,29.6877628,124.4078858,29.7499974,124.4861128,29.8122911,124.5642928,29.8746439,124.6424256,29.9370557,124.7205113,29.9995265,124.798546,30.0620638,124.8765371,30.1246528,124.9544809,30.1873006,125.0323773,30.2500074,125.1102264,30.3127728,125.1880179,30.375609,125.2657722,30.4384919,125.3434935,30.5014127,125.4211528,30.564413,125.4987644,30.6274718,125.5763284,30.6905893,125.6538446,30.7537654,125.7313125,30.8170009,125.8087332,30.880294,125.8860971,30.9436613,125.963422,31.007072,126.0406989,31.0705407,126.1179374,31.1340515,126.1951186,31.1976366,126.2722517,31.2612801,126.3493367,31.3249818,126.4263736,31.3887416,126.5033623,31.4525596,126.5803029,31.5164359,126.657195,31.5803704,126.7340388,31.644363,126.8108343,31.7084136,126.8875814,31.7725222,126.9642801,31.8366887,127.0409302,31.9009131,127.1175319,31.9651955,127.194085,32.0295356,127.2705913,32.0939294,127.3470471,32.158385,127.4234543,32.2228984,127.4998127,32.2874694,127.5761224,32.3520981,127.6523832,32.4167845,127.7285951,32.4815284,127.8047581,32.5463299,127.8808719,32.611189,127.956937,32.6761055,128.032953,32.7410793,128.1089199,32.8061106,128.1848376,32.8711993,128.2607062,32.9363453,128.3365255,33.0015486,128.4122943,33.066811,128.488015,33.1321287,128.5636865,33.1975036,128.6393085,33.2629356,128.7148822,33.328423,128.7904053,33.3939692,128.8658789,33.45957243,128.9413016,33.52523468,129.0166755,33.59095242,129.0920003,33.65672635,129.1672758,33.72255677,129.2425,33.78844583,129.3176769,33.85438812,129.3928026,33.92038942,129.4678785,33.98644745,129.5429053,34.05256105,129.6178812,34.11873251,129.6928071,34.18496053,129.7676831,34.2512451,129.8425089,34.31758616,129.9172847,34.38398376,129.9919913,34.45046471,130.0666804,34.51695404,130.1413055,34.58352084,130.2158851,34.65013897,130.2904096,34.71681849,130.3648837,34.78355425,130.4393073,34.85034621,130.5136805,34.91719432,130.5880032,34.9840986,130.6622754,35.05105898,130.7364969,35.1180754,130.8106679,35.18514783,130.8847882,35.25227622,130.9588581,35.31945945,131.0328764,35.38670062,131.1068443,35.45399693,131.1807614,35.52134907,131.2546131,35.58877329,131.3284422,35.65622148,131.4022066,35.72374079,131.4759206,35.791315,131.549584,35.85894381,131.6231951,35.92663009,131.6967552,35.99437192,131.7702641,36.0621693,131.8437217,36.13002213,131.9171281,36.19793048,131.9904832,36.26589414,132.0637869,36.33391315,132.1370393,36.40198751,132.2102403,36.4701171,132.2833898,36.53830192,132.3564878,36.60654191,132.4295343,36.67483704,132.5025292,36.74318728,132.5754733,36.81159053,132.6483649,36.88005087,132.7212048,36.94856622,132.7939928,37.01713663,132.8667292,37.08576182,132.9394137,37.15444201,133.0120463,37.22317699,133.084627,37.29196682,133.1571557,37.36081136,133.2296323,37.42971076,133.3020461,37.49868364,133.3744185,37.56769247,133.446739,37.63675582,133.5189937,37.70588213,133.5912099,37.77505437,133.6633987,37.84425311,133.7355057,37.91354346,133.8075648,37.98287944,133.8795715,38.05226976,133.9515258,38.12171438,134.0234263,38.19121502,134.0952809,38.26075769,134.1670779,38.33036473,134.2388224,38.40002593,134.3105153,38.46973972,134.3821541,38.53950964,134.4537389,38.60933554,134.5252729,38.67921279,134.5967538,38.74914433,134.6681819,38.81912979,134.7395585,38.8891671,134.8108797,38.95926164,134.8821491,39.02940869,134.9533647,39.09961111,135.0245289,39.16986469,135.0956391,39.24017309,135.1666963,39.31053513,135.2377001,39.3809509,135.3086509,39.45142015,135.3795485,39.52194294,135.4503927,39.59251934,135.5211845,39.66314745,135.5919221,39.73383065,135.6626063,39.80456724,135.7332371,39.87535717,135.8038144,39.94620041,135.8743382,40.01709692,135.9448085,40.08804666,136.0152017,40.159083,136.0855645,40.23013924,136.1558974,40.30121492,136.226153,40.37237721,136.2963549,40.44359257,136.3665014,40.51486332,136.4365956,40.58618469,136.5066359,40.65755895,136.5766223,40.72898609,136.6465541,40.80046668,136.716434,40.87199711,136.7862583,40.94358261,136.8560292,41.01522029,136.9257453,41.08691132,136.9954072,41.15865492,137.0649796,41.23049095,137.1345677,41.30230173,137.2040668,41.37420332,137.2735116,41.44615733,137.3429021,41.51816376,137.4122382,41.59022257,137.4815198,41.66233372,137.550747,41.73449716,137.6199196,41.80671285,137.6890377,41.87898076,137.7581012,41.95130084,137.8271123,42.0236681,137.8960665,42.09609231,137.9649661,42.16856856,138.0338109,42.24109683,138.102601,42.31367701,138.1713361,42.38630924,138.2400164,42.4589934,138.3086417,42.53172935,138.3772122,42.60451709,138.4457277,42.67735664,138.514188,42.75024804,138.5825933,42.82319102,138.6509435,42.89618566,138.7192386,42.9692319,138.7874784,43.04232988,138.855663,43.11547939,138.9237924,43.18868028,138.9918664,43.26193261,139.0598852,43.33523636,139.1278486,43.40859144,139.1957565,43.48199791,139.2636089,43.55545568,139.3314057,43.62896491,139.3991471,43.70252514,139.4668329,43.77613654,139.5344632,43.84979903,139.6020365,43.92351411,139.6695553,43.99727878,139.7370185,44.07109444,139.804427,44.14495969,139.8717784,44.2188773,139.9390728,44.29284803,140.0063125,44.36686737,140.0734947,44.44093967,140.1406226,44.51508185,140.2076935,44.58925304,140.2747094,44.66347475,140.3416707,44.73774703,140.4085763,44.81206992,140.4754238,44.8864432,140.542215,44.96086822,140.6089501,45.03534398,140.6756285,45.10986868,140.742251,45.18444365,140.8088171,45.25906899,140.8753269,45.33374535,140.9417803,45.4084696,141.0081772,45.48324432,141.0745176,45.55807038,141.1408016,45.63294809,141.2070289,45.70787422,141.2731997,45.78285029,141.3393137,45.85787633,141.4053711,45.93295083,141.4713718,46.00807584,141.5373163,46.08325168,141.6032034,46.15847818,141.6690334,46.23375326,141.7348068,46.30907815,141.8004775,46.38448646,141.8661351,46.45987628,141.9317835,46.53535003,141.9973289,46.61087329,142.0628174,46.68644744,142.1282488,46.76206954,142.1936116,46.83774053,142.2589284,46.91346138,142.324188,46.98923034,142.3894041,47.06504982,142.4545494,47.14091791,142.5196374,47.21683585,142.584668,47.2928029,142.6496413,47.36884315,142.7145571,47.44490845,142.7794155,47.52101094,142.8442164,47.59717423,142.9089596,47.67338641,142.9736454,47.7496345,143.0382735,47.82594423,143.102844,47.90230281,143.1673568,47.97871008,143.2318123,48.05516602,143.2962096,48.13167151,143.3605206,48.20822619,143.4248021,48.28482822,143.4890542,48.36147862,143.5532201,48.43817648,143.6173279,48.51492384,143.6813779,48.59171957,143.7453697,48.66856394,143.8093036,48.74545541,143.8731794,48.82240106,143.936997,48.89938253,144.0007565,48.97641945,144.0644578,49.05350445,144.128101,49.13063757,144.1916805,49.2078187,144.2552069,49.28504785,144.3186749,49.36232491,144.3820845,49.43966419,144.4454357,49.51702281,144.5087344,49.59444348,144.5719688,49.67191191,144.6351448,49.74942807,144.6982621,49.8269919,144.7613219,49.90460337,144.824322,49.98226243,144.8872624,50.05996978,144.9501453,50.13772386,145.0129694,50.21552973,145.0757012,50.29337893,145.1384417,50.37127539,145.2010877,50.44921929,145.2636768,50.52721047,145.3262058,50.6052489,145.3886767,50.68332883,145.4510887,50.76146149,145.5134416,50.83970429,145.5757355,50.91790684,145.6379704,50.996142,145.7001462,51.07446284,145.7622643,51.15283217,145.8243216,51.2312481,145.8863198,51.30970967,145.9482597,51.38821793,146.0101391,51.46677467,146.0719594,51.54537484,146.1337201,51.62402315,146.1954215,51.702719,146.2570635,51.78145935,146.318646,51.86024598,146.3801691,51.93908066,146.4416325,52.01796188,146.5030365,52.09688962,146.5643807,52.17586342,146.6256652,52.2548851,146.6868901,52.33395099,146.7480552,52.41306355,146.8091607,52.49222176,146.8702065,52.57142536,146.9311923,52.65067641,146.9921184,52.7299735,147.0529846,52.80931653,147.1137907,52.8887055,147.1745369,52.96817435,147.2352232,53.04762129,147.2957902,53.12714785,147.3564135,53.20672016,147.4169196,53.2863382,147.4773656,53.36602878,147.5377514,53.44573816,147.5980787,53.52546734,147.6583439,53.60526595,147.7184917,53.68511186,147.7786937,53.7650032,147.838778,53.84493996,147.898802,53.92492198,147.9587655,54.00494941,148.0186686,54.0850348,148.0785113,54.16515306,148.1382935,54.24531625,148.1980151,54.32551212,148.2576761,54.40576472,148.3172765,54.48606312,148.3768163,54.56640652,148.4362954,54.64682321,148.4957137,54.72725556,148.5550713,54.80773275,148.6143681,54.88825473,148.673604,54.96882142,148.7327792,55.0494328,148.7918934,55.1300888,148.8509467,55.21078939,148.9099391,55.29153453,148.9688704,55.37232424,149.0277408,55.4531583,149.0865502,55.53403676,149.1452976,55.61496157,149.2039846,55.695929,149.2626105,55.77694069,149.321175,55.85799686,149.3796783,55.9390971,149.4381205,56.02024129,149.4965015,56.10142955,149.5548213,56.1826618,149.6130796,56.26393812,149.6712758,56.34525903,149.7294113,56.42662311,149.7874879,56.5080254,149.8455009,56.58947673,149.903452,56.67097217,149.9613416,56.75251135,150.0191695,56.83409421,150.0769359,56.91572071,150.1346405,56.99739087,150.192282,57.07910726,150.2498632,57.16086446,150.3073826,57.24266517,150.3648403,57.32450928,150.4222361,57.40639673,150.4795677,57.48833088,150.5368399,57.57030483,150.5940516,57.65231936,150.6511158,57.73444975,150.7082849,57.81648462,150.7653113,57.8986282,150.8222735,57.98081782,150.8791748,58.0630493,150.9360128,58.14532496,150.9927886,58.22764353,151.0495023,58.31000496,151.1061537,58.3924092,151.1627429,58.47485622,151.2192699,58.55734585,151.2757345,58.6398783,151.3321367,58.72245339,151.3884766,58.80507106,151.444754,58.8877314,151.500969,58.9704341,151.5571215,59.05317913,151.6132115,59.13596669,151.669239,59.21879659,151.7252039,59.30166879,151.7811062,59.38458325,151.8369459,59.46753992,151.8926891,59.55058688,151.9484032,59.63362803,152.0040546,59.7167112,152.0596775,59.79978773,152.1152035,59.88295473,152.1706667,59.96616367,152.226067,60.0494145,152.281389,60.1327337,152.3366633,60.21606848,152.3918743,60.29944522,152.4470226,60.38286348,152.5021241,60.46629566,152.5571461,60.54979781,152.6121034,60.63334297,152.6669998,60.71692713,152.721833,60.80055272,152.7766048,60.88421761,152.8313116,60.96792607,152.8859551,61.05167583,152.9405355,61.1354668,152.9950525,61.21929895,153.0495061,61.3031724,153.1038964,61.38715506,153.158223,61.47110946,153.2124864,61.55510715,153.2666863,61.63914524,153.3208235,61.72321099,153.3748964,61.80733054,153.4289058,61.89149112,153.4828516,61.9756922,153.5367338,62.05993429,153.5905523,62.14421712,153.6443072,62.22854045,153.6979983,62.31290438,153.7516258,62.39730879,153.8051892,62.48175385,153.8586892,62.56623918,153.9121253,62.65076483,153.9654976,62.73537726,154.0188061,62.8199373,154.0720505,62.90458391,154.1252309,62.98927071,154.1783474,63.07399781,154.2313999,63.15876485,154.2843883,63.24357191,154.3373126,63.32841896,154.3901729,63.41330595,154.442969,63.49823283,154.4957009,63.58319956,154.5483686,63.66820608,154.6009722,63.75325235,154.6534421,63.83833832,154.7059865,63.92346398,154.7583972,64.0086292,154.8107436,64.09383835,154.8630256,64.17908281,154.9152432,64.26436619,154.9673964,64.34968943,155.0194852,64.43511234,155.0713985,64.52045401,155.1234671,64.60589006,155.1753625,64.69137038,155.2271928,64.77688986,155.2789583,64.86244846,155.3306597,64.94804611,155.3822984,65.03368278,155.4338708,65.11935847,155.485378,65.20507309,155.5368205,65.29082658,155.5881982,65.3766189,155.6395087,65.46244998,155.6907568,65.54831972,155.741934,65.63422821,155.7930522,65.72017566,155.8441075,65.80616145,155.8950957,65.89218933,155.946019,65.97825395,155.9968773,66.06435507,156.0476775,66.15049455,156.0984058,66.23667232,156.1490687,66.32289056,156.1996667,66.40914171,156.2501996,66.49543423,156.3006673,66.58176368,156.3510698,66.66813091,156.4014072,66.75453924,156.4516791,66.84098314,156.5018858,66.92746585,156.5520271,67.01398608,156.6021029,67.10054324,156.6521141,67.18713954,156.7020593,67.27377201,156.751939,67.36044472,156.8017523,67.44715399,156.851501,67.53390048,156.9011841,67.62068406,156.9508016,67.70750619,157.0003535,67.79436619,157.0498399,67.88126297,157.0992606,67.96819709,157.1486156,68.05516826,157.197905,68.142177,157.2471286,68.2292229,157.2962865,68.31633305,157.3453797,68.40345324,157.3944043,68.49058324,157.4433648,68.57777744,157.4922595,68.66500853,157.5410896,68.75227659,157.5898523,68.8395815,157.6385491,68.9269232,157.6871799,69.01430165,157.7357447,69.10171668,157.7842438,69.1891685,157.8326764,69.27665666,157.8810344,69.3641939,157.9293353,69.45175552,157.9775702,69.53935357,158.0257462,69.62697539,158.0738487,69.71464607,158.1218851,69.80235299,158.1698555,69.89009605,158.2177592,69.97787549,158.2655967,70.06569109,158.3133677,70.15354293,158.3609469,70.24154804,158.4087109,70.3293544,158.4562828,70.41731416,158.5037883,70.50530981,158.5512274,70.59334131,158.5985998,70.68140868,158.6459061,70.76951159,158.6931456,70.85765035,158.7403185,70.94582476,158.7874247,71.03403476,158.8344624,71.1222843,158.8814353,71.21056579,158.9283415,71.29888243,158.9751811,71.38723446,159.0219539,71.47562181,159.06866,71.56404444,159.1152992,71.6525023,159.1618742,71.74099039,159.2083797,71.82951876,159.2548186,71.91808198,159.3011905,72.00668022,159.3474955,72.09531345,159.3937336,72.18398161,159.4399052,72.27268349,159.4860094,72.36142134,159.5320464,72.45019408,159.578017,72.53900118,159.6239204,72.62784293,159.6697562,72.71671976,159.7155249,72.80563107,159.7612264,72.89457684,159.8068606,72.98355733,159.8524275,73.07257282,159.8979274,73.16162201,159.9433603,73.25070512,159.9887257,73.33982289,160.0340238,73.42897494,160.0792545,73.51816117,160.1244179,73.60738153,160.1695139,73.69663596,160.214542,73.7859255,160.2595031,73.87524796,160.3043295,73.96464016,160.3492233,74.0539938,160.393982,74.1434178,160.4386721,74.23287725,160.4832956,74.32236885,160.5278515,74.41189412,160.5723391,74.50145374,160.6167598,74.59104616,160.6611128,74.6806721,160.7053975,74.77033209,160.7496149,74.86002508,160.7937659,74.94974958,160.8378466,75.03951068,160.881861,75.12930335,160.9258069,75.21912953,160.9696856,75.30898856,161.0134983,75.39887897,161.0572417,75.48880343,161.1009174,75.57876086,161.1445243,75.66875219,161.1880633,75.75877642,161.2315342,75.8488335,161.2749374,75.93892266,161.3182722,76.02904531,161.361539,76.11920066,161.4047378,76.2093886,161.4478683,76.29960921,161.4909313,76.38986207,161.5339255,76.48014773,161.5768515,76.57046585,161.6197093,76.66081643,161.6624988,76.75119929,161.7051265,76.84166436,161.7478731,76.93206184,161.7904389,77.02256829,161.832955,77.11308031,161.8753126,77.20369923,161.9178015,77.29417286,161.9601127,77.38478071,162.0023555,77.4754204,162.0445232,77.56610335,162.0866274,77.65681008,162.1286647,77.74754518,162.1706402,77.83830051,162.2125404,77.92909914,162.254372,78.01992938,162.2961347,78.11079128,162.3378291,78.20168458,162.3794565,78.29260567,162.4210139,78.38356164,162.4625024,78.474549,162.5039223,78.5655672,162.5452731,78.65661725,162.5865554,78.74769806,162.6277231,78.83886178,162.6689131,78.92995401,162.7099887,79.02112855,162.7509955,79.1123341,162.7919343,79.20357011,162.8328031,79.29483775,162.8736039,79.38613566,162.9143351,79.4774646,162.9549972,79.56882437,162.9955902,79.6602149,163.0361139,79.75163659,163.0765689,79.84308828,163.1169548,79.9345705,163.1572712,80.02608338,163.1975187,80.11762663,163.2376971,80.20920021,163.2778065,80.30080399,163.3178467,80.39243802,163.357818,80.48410153,163.3977198,80.57579589,163.4375523,80.66752036,163.4771974,80.75933737,163.5170097,80.85105889,163.5566343,80.94287335,163.5961896,81.0347177,163.6356762,81.12659149,163.6750927,81.2184955,163.714441,81.31042868,163.7537187,81.40239209,163.7929269,81.49438513,163.8320653,81.58640803,163.8711345,81.6784602,163.910134,81.77054199,163.9490641,81.86265308,163.9879245,81.95479366,164.0267154,82.04696347,164.0654367,82.13916252,164.1040884,82.23139078,164.1426704,82.32364818,164.1811834,82.41593354,164.219626,82.50824913,164.2579989,82.60059372,164.2963021,82.69296725,164.3345346,82.78537113,164.3726979,82.8778026,164.4107918,82.97026262,164.4488153,83.0627515,164.4867695,83.15526891,164.5246525,83.24781751,164.5624665,83.34039275,164.6002116,83.43299475,164.6378859,83.5256266,164.6754891,83.61828869,164.7130235,83.71097728,164.7504878,83.80367411,164.7878832,83.89641724,164.8252077,83.98918858,164.8624631,84.08198806,164.8996475,84.17481563,164.9367608,84.26767152,164.9738051,84.36055494,165.010779,84.45346647,165.0476846,84.5464058,165.0845191,84.63937594,165.1212836,84.732371,165.1579767,84.82539211,165.1945994,84.9184427,165.2311518,85.01152091,165.2676341,85.10462669,165.304046,85.19776,165.3402895,85.29091705,165.3766585,85.38410534,165.4128591,85.47732101,165.4489895,85.57056409,165.4850435,85.66383435,165.52089,85.75713183,165.5569519,85.85045648,165.5928004,85.94380822,165.6285845,86.03718706,165.6642923,86.1305929,165.6999292,86.2240257,165.7354956,86.31748539,165.770973,86.41097203,165.8063984,86.50448536,165.8417529,86.5980258,165.8769045,86.69173,165.9122684,86.78518593,165.947411,86.8788059,165.9824828,86.97245238,166.0174847,87.06612534,166.0524151,87.1598241,166.0872734,87.25354989,166.122062,87.34730186,166.1567798,87.44108026,166.1914267,87.53488487,166.2260026,87.62871564,166.2605315,87.72257265,166.2949667,87.81645546,166.3293307,87.91036446,166.3636239,88.0042994,166.3978461,88.09826024,166.4319973,88.1922469,166.4660774,88.2862594,166.5000866,88.38029763,166.5340246,88.47436162,166.5678917,88.56845118,166.6016877,88.66256632,166.6354126,88.75670698,166.6690664,88.85087311,166.702649,88.94506466,166.7361606,89.03938916,166.7696009,89.13363241,166.8029701,89.22790099,166.8362681,89.32219519,166.8694948,89.41651427,166.9026504,89.51085811,166.9357347,89.60522622,166.9687406,89.69962001,167.0016809,89.7940387,167.0345503,89.8884831,167.0673491,89.98295106,167.1000754,90.07744418,167.1327314,90.17196254,167.1653178,90.26650329,167.1978392,90.36107031,167.2302811,90.45566184,167.2626516,90.55027784,167.2949506,90.64491773,167.3271782,90.7395825,167.3593356,90.83427092,167.3914202,90.92898482,167.4234332,91.02372236,167.4553747,91.11848227,167.4872482,91.213268,167.5190465,91.30807895,167.5507733,91.40291272,167.5824284,91.49777032,167.6140119,91.59265159,167.6455244,91.68755658,167.6769644,91.78248577,167.7083328,91.87743868,167.7393758,91.97241404,167.7708531,92.06741443,167.8020062,92.16243813,167.8330841,92.2574869,167.8640936,92.35255766,167.8950313,92.44765206,167.9258959,92.54276953,167.95669,92.63791026,167.9874122,92.73307411,168.0180603,92.82826122,168.048639,92.92346965,168.0791494,93.01870458,168.1095854,93.11397013,168.1399481,93.20924946,168.1702413,93.30455166,168.20046,93.39987668,168.2306067,93.49521568,168.2606815,93.5905847,168.2906843,93.68597831,168.3206149,93.78139408,168.3504733,93.8768301,168.3802597,93.97229078,168.4099737,94.06777412,168.4396157,94.16328154,168.4691857,94.25880958,168.4986835,94.35435952,168.5281086,94.44993332,168.557462,94.54552984,168.5867433,94.64114521,168.6159523,94.73687059,168.645089,94.83244416,168.6741536,94.92812783,168.7031427,95.02383142,168.7320627,95.11955828,168.7609105,95.21530695,168.7896859,95.31107737,168.818389,95.40686965,168.8470197,95.50268344,168.8755808,95.5985188,168.904067,95.69437552,168.9324804,95.79025317,168.9608223,95.88615278,168.9890908,95.98207403,169.0172869,96.0780408,169.0454111,96.17400468,169.0734622,96.2699654,169.1014407,96.36597157,169.1293467,96.46200016,169.1571802,96.55804849,169.1849406,96.65411782,169.2126232,96.75021107,169.2402388,96.84632215,169.2677818,96.94245421,169.2952522,97.03860703,169.3226499,97.13478055,169.3498781,97.23097473,169.3771308,97.32718793,169.4044074,97.42342325,169.4315211,97.51967596,169.4585556,97.61595133,169.4855174,97.71224797,169.5124065,97.80856493,169.5392228,97.90490217,169.5659663,98.00125983,169.5925907,98.09763762,169.6191885,98.19403533,169.64576,98.29045308,169.6722124,98.38689082,169.698592,98.4833485,169.7248987,98.5798256,169.7511335,98.676323,169.7772943,98.77284038,169.8033837,98.86937659,169.8293987,98.9659332,169.8553383,99.06256186,169.8812073,99.15910817,169.9070032,99.255724,169.9327276,99.3523588,169.9583776,99.44912032,169.9839545,99.54569345,170.0094585,99.64238642,170.0348894,99.73909848,170.0602472,99.83582231,170.085532,99.93257279,170.1107438,100.0293423,170.1358824,100.1261309,170.160948,100.222938,170.1859404,100.3197641,170.21084,100.4166089,170.2356911,100.5134691,170.2604649,100.6103518,170.2851656,100.7072532,170.3097931,100.8041732,170.3343474,100.9011117,170.3588285,100.9980688,170.3832315,101.0950461,170.407566,101.1920401,170.4318273,101.2890524,170.4560153,101.386083,170.4801308,101.4831316,170.5041721,101.5801988,170.5281402,101.6772839,170.552035,101.7743873,170.5758622,101.8715066,170.5996104,101.9686458,170.6232852,102.0658028,170.6468871,102.1629766,170.6704142,102.2601707,170.6938689,102.3573812,170.71725,102.4546096,170.7405576,102.5518555,170.7637921,102.6491189,170.7869531,102.7463997,170.8100416,102.8436966,170.8330564,102.9410119,170.8559968,103.038345,170.8788637,103.1356955,170.9016573,103.2330631,170.9243767,103.3304481,170.9470223,103.4278502,170.969595,103.5252693,170.9920941,103.6227054,171.0145196,103.7201585,171.0368715,103.8176285,171.0591476,103.9151193,171.0813504,104.0126267,171.1034814,104.1101473,171.1255387,104.2076845,171.1475211,104.3052399,171.1694335,104.4028062,171.1912696,104.5003936,171.2130323,104.5979968,171.2347234,104.6956121,171.2563395,104.793247,171.2778814,104.890899,171.2993499,104.9885674,171.3207439,105.0862521,171.342064,105.183953,171.3633103,105.28167,171.3843734,105.3794945,171.4055641,105.4771761,171.426589,105.5749409,171.4475543,105.6727008,171.4684318,105.7704968,171.4892373,105.8683067,171.5099667,105.9661346,171.5306223,106.0639781,171.5512041,106.1618373,171.5717111,106.2597133,171.592146,106.3576028,171.6125061,106.4555082,171.6327919,106.5534295,171.652973,106.6513723,171.6731427,106.7493159,171.6932017,106.8472844,171.7131888,106.9452671,171.7331046,107.0432641,171.7529465,107.141276,171.7727134,107.2393043,171.7924072,107.3373461,171.8120287,107.4354024,171.8315744,107.5334738,171.851047,107.6315585,171.8704515,107.7296569,171.8896891,107.8277895,171.9090251,107.9259014,171.9282006,108.0240459,171.9472975,108.1222056,171.9663247,108.2203789,171.985069,108.3186778,172.004157,108.4167677,172.0229661,108.5149819,172.0416967,108.6132122,172.0603579,108.7114555,172.0789402,108.8097139,172.0974483,108.9079863,172.115882,109.0062729,172.1342417,109.1045731,172.1525272,109.2028872,172.1707371,109.3012155,172.1888731,109.3995574,172.2069359,109.4979125,172.2249219,109.5962853,172.2428355,109.6946684,172.2606753,109.7930644,172.2784407,109.8914737,172.2961318,109.9898965,172.313751,110.0883285,172.3312489,110.186828,172.3485702,110.285321,172.366155,110.3837166,172.3834744,110.4822054,172.4007128,110.5807086,172.4178829,110.679224,172.434979,110.7777519,172.4520007,110.8762925,172.4689491,110.9748457,172.4858221,111.0734117,172.5026287,111.1719886,172.5193527,111.2705803,172.5360031,111.3691835,172.5525781,111.4678004,172.5690787,111.5664297,172.5855048,111.6650714,172.6018564,111.7637255,172.6181331,111.862393,172.6343357,111.9610717,172.6504637,112.0597627,172.6665172,112.1584659,172.6824961,112.2571811,172.6984005,112.3559084,172.7142303,112.4546476,172.7299856,112.5533988,172.7456663,112.6521618,172.7612724,112.7509366,172.7768047,112.8497229,172.7922616,112.9485212,172.8076438,113.0473311,172.8229514,113.1461526,172.8381844,113.2449856,172.8533439,113.3438273,172.8684274,113.4426832,172.8834365,113.5415505,172.8983709,113.6404288,172.9132306,113.7393186,172.9280153,113.83822,172.9427257,113.9371321,172.9571433,114.0361162,172.9719024,114.1350102,172.9863849,114.2339618,173.0007972,114.3329023,173.0151337,114.4318693,173.0293956,114.5308471,173.0435825,114.6298349,173.057691,114.7288399,173.0717284,114.82785,173.085702,114.9268683,173.0996009,115.0258909,173.1134183,115.1249252,173.1271568,115.223977,173.1408206,115.3230391,173.1544095,115.4221115,173.167925,115.5211937,173.1813643,115.6202865,173.1947293,115.7193894,173.2080188,115.8185024,173.2212336,115.9176253,173.2343735,116.0167583,173.2474385,116.1159011,173.2604272,116.2150546,173.2733415,116.314218,173.2861807,116.4133916,173.2989478,116.5125725,173.3116383,116.6117639,173.3242531,116.710965,173.3367958,116.8101739,173.349261,116.9093947,173.3616518,117.0086241,173.3738563,117.1079557,173.3862078,117.2071114,173.3983728,117.3063687,173.4104639,117.4056349,173.4224803,117.5049103,173.4344216,117.6041947,173.4462876,117.7034882,173.4580819,117.8027898,173.4697981,117.902101,173.4814393,118.001421,173.4930056,118.1007497,173.5044974,118.2000857,173.5159163,118.2994304,173.527258,118.3987842,173.5385242,118.4981475,173.54949,118.5976386,173.5608318,118.6968984,173.5718728,118.7962869,173.5828388,118.8956837,173.5937297,118.9950887,173.6045455,119.094502,173.6152863,119.1939234,173.625952,119.2933528,173.6365426,119.3927903,173.6470447,119.4922385,173.657485,119.5916919,173.6678502,119.6911531,173.6781403,119.7906221,173.6883551,119.8900993,173.698495,119.9895837,173.7085738,120.089073,173.7185635,120.1885727,173.728478,120.2880798,173.7383174,120.3875945,173.7480816,120.4871165,173.7577694,120.5866462,173.7673832,120.6861829,173.7769219,120.7857269,173.7863854,120.885278,173.7957737,120.9848362,173.8050866,121.0844017,173.8143229,121.1839744,173.8234761,121.2835672,173.8325637,121.3831534,173.8415442,121.4827794,173.8504808,121.5823799,173.8593841,121.6819398,173.8681708,121.7815529,173.8768842,121.8811715,173.8855204,121.9807978,173.8940814,122.0804306,173.9025671,122.1800698,173.9109789,122.2797151,173.9193146,122.3793663,173.9275745,122.4790245,173.9357592,122.5786889,173.9438554,122.6783718,173.9518889,122.7780492,173.9598475,122.8777321,173.9677307,122.9774211,173.9755388,123.0771158,173.9832774,123.1768064,173.9909341,123.276514,173.9985163,123.3762261,174.0060237,123.4759434,174.0134554,123.5756668,174.0208209,123.6753928,174.0281021,123.7751273,174.0353087,123.8748663,174.0424392,123.9746118,174.0494943,124.0743626,174.0564752,124.1741182,174.0633797,124.2738795,174.0702081,124.3736464,174.0769618,124.4734182,174.0836402,124.573195,174.0902431,124.6729769,174.0967708,124.7727637,174.1032231,124.8725554,174.1096,124.9723519,174.1159015,125.0721533,174.1221276,125.1719594,174.1282784,125.2717702,174.1343535,125.371586,174.1403522,125.4714064,174.1462768,125.5712309,174.152126,125.6710598,174.1578998,125.7708931,174.1635983,125.8707307,174.1692052,125.9705759,174.1747526,126.0704219,174.1802247,126.1702722,174.1856215,126.2701266,174.190937,126.3699933,174.1961808,126.4698564,174.2013683,126.5697194,174.2064705,126.6695809,174.2114903,126.769455,174.2164348,126.8693327,174.2213015,126.9692163,174.2260949,127.0691015,174.2308146,127.1689896,174.2354572,127.268882,174.2400236,127.3687779,174.2445163,127.4686761,174.2489341,127.5685785,174.2532749,127.6684845,174.2575402,127.7683938,174.26173,127.8683063,174.2658444,127.9682219,174.2698821,128.0681458,174.2738455,128.1680676,174.2777341,128.2679923,174.2815447,128.3679206,174.2852817,128.4678511,174.2889419,128.5677863,174.2925322,128.6677204,174.2960414,128.7676614,174.2994767,128.8676027,174.3028382,128.9675421,174.3061222,129.0674891,174.3093319,129.1672686,174.3124674,129.2672171,174.3155252,129.3671679,174.3185077,129.467121,174.3214146,129.5671529,174.3242486,129.6671107,174.3268918,129.7670704,174.329681,129.866955,174.332286,129.966919,174.3348122,130.0668848,174.3372699,130.1668525,174.3396484,130.2668221,174.3419551,130.3667932,174.3441827,130.4667631,174.3463348,130.5667378,174.3484115,130.6667142,174.3504133,130.7666928,174.3523382,130.8666719,174.3541878,130.9666528,174.3559532,131.0666351,174.3576522,131.1666216,174.3592758,131.2666064,174.3608244,131.3665925,174.3623074,131.4665797,174.3637045,131.5665677,174.365026,131.6665548,174.366272,131.7665457,174.3674425,131.8665371,174.3685375,131.9665295,174.3695571,132.0665226,174.3705011,132.1665165,174.3713696,132.2665111,174.3721257,132.3665064,174.3728438,132.4665023,174.3735225,132.5664979,174.3740889,132.6664948,174.3745653,132.7664927,174.3749805,132.8664904,174.3753203,132.9664884,174.3755904,133.0664867,174.3757766,133.1667342,174.3758897,133.2667343,174.3759272,133.3667345],e.AT2050_0501_Points=[0,0,.100000164,379e-7,.200076184,5165e-7,.300000253,3404e-7,.399996601,5948e-7,.500000696,9711e-7,.599999957,.0013867,.700011487,.0018852,.800010096,.0024519,.900007582,.0030762,1.000005203,.0037938,1.099998278,.0045673,1.199981673,.0054283,1.299978296,.006373,1.399973076,.0073924,1.499967067,.0084874,1.599960246,.0096579,1.699952529,.0109039,1.799943763,.012224,1.899934036,.0136211,1.999922333,.0150931,2.099909713,.0166415,2.199896653,.0182652,2.29988293,.0199659,2.399867314,.0217407,2.499850335,.0235909,2.599831913,.0255167,2.699812002,.0275179,2.799791087,.0295951,2.899768015,.0317473,2.99974347,.0339751,3.099717027,.0362783,3.199689891,.0386579,3.299659185,.041111,3.399626786,.0436403,3.499592884,.0462454,3.599556985,.0489261,3.699518144,.0516815,3.799478155,.0545132,3.89943599,.0574204,3.999391592,.0604031,4.099344998,.0634599,4.19929652,.0665956,4.299245128,.0698048,4.399191314,.0730894,4.499134489,.0764484,4.599075595,.079884,4.699014843,.0834195,4.798950592,.0870061,4.898883482,.090668,4.998813667,.0944055,5.098754899,.0982042,5.198679347,.1020925,5.298600806,.1060564,5.398504523,.1100852,5.498420017,.1142001,5.598332349,.1183896,5.698241356,.1226553,5.798147092,.1269965,5.898049511,.1314131,5.997947006,.1359047,6.097842414,.140472,6.197734506,.1451149,6.297622126,.149833,6.39750704,.1546267,6.497388497,.159498,6.597267057,.1644435,6.697141065,.1694636,6.79701104,.174559,6.896877127,.1797298,6.996739269,.1849759,7.096596598,.1902965,7.196450734,.1956936,7.296300593,.2011659,7.396146324,.2067119,7.495985127,.2123291,7.595822876,.2180281,7.69565582,.2238028,7.795484392,.2296521,7.895308533,.2355769,7.995128293,.2414808,8.094943397,.2475602,8.194755468,.2537113,8.29456127,.2603912,8.394362332,.2662396,8.494158638,.2726168,8.593950045,.2790694,8.693736542,.2855973,8.79355286,.2922005,8.89332931,.2988791,8.993066005,.3056331,9.092830478,.3124623,9.192591606,.3193636,9.292347488,.3263436,9.392098064,.3334004,9.491931695,.3405311,9.591669823,.3477372,9.69131791,.3550185,9.791046705,.3623752,9.890769904,.3698106,9.990493393,.3773199,10.09020622,.3849042,10.18991232,.3925608,10.28961261,.4002939,10.38930782,.4081023,10.48899623,.415986,10.58867422,.4239441,10.68835064,.4319785,10.78801887,.4400881,10.88768308,.4482701,10.98734434,.4565303,11.08699612,.4648658,11.18664103,.4732765,11.28628011,.4817592,11.38591284,.4903205,11.48553898,.4989568,11.58515856,.5076686,11.68477084,.5164558,11.78437717,.5253181,11.88397678,.5342557,11.98356583,.5432684,12.08315181,.5523564,12.18273096,.5615437,12.28230311,.5707823,12.38186825,.5800962,12.48142633,.5894851,12.5809773,.5989493,12.68052118,.6084635,12.78005776,.6180779,12.87958698,.627783,12.97911646,.637548,13.07863121,.6473882,13.17813849,.6573036,13.27763825,.6672942,13.37713044,.6773599,13.47661499,.6875007,13.57609199,.6977167,13.67556112,.7080077,13.77502258,.7183738,13.87446788,.7288653,13.973934,.7393634,14.07337149,.7499548,14.17280099,.7606212,14.27220161,.7713119,14.37161485,.7821284,14.47101978,.79302,14.57041685,.8039866,14.66980534,.8150284,14.76918547,.8261452,14.8685571,.8373371,14.96792092,.848604,15.06727557,.8599459,15.16662168,.8713653,15.26595915,.8828572,15.36528886,.8944872,15.46460887,.9060663,15.56392007,.9177834,15.66322239,.9296106,15.76253096,.941478,15.8618155,.9534229,15.96109144,.9654403,16.06035787,.9775307,16.15961512,.9896981,16.25884693,1.0019403,16.35808503,1.0142204,16.45731438,1.0266124,16.55653434,1.0390793,16.65574562,1.0516211,16.75494716,1.0642378,16.8541648,1.0769295,16.95334599,1.089696,17.05249152,1.1025374,17.15165335,1.1154537,17.25080612,1.1284449,17.34994859,1.141511,17.4490827,1.1546546,17.54820587,1.1678707,17.64731948,1.1811619,17.74642259,1.1945247,17.84551558,1.2079653,17.94459738,1.2214808,18.04366998,1.235071,18.1427323,1.2487361,18.24178426,1.2624759,18.34082587,1.2763179,18.43985696,1.2902062,18.53887755,1.3041693,18.63788757,1.3182072,18.73688695,1.3323198,18.83587546,1.3465049,18.93485413,1.3607686,19.03382134,1.3751057,19.13277767,1.3895176,19.23171945,1.4040027,19.33065384,1.4185639,19.42957721,1.4331998,19.5284895,1.4479104,19.62739083,1.4626959,19.72628056,1.4775556,19.82515927,1.4924902,19.9240267,1.5074995,20.02288276,1.5225835,20.12172741,1.5377421,20.22056042,1.5529752,20.31938208,1.5682832,20.41819209,1.5836659,20.5169905,1.599123,20.6157772,1.6146547,20.714552,1.6302631,20.81331801,1.6459629,20.91206929,1.6617184,21.01080864,1.6775486,21.109536,1.6934532,21.20825055,1.7094306,21.30695364,1.7254842,21.40564489,1.7416126,21.50431883,1.7577908,21.60298554,1.7740663,21.70163984,1.7904181,21.80028169,1.806845,21.89891124,1.8233459,21.99752824,1.8399211,22.09613287,1.8565738,22.19472472,1.8732979,22.29330577,1.8900977,22.39195413,1.9070691,22.49042593,1.9239181,22.5889828,1.9409535,22.68751078,1.9580498,22.78600993,1.9752063,22.88451196,1.9924513,22.98300093,2.0097707,23.081475,2.0271608,23.17993764,2.0446289,23.27838719,2.0621714,23.37682346,2.0797883,23.4752464,2.0974796,23.57379163,2.1154995,23.67205408,2.1330862,23.77044071,2.1510106,23.86880981,2.1689992,23.96716528,2.1870621,24.06550699,2.2051992,24.16383505,2.2234106,24.26214888,2.2416958,24.36044932,2.2600557,24.45873722,2.2784908,24.55700758,2.2969977,24.65526619,2.3155802,24.75351074,2.3342369,24.851737,2.3529573,24.94995382,2.3717627,25.04815578,2.3906419,25.14634233,2.4095942,25.2445157,2.4286215,25.34267473,2.447723,25.44082454,2.4669033,25.53895457,2.486153,25.63707017,2.505476,25.73516525,2.5248688,25.8332514,2.5443409,25.93132275,2.5638869,26.0293794,2.5835071,26.12742248,2.6032446,26.22544934,2.6230131,26.32348658,2.642882,26.42148354,2.6627984,26.51946541,2.6827888,26.61741131,2.7027879,26.71536284,2.7229262,26.81329968,2.7431401,26.91121594,2.7634219,27.00912211,2.7837843,27.10701243,2.8042185,27.20488729,2.8247266,27.30274663,2.8453085,27.40059038,2.8659644,27.4984185,2.8866942,27.59623093,2.9074978,27.6940276,2.9283753,27.79180419,2.9493479,27.88956922,2.970373,27.98731833,2.991472,28.08505565,3.0126261,28.18277306,3.0338733,28.28047413,3.0551937,28.37815901,3.0765877,28.47582719,3.0980532,28.57347969,3.1195948,28.67111589,3.1412102,28.76873563,3.1629006,28.86633791,3.1846629,28.96392501,3.2064974,29.06149552,3.2284077,29.15905027,3.2503922,29.25658762,3.2724498,29.35410802,3.2945827,29.45161193,3.3167876,29.54909904,3.3390661,29.64658575,3.3614328,29.74403947,3.3838589,29.84146037,3.4063443,29.93887927,3.4289143,30.03628148,3.4515607,30.13366656,3.4742791,30.23103445,3.4970726,30.32838434,3.519939,30.42571584,3.5428785,30.52303187,3.5658926,30.62033048,3.5889801,30.71761161,3.6121411,30.81486779,3.6354107,30.91211402,3.6587188,31.0093424,3.6821001,31.1065598,3.7055177,31.20375276,3.7290459,31.3009276,3.7526471,31.39808506,3.7763222,31.49522449,3.8000705,31.59234599,3.8238922,31.68944944,3.8477873,31.78653484,3.8717557,31.88360211,3.8957974,31.98065117,3.9199124,32.07768225,3.9441041,32.17469479,3.9683656,32.27168895,3.9927004,32.3686647,4.0171084,32.46562197,4.0415898,32.56256072,4.0661443,32.65948089,4.0907719,32.75638242,4.1154727,32.85326526,4.1402467,32.95012934,4.1650938,33.04698054,4.1900408,33.14380486,4.2150309,33.24061248,4.2400977,33.33740112,4.2652377,33.43417076,4.2904508,33.53092129,4.3157369,33.6276527,4.341096,33.72435968,4.3665017,33.82105274,4.3920068,33.91772634,4.4175847,34.01438065,4.4432357,34.11101567,4.4689598,34.207631,4.4947566,34.30422692,4.5206266,34.40080326,4.5465694,34.49743302,4.5726731,34.59396977,4.5987615,34.6904143,4.6248356,34.78691178,4.65107,34.88338956,4.6773774,34.97984729,4.7037575,35.07628291,4.7302058,35.17271959,4.7567425,35.26911739,4.783341,35.36548467,4.8100648,35.46184205,4.8368088,35.55817829,4.8636239,35.6544953,4.8905135,35.75081043,4.917439,35.84708653,4.944474,35.94334218,4.9715816,36.03954921,4.9987376,36.13576379,5.0259906,36.23196843,5.0533681,36.32814191,5.0807667,36.42429467,5.1082381,36.52042662,5.1357819,36.61645638,5.1637854,36.71262673,5.1910371,36.80869602,5.2187985,36.90474415,5.2466354,37.00077136,5.2745418,37.09677923,5.3025221,37.19275384,5.3305683,37.28871741,5.3586921,37.38465967,5.3868883,37.48058064,5.4151569,37.5764803,5.4434981,37.672362,5.4719218,37.76821735,5.5004043,37.86405245,5.5289628,37.96000159,5.5578475,38.05565838,5.5862973,38.15142871,5.615073,38.24717971,5.6439227,38.3429063,5.6728428,38.43861071,5.7018349,38.53429349,5.7308995,38.62995416,5.7600362,38.72559292,5.7892453,38.82120544,5.8185145,38.91679992,5.8478679,39.01237011,5.877292,39.1079201,5.9067908,39.20344911,5.9363617,39.29895448,5.9660036,39.3944374,5.9957178,39.48989942,6.0255048,39.58533739,6.055363,39.68075275,6.0852932,39.77614463,6.1152941,39.87151471,6.1453685,39.96686205,6.175515,40.06218659,6.2057334,40.15748826,6.2360238,40.25276779,6.2663888,40.34802355,6.296823,40.44325632,6.3273294,40.53846606,6.3579076,40.63365266,6.3885576,40.72881608,6.4192796,40.82395683,6.450075,40.91907386,6.4809408,41.01416743,6.5118782,41.10923596,6.5428866,41.20428307,6.5739708,41.29930632,6.6051236,41.39430599,6.6363484,41.48926925,6.6677087,41.58422174,6.6990767,41.67915038,6.7305163,41.77406756,6.7619612,41.86894864,6.7935443,41.96380584,6.8251989,42.05863906,6.8569251,42.15344836,6.888723,42.2482336,6.9205925,42.34302806,6.9525569,42.43776473,6.9845665,42.53247763,7.0166507,42.62716655,7.0488072,42.72169343,7.0815,42.81643659,7.1133077,42.91105171,7.1456804,43.00564273,7.178122,43.10020923,7.210635,43.19475119,7.2432195,43.28926852,7.2758753,43.3837635,7.3086039,43.47823162,7.3414063,43.57267467,7.3742762,43.6670926,7.4072185,43.76148625,7.440229,43.85585462,7.4733128,43.95019796,7.5064679,44.04451629,7.5396942,44.13881023,7.5729924,44.23307818,7.606361,44.32731863,7.6397994,44.42153633,7.6733095,44.51572829,7.7068884,44.6098949,7.7405416,44.70403569,7.7742656,44.79815162,7.8080612,44.89224191,7.8419278,44.98630659,7.8758655,45.08034561,7.9098742,45.17435892,7.9439538,45.26844684,7.9782119,45.36234857,8.0123597,45.45624483,8.0466174,45.550155,8.0809811,45.64403914,8.1154156,45.73789727,8.1499211,45.83172932,8.1844974,45.92553523,8.2191446,46.01931494,8.2538626,46.11317797,8.2891776,46.20679562,8.323511,46.30049645,8.3584414,46.39417086,8.3934425,46.48782436,8.4285413,46.58144583,8.463684,46.67504073,8.4988975,46.768609,8.5341816,46.8621506,8.5695363,46.95566546,8.6049616,47.04915357,8.6404576,47.14260902,8.6759993,47.23603848,8.711634,47.32944581,8.7473414,47.42282618,8.7831193,47.51617948,8.8189677,47.60950565,8.8548865,47.70280705,8.8909316,47.79607896,8.9269916,47.88932357,8.9631222,47.98254089,8.999323,48.07573092,9.0355915,48.16889197,9.0718785,48.2620271,9.1082905,48.35513474,9.1447728,48.44821475,9.1813253,48.54126713,9.2179481,48.63429185,9.2546411,48.7272888,9.2914045,48.82025793,9.328238,48.91319926,9.3651418,49.00609722,9.402193,49.09898277,9.4392371,49.19184022,9.4763513,49.28466961,9.5135355,49.3774865,9.5507129,49.47025958,9.5880376,49.56300454,9.6254322,49.65571911,9.6628921,49.74840746,9.7004265,49.8410672,9.7380327,49.93369792,9.7757055,50.02630116,9.8134499,50.11887579,9.851264,50.2114219,9.8891483,50.30381482,9.9276944,50.39642794,9.9651262,50.48888789,10.00322,50.58131936,10.0413824,50.67372163,10.0796157,50.76609505,10.1179189,50.85843948,10.1562918,50.95075497,10.1947344,51.04304143,10.2332468,51.13529876,10.2718289,51.22752694,10.3104806,51.31972597,10.349202,51.41189582,10.3879932,51.50403621,10.4268537,51.59614722,10.4657838,51.68822881,10.5047838,51.78028094,10.543853,51.87230304,10.5829945,51.9642961,10.6222027,52.05625948,10.6614803,52.14819469,10.7008288,52.24010233,10.7402557,52.3319766,10.7797418,52.4239832,10.8195407,52.51563543,10.8589223,52.60742003,10.8986163,52.69917362,10.9383762,52.7908982,10.9782089,52.88259268,11.0181109,52.97425696,11.0580822,53.06589329,11.0981241,53.15749715,11.1382337,53.24907076,11.1784123,53.34060972,11.218648,53.43212465,11.2589666,53.52362833,11.2993526,53.61507994,11.3398076,53.70650098,11.3803326,53.79789127,11.4209258,53.88929687,11.4616432,53.98062559,11.5023739,54.07187787,11.5431175,54.1631451,11.5839865,54.25438146,11.6249237,54.34558685,11.6659295,54.43676193,11.707008,54.52790526,11.7481526,54.61901873,11.789366,54.71010042,11.8306517,54.80115173,11.8720026,54.89217041,11.9134221,54.98315783,11.9549106,55.07411395,11.9964681,55.1650386,12.038094,55.25593179,12.0797884,55.34679345,12.1215515,55.43762422,12.163385,55.52842356,12.2052853,55.6191904,12.2472541,55.70992545,12.2892915,55.80062738,12.3313973,55.89129722,12.3735684,55.98193628,12.4158086,56.07254427,12.4581239,56.16312011,12.5005037,56.25366544,12.5429517,56.34417707,12.585468,56.43465657,12.6280528,56.52510386,12.6707059,56.6155189,12.7134272,56.70590163,12.7562168,56.796252,12.7990748,56.88657003,12.8420009,56.97685561,12.8849952,57.06710723,12.9280577,57.15732742,12.9711853,57.24751455,13.0143841,57.33766974,13.0576498,57.42779189,13.100986,57.51788283,13.1443889,57.60793994,13.18786,57.69796419,13.2313993,57.78795543,13.2750063,57.87791392,13.318681,57.96783929,13.3624239,58.05774734,13.4063247,58.14760684,13.4502476,58.23743278,13.4941941,58.32720943,13.5381206,58.41696898,13.5821568,58.50669531,13.6263069,58.59638818,13.6705246,58.68604744,13.7148139,58.77567488,13.7591669,58.86526727,13.8035876,58.9548261,13.8480759,59.04435074,13.8926309,59.13384231,13.9372528,59.22329965,13.9819571,59.3125789,14.0267413,59.40211396,14.0715423,59.49146907,14.1164361,59.58079167,14.1613944,59.67008014,14.2064232,59.75933454,14.2515057,59.84858222,14.2967028,59.93776784,14.3419323,60.02689212,14.3871972,60.11600998,14.4325629,60.20509356,14.4779958,60.29425858,14.5234999,60.38318342,14.5691221,60.47216385,14.6147568,60.5611098,14.6604587,60.65002698,14.7062556,60.73889043,14.7520327,60.8277327,14.7979361,60.91654025,14.8439064,61.00531308,14.8899439,61.0940511,14.9360484,61.18275428,14.9822199,61.27140966,15.0284584,61.36003701,15.0747344,61.44863523,15.1211067,61.53719845,15.1675457,61.62572663,15.2140516,61.71421962,15.2606244,61.80267741,15.307264,61.89109986,15.3539706,61.9794871,15.4007433,62.06783958,15.4475849,62.15615694,15.4944917,62.24443762,15.5414683,62.33268451,15.5885084,62.42089472,15.6356435,62.50851048,15.6828168,62.59664711,15.7300567,62.68474807,15.7773634,62.77281331,15.8247076,62.86084016,15.8721592,62.94883406,15.9196531,63.0367919,15.9672228,63.1247138,16.0148616,63.21259975,16.0625671,63.30044964,16.1103393,63.38826351,16.1581772,63.47630072,16.2060814,63.56383148,16.2540501,63.65153719,16.3020867,63.7392066,16.3502035,63.82683968,16.3983725,63.91443636,16.4465937,64.00198135,16.4948947,64.08945474,16.5432699,64.17694175,16.5916911,64.26440738,16.6401907,64.35182119,16.6887562,64.43919833,16.7373877,64.52654633,16.7860854,64.6138501,16.834854,64.70112236,16.8836834,64.78835233,16.9325787,64.87554536,16.9815399,64.96270141,17.0305669,65.05040964,17.0796597,65.13749269,17.1288183,65.22453161,17.1780816,65.31154033,17.2273715,65.39849761,17.2767271,65.48545306,17.3261095,65.57234986,17.3755906,65.65920929,17.4251433,65.74603124,17.4747614,65.83281568,17.5244452,65.91956258,17.5741944,66.00639315,17.6242365,66.09294354,17.6738893,66.1795775,17.7238349,66.26617371,17.773845,66.35273155,17.8239236,66.43925214,17.8740653,66.52573557,17.9242723,66.61218031,17.9745457,66.69858704,18.0248832,66.78495575,18.0752859,66.87128637,18.1257539,66.95758681,18.1762974,67.04384128,18.2269294,67.13005793,18.2775915,67.21623572,18.3282862,67.30237515,18.3790799,67.38847632,18.4299389,67.47453909,18.4808646,67.56056336,18.5318534,67.64654909,18.582907,67.73249624,18.6340257,67.81840477,18.6852102,67.90426889,18.7364587,67.99009585,18.7877598,68.0758881,18.8391378,68.16164153,18.8905805,68.24731972,18.9421547,68.33303804,18.9938285,68.41865045,19.0454651,68.50428422,19.0971003,68.58982458,19.1487648,68.6753441,19.2005956,68.7608244,19.2524909,68.84626606,19.3044545,68.93166944,19.3564773,69.01703263,19.408569,69.10235566,19.4607226,69.18764069,19.5129403,69.27288506,19.5652224,69.35808983,19.6175689,69.44325505,19.6699787,69.52821655,19.7224502,69.61346683,19.7749975,69.69851479,19.827601,69.7835212,19.8802688,69.86848643,19.9330006,69.95341325,19.9857966,70.03830019,20.0386554,70.1231472,20.0915797,70.20795508,20.1445681,70.29272206,20.1976205,70.37744766,20.250737,70.46213275,20.3039177,70.54677852,20.3571557,70.63138489,20.410464,70.71595097,20.4638362,70.80047632,20.5172734,70.88496175,20.5707734,70.96940696,20.624337,71.05381142,20.6779643,71.13817535,20.7316554,71.22249852,20.7854142,71.30678304,20.8392326,71.39102492,20.8931148,71.47522577,20.9470595,71.55938607,21.0010683,71.64350614,21.0551418,71.72758508,21.1092781,71.81162258,21.1634778,71.89561969,21.217741,71.97957381,21.2720658,72.06348908,21.3264524,72.14736308,21.3809059,72.23119587,21.4354229,72.31498752,21.490003,72.39873796,21.5446463,72.48244705,21.5993528,72.56611484,21.6541225,72.64974124,21.7089554,72.73332619,21.7638514,72.81686984,21.8188106,72.90035504,21.8739254,72.98381539,21.9290103,73.06725092,21.9840663,73.15062802,22.0392774,73.23396338,22.0946108,73.31725695,22.1499497,73.40050874,22.2052906,73.48371867,22.2607534,73.56688618,22.3162826,73.6500141,22.3719332,73.73312501,22.4275845,73.81616703,22.4832985,73.89916693,22.5390751,73.98212468,22.5949127,74.06501449,22.6508146,74.14788551,22.7067161,74.23071484,22.7627418,74.31350355,22.8188313,74.39625037,22.8750378,74.47895425,22.9312523,74.56161565,22.9874721,74.64423451,23.0438117,74.72692711,23.1007582,74.80934445,23.1566776,74.89183548,23.213204,74.97428372,23.2697929,75.05668926,23.3264439,75.13907032,23.3831859,75.22139034,23.4399615,75.30366765,23.4967991,75.38590181,23.5536989,75.46809294,23.6106607,75.55024101,23.6676846,75.63234664,23.7247723,75.7143961,23.7819203,75.796408,23.8391003,75.87838268,23.8963705,75.96031486,23.9537042,76.04220371,24.0110997,76.12404921,24.068557,76.20585127,24.1260762,76.2876387,24.1836571,76.36935333,24.2412996,76.45102443,24.2990039,76.53265129,24.3567723,76.61423514,24.4145998,76.69577533,24.472489,76.77727174,24.5304396,76.85872436,24.5884518,76.94013314,24.6465255,77.02149803,24.7046606,77.10281898,24.7628571,77.18409645,24.8211132,77.26532937,24.8794325,77.34651821,24.9378132,77.42766293,24.9962551,77.50876158,25.0547541,77.5898179,25.1133185,77.67082997,25.1719441,77.75179781,25.2306309,77.83272123,25.2893785,77.91360014,25.3481873,77.99443465,25.4070574,78.07522473,25.4659885,78.15597028,25.5249805,78.23677902,25.5842359,78.31732949,25.6431484,78.39794131,25.7023232,78.47850839,25.7615589,78.55903072,25.8208555,78.63950823,25.8802128,78.71994113,25.9396311,78.80026467,25.9992277,78.88060757,26.0587669,78.96090563,26.1183668,79.0412224,26.1779104,79.12143007,26.2376317,79.20159248,26.2974139,79.28170983,26.3572563,79.3617819,26.417159,79.44180878,26.4771223,79.52176781,26.5372586,79.60170361,26.5973435,79.68159438,26.6574878,79.76144038,26.7176932,79.84126291,26.7778458,79.92101721,26.838171,80.00072591,26.8985564,80.08038335,26.9589994,80.16000066,27.0195051,80.23957216,27.0800701,80.31909801,27.140696,80.39857806,27.201382,80.47801225,27.2621279,80.55740051,27.3229338,80.63674286,27.3837997,80.71603925,27.4447255,80.79528944,27.505711,80.87449361,27.5667571,80.95365174,27.6278624,81.03276723,27.6890376,81.11183569,27.7502641,81.19085525,27.8115487,81.26982845,27.872893,81.34875536,27.934297,81.42763587,27.9957605,81.50646993,28.0572836,81.58525751,28.1188662,81.66399854,28.1805083,81.74269299,28.2422098,81.82134082,28.3039707,81.89994156,28.3657903,81.9784994,28.4276722,82.05700304,28.4895994,82.13546388,28.5515975,82.21387788,28.6136548,82.29224237,28.6757699,82.37056257,28.7379456,82.44890563,28.8002649,82.52713307,28.8625599,82.60524238,28.9248289,82.68337141,28.9872389,82.7614563,29.0497099,82.83949399,29.1122398,82.91748443,29.1748286,82.99542698,29.237479,83.07332285,29.3001856,83.15117138,29.362951,83.22897243,29.4257752,83.30672697,29.4886654,83.38443298,29.5516073,83.46209151,29.6146076,83.53970245,29.6776665,83.61726572,29.740784,83.69478131,29.8039601,83.77224917,29.8671947,83.84966925,29.9304877,83.92704139,29.9938391,84.00436636,30.0572506,84.08164288,30.1207189,84.15887095,30.1842421,84.23605134,30.2478314,84.31318369,30.3114708,84.39026816,30.3751722,84.4673045,30.4389318,84.5442928,30.5027497,84.62123275,30.5666255,84.6981238,30.6305568,84.7749672,30.6945488,84.85176241,30.7585994,84.92850909,30.8227075,85.00520734,30.8868735,85.08185729,30.9510939,85.15845847,31.0153758,85.23501115,31.0797154,85.3115152,31.1441128,85.38797063,31.20847,85.46437737,31.2729846,85.54073537,31.3375569,85.61704458,31.4021868,85.69330437,31.4668744,85.76951589,31.5316195,85.84572604,31.5965397,85.92183982,31.6614002,85.99790458,31.7263181,86.07384278,31.7912983,86.14980885,31.8563309,86.22575506,31.9213021,86.30162331,31.9864492,86.37744236,32.0516535,86.45321262,32.1169151,86.52893307,32.1833983,86.60460418,32.2476099,86.68022588,32.3130436,86.75579818,32.3785338,86.83132091,32.4441361,86.90682075,32.5097412,86.98224466,32.575403,87.05761896,32.6411216,87.13294386,32.7068972,87.20821881,32.7727296,87.28344557,32.8386188,87.35862094,32.9045648,87.43371837,32.9705693,87.50879457,33.0365663,87.58382131,33.1026823,87.65879542,33.1688613,87.73372375,33.2350904,87.80859957,33.301376,87.88342536,33.3677182,87.95820098,33.4341168,88.03292634,33.5005719,88.10760159,33.5670834,88.18222709,33.6336514,88.25679968,33.7002756,88.33132409,33.766956,88.40579813,33.8336875,88.48031191,33.9004807,88.55459489,33.96733,88.6289175,34.0342357,88.70318962,34.1011973,88.7775803,34.1682149,88.85158198,34.2352886,88.92570211,34.3024183,88.99977165,34.369604,89.07385152,34.4368455,89.14783237,34.504143,89.22174803,34.5714962,89.29561252,34.6389054,89.36942832,34.7063703,89.44319333,34.7738909,89.51690696,34.8414672,89.59056954,34.9090992,89.66416794,34.9767868,89.73772212,35.0445299,89.81123102,35.1123286,89.88468892,35.1802523,89.95809542,35.2481622,90.03145075,35.3161278,90.10475444,35.3841484,90.17800704,35.4522244,90.25120822,35.520282,90.32435794,35.5884684,90.39745621,35.65671,90.47050283,35.7250068,90.54349785,35.7933587,90.61644124,35.8617658,90.68933293,35.9302277,90.76217292,35.9987449,90.8349609,36.067317,90.90769735,36.1359447,90.98038208,36.2046267,91.05301479,36.2733643,91.12559557,36.342156,91.19812438,36.4110025,91.27060117,36.4799037,91.34300145,36.5488597,91.4154205,36.6178703,91.4877409,36.6869363,91.5600092,36.7560576,91.63220335,36.825232,91.70436721,36.8944608,91.77647877,36.9637442,91.84853799,37.033082,91.92054482,37.1024741,91.99249923,37.1718443,92.06440135,37.2413433,92.13625079,37.3108966,92.2080477,37.3805041,92.27979201,37.4501659,92.35148368,37.5198818,92.42312269,37.5896518,92.49451241,37.659477,92.56624255,37.7293541,92.6377233,37.7992862,92.70915122,37.8692723,92.78052627,37.9393124,92.85184839,38.0094063,92.92311757,38.0795541,92.99433374,38.1497557,93.06549688,38.220011,93.13660694,38.2903201,93.20766388,38.3606828,93.27866766,38.4311686,93.34961825,38.5016385,93.42051559,38.572162,93.49135962,38.6426698,93.56215036,38.7133003,93.63288774,38.7839843,93.7035749,38.8547309,93.77420994,38.9255218,93.84478717,38.996366,93.91531082,39.0672634,93.9857809,39.1382142,94.05619689,39.2092181,94.12655924,39.2802741,94.19686836,39.3513842,94.26703345,39.4227131,94.3372955,39.4939289,94.4073833,39.5653068,94.4775673,39.6364661,94.54760743,39.7077324,94.61758848,39.7791604,94.68751692,39.8506302,94.75739509,39.9221635,94.82721922,39.9937498,94.89698927,40.065389,94.96670511,40.1370817,95.03636687,40.2088259,95.10597441,40.2806229,95.1755277,40.3524723,95.24502675,40.4243743,95.31447146,40.4963268,95.38386165,40.5683329,95.45319765,40.6403922,95.52247918,40.712504,95.59170626,40.784668,95.66087882,40.8568842,95.72999683,40.9291526,95.79906024,41.0014733,95.86806901,41.0738461,95.93702311,41.1462733,96.00592255,41.2187501,96.07476718,41.291279,96.14355674,41.3638603,96.21229197,41.4364997,96.28104001,41.5093118,96.34959765,41.5819211,96.41816795,41.6547096,96.48668497,41.7275557,96.55514535,41.8004477,96.62355418,41.8733914,96.69190458,41.9463913,96.76019956,42.0194382,96.82844122,42.0925366,96.89662576,42.1656865,96.96475503,42.2388879,97.03282899,42.3121337,97.1008476,42.3854378,97.16881062,42.4587977,97.2367189,42.5322053,97.30457347,42.6056635,97.37237034,42.6791727,97.44011017,42.752733,97.50779431,42.8263444,97.5754238,42.8999996,97.64299834,42.9737132,97.71051599,43.0474778,97.77797913,43.1212933,97.84538433,43.1951573,97.91273529,43.2690788,97.9800311,43.3430433,98.04727249,43.4170623,98.11445553,43.4911322,98.18158294,43.565251,98.24865489,43.6394222,98.31567083,43.7136441,98.38263029,43.7879165,98.44953405,43.8622395,98.51637991,43.9366122,98.58310241,44.0110983,98.64990714,44.0855068,98.71658609,44.1600316,98.78320792,44.2346098,98.84977268,44.3092353,98.91628224,44.383908,98.98273571,44.4586338,99.04913273,44.5334108,99.11547325,44.6082368,99.18175701,44.6831135,99.24798415,44.7580398,99.31415379,44.8330155,99.38026802,44.9080417,99.4463263,44.9831158,99.51232713,45.0582419,99.57827076,45.1334189,99.64415862,45.2086446,99.70998907,45.2839199,99.77576265,45.359245,99.84147933,45.4346197,99.90694676,45.5102174,99.97274159,45.5855183,100.0382871,45.6610417,100.1037759,45.7366145,100.1692077,45.8122362,100.2345822,45.8879079,100.2999015,45.9636948,100.3651886,46.0394653,100.4303915,46.1152851,100.4955371,46.1911529,100.5606255,46.2670709,100.6256292,46.3430382,100.6906009,46.4189895,100.755517,46.4950548,100.8203756,46.571169,100.8851768,46.6473323,100.9499203,46.7235444,101.0146064,46.7998054,101.0792348,46.8761142,101.1438056,46.9524728,101.2083187,47.0288803,101.272774,47.1053364,101.3371716,47.1818412,101.4015527,47.2584721,101.4657934,47.3349966,101.5301289,47.4121856,101.5941836,47.4883461,101.6582919,47.5650932,101.7223422,47.641889,101.7863342,47.7187332,101.8502739,47.795653,101.9141623,47.8726028,101.9779804,47.9495917,102.0417404,48.0266288,102.1054421,48.1037139,102.1690856,48.1808472,102.2326709,48.2580285,102.2961978,48.3352579,102.3596537,48.4125278,102.423058,48.4898243,102.4864097,48.5671972,102.549703,48.6446179,102.6129375,48.7220867,102.6761136,48.7996026,102.7392313,48.8771666,102.8022904,48.9547781,102.8652909,49.0324373,102.9282328,49.110144,102.9911159,49.1878981,103.0539405,49.2656999,103.1166802,49.3436785,103.1794023,49.4218881,103.2420501,49.4998311,103.3045711,49.5777397,103.3671539,49.655548,103.4296513,49.7335047,103.4920635,49.8116375,103.5544168,49.8898174,103.6167109,49.9680443,103.678946,50.0463183,103.7411221,50.1246391,103.8032389,50.203007,103.8652965,50.2814218,103.9273097,50.3599112,103.9892338,50.4383916,104.0511136,50.5169467,104.112934,50.5955486,104.1744865,50.6742257,104.2363967,50.7528922,104.2980389,50.831634,104.3596216,50.9104222,104.4211477,50.9892653,104.4826153,51.0681485,104.5440198,51.1470769,104.6053394,51.2260709,104.6666319,51.3051053,104.7278748,51.3841382,104.7890404,51.4632509,104.8501461,51.5424099,104.9111919,51.6216152,104.9721783,51.7008661,105.0331045,51.7801634,105.0939707,51.8595066,105.154777,51.9388958,105.2155233,52.0183308,105.2762017,52.0977997,105.3368278,52.1773267,105.397394,52.2568991,105.4579003,52.3365173,105.5183462,52.416181,105.5787319,52.4958904,105.6390574,52.5756453,105.6993227,52.6554458,105.7595277,52.7352917,105.8196723,52.8151831,105.879707,52.8952147,105.9397101,52.975157,105.9997439,53.0551297,106.0596458,53.1352019,106.1194872,53.2153174,106.1792692,53.2954804,106.2389908,53.3756886,106.2981939,53.4563548,106.3582519,53.5362401,106.4177911,53.6165832,106.4772697,53.6969709,106.5366878,53.7774039,106.5960452,53.8578818,106.6553419,53.9384046,106.7145777,54.0189721,106.7737526,54.0995842,106.8328669,54.1802412,106.8919197,54.2609426,106.9509125,54.3416901,107.0098436,54.4224807,107.0687145,54.5033161,107.1275236,54.5841956,107.1862716,54.6651195,107.2449584,54.7460877,107.3035841,54.8271002,107.3621482,54.9081567,107.4206521,54.989257,107.4790938,55.0704013,107.5374745,55.1515905,107.595794,55.2328239,107.654052,55.3141012,107.7122486,55.3954225,107.7703838,55.4767877,107.8284575,55.5581968,107.8864704,55.6396522,107.9444211,55.721149,108.0023114,55.8026901,108.0601389,55.8842741,108.1179048,55.965902,108.1756091,56.0475733,108.2332516,56.1292883,108.2907481,56.2112079,108.3482667,56.2930087,108.4058081,56.3746936,108.4632036,56.4565844,108.5205371,56.5385164,108.5778105,56.6204927,108.6350203,56.7025112,108.6921681,56.7845729,108.749254,56.8666778,108.8062778,56.9488257,108.8632399,57.0310212,108.9201396,57.113255,108.9769779,57.1955326,109.0337533,57.2778523,109.0904659,57.3602125,109.1471169,57.442618,109.2037054,57.5250708,109.2602321,57.6075621,109.3166966,57.6900967,109.3730984,57.7726728,109.4294376,57.8552884,109.4857145,57.93795,109.5419267,58.0206568,109.5980789,58.1034028,109.6541699,58.1861888,109.710197,58.2690196,109.766161,58.3518938,109.8220608,58.4348112,109.8779019,58.5177663,109.9336785,58.6007659,109.9893924,58.6838076,110.0450432,58.7668907,110.1006303,58.8500152,110.1561564,58.9331795,110.2116185,59.0163887,110.2670175,59.0996394,110.3223549,59.1829322,110.3776297,59.2662654,110.4328409,59.3496424,110.4879891,59.4330612,110.5430743,59.5165216,110.5980964,59.6000235,110.6530555,59.683567,110.7079508,59.7671516,110.7627829,59.8507765,110.8175525,59.9344442,110.8722591,60.0181534,110.9269023,60.1019038,110.9814832,60.1856946,111.0359998,60.2695273,111.0904531,60.3534013,111.1448431,60.4373164,111.1991697,60.5212725,111.2534325,60.6052691,111.3076322,60.6893071,111.3617685,60.7733861,111.4158412,60.857506,111.4698503,60.9416666,111.5237959,61.0258684,111.577678,61.1101106,111.6314964,61.1943934,111.6852511,61.2787169,111.7389421,61.3630809,111.7924015,61.4476165,111.8460156,61.5321545,111.8994661,61.6165457,111.9530686,61.7009417,112.0064428,61.7855737,112.0597778,61.8701992,112.1130224,61.9548462,112.1660898,62.0397404,112.2192816,62.1245574,112.272334,62.2093238,112.3254363,62.294313,112.3782553,62.3785964,112.4311155,62.4634834,112.4839117,62.5484103,112.5366436,62.633377,112.5893166,62.7184093,112.6419315,62.8034623,112.6944708,62.8885486,112.7469482,62.9736813,112.7993623,63.0588485,112.8517088,63.1440536,112.9039907,63.229298,112.9562083,63.3145816,113.0083499,63.3998982,113.0604333,63.4852342,113.1124577,63.5706362,113.1644173,63.6560779,113.2163126,63.7415583,113.2681434,63.8270781,113.3199095,63.9126369,113.371611,63.9982347,113.4232478,64.0838715,113.4748161,64.1695454,113.5263209,64.2552521,113.5777636,64.3410055,113.6291413,64.4267975,113.6804542,64.5126287,113.7317024,64.5984986,113.7828855,64.684407,113.8340036,64.770354,113.8850572,64.8563397,113.9360455,64.9423633,113.9869691,65.028426,114.0378274,65.1145271,114.0886458,65.2008464,114.1393743,65.2870242,114.1900376,65.3732402,114.2405847,65.4594487,114.291145,65.5456071,114.341613,65.6319378,114.3920158,65.7183066,114.4423534,65.8047135,114.4926252,65.8911575,114.5428322,65.9776402,114.5929739,66.0641608,114.6430505,66.1507194,114.6930611,66.237315,114.7430067,66.323949,114.7928867,66.4106206,114.8427014,66.49733,114.8924504,66.584077,114.9419169,66.6709154,114.9917525,66.7576848,115.041305,66.8445442,115.0907925,66.9314413,115.1402151,67.0183747,115.1895707,67.1053463,115.2388606,67.192355,115.2880847,67.2794013,115.3372431,67.3664844,115.3863369,67.4536036,115.4353639,67.5407613,115.484325,67.6279558,115.5332201,67.7151871,115.5820493,67.8024552,115.6308127,67.8897603,115.67951,67.9771021,115.7281414,68.0644806,115.7767067,68.1518959,115.8252061,68.2393477,115.8736386,68.3268359,115.9220057,68.4143609,115.9703068,68.5019224,116.0185417,68.5895204,116.0667104,68.6771547,116.1148129,68.7648254,116.1627002,68.8528171,116.2106702,68.940559,116.2587225,69.028055,116.3065597,69.1158694,116.3543308,69.2037211,116.4020356,69.2916089,116.449674,69.3795326,116.4972459,69.4674923,116.5447515,69.5554879,116.5921901,69.6435187,116.6395627,69.731586,116.6868687,69.819689,116.7341083,69.9078277,116.7812806,69.9960008,116.8283868,70.0842111,116.8754265,70.1724566,116.9224001,70.2607399,116.9693064,70.3490564,117.0161463,70.4374085,117.0629192,70.5257958,117.1096254,70.6142183,117.1562647,70.7026761,117.2028374,70.7911692,117.2493455,70.8796959,117.2957843,70.9682591,117.3421563,71.0568573,117.3884614,71.1454906,117.4346996,71.2341588,117.4808706,71.3228619,117.5269747,71.4115998,117.5730118,71.5003725,117.6189818,71.5891799,117.6648848,71.6780221,117.7107206,71.7668989,117.7564893,71.8558102,117.8021908,71.9447562,117.847824,72.0337359,117.8933906,72.1227486,117.9388904,72.2117974,117.9843228,72.3008811,118.0296881,72.3899991,118.0749861,72.4791512,118.1202168,72.5683375,118.1653801,72.6575581,118.2104762,72.7468166,118.2555062,72.836106,118.3004674,72.9254287,118.345361,73.0147851,118.3901871,73.1041753,118.4349456,73.1935994,118.4796366,73.2830573,118.5242602,73.3725493,118.5688161,73.4620746,118.6133061,73.5516386,118.6577293,73.6412323,118.7020822,73.7308584,118.7463675,73.820518,118.7905855,73.9102112,118.8347353,73.9999376,118.8788161,74.0896963,118.9228301,74.1794898,118.9667764,74.2693173,119.010655,74.3591767,119.0544675,74.4490704,119.0982103,74.53899591,119.1418852,74.62895441,119.1854916,74.71894714,119.2290105,74.80897161,119.2724805,74.89902773,119.3158803,74.98911144,119.3592142,75.079234,119.40248,75.16938928,119.4456775,75.25958174,119.4888071,75.34980112,119.5318686,75.44005403,119.5748618,75.53033948,119.6177864,75.62065622,119.6606426,75.71101179,119.703431,75.8013945,119.7461514,75.89180903,119.7888034,75.98225609,119.8313871,76.07273518,119.8739024,76.16324651,119.9163495,76.25378823,119.9587271,76.34436368,120.0010414,76.43496672,120.0432839,76.52560376,120.0854572,76.61627397,120.1275604,76.7069772,120.1696007,76.79770671,120.2115686,76.8884735,120.2534679,76.97927195,120.2953001,77.07010108,120.3370623,77.16096276,120.3787557,77.25185588,120.4203805,77.34278053,120.4619367,77.43373661,120.5034241,77.524724,120.5448431,77.61574361,120.5861597,77.70755959,120.6274404,77.7986377,120.6685612,77.88921004,120.7098267,77.9801309,120.7509015,78.07130537,120.7919076,78.16251083,120.8328493,78.25376991,120.8737175,78.3450432,120.9145167,78.43634155,120.9549907,78.52801416,120.9956528,78.61937243,121.0365006,78.71042082,121.0770238,78.80184189,121.117478,78.89329353,121.1578632,78.98477568,121.1981744,79.07625845,121.2384213,79.16780137,121.2785991,79.25937443,121.3187077,79.35097802,121.3587471,79.44261195,121.3987173,79.53427601,121.4386183,79.62597025,121.4784501,79.71769457,121.5182145,79.80951247,121.5579076,79.90131526,121.5975314,79.99312952,121.6370859,80.08497391,121.676571,80.17684716,121.7159865,80.2687512,121.755331,80.36060253,121.7947451,80.45271688,121.8339523,80.54470914,121.872953,80.63658167,121.9120214,80.72863382,121.9510201,80.82071545,121.9899504,80.91356178,122.028809,81.00496694,122.0675991,81.09713669,122.1063196,81.1893353,122.1449704,81.28156359,122.183552,81.37382412,122.2220636,81.46611202,122.2605052,81.55842817,122.2988773,81.65077294,122.3371795,81.74314662,122.3754121,81.83554925,122.413575,81.92798073,122.4516679,82.020441,122.4896911,82.11293001,122.5276444,82.20544784,122.5655279,82.2979942,122.6033414,82.39056914,122.6410852,82.48314884,122.6787587,82.57578026,122.7163625,82.6684403,122.7538963,82.7611287,122.7913588,82.85384168,122.8287526,82.94658661,122.8660763,83.03935979,122.9033299,83.13216112,122.9405135,83.22499055,122.9776269,83.31784798,123.0146703,83.4107335,123.0516435,83.50364696,123.0885465,83.59658831,123.1253794,83.68955751,123.162142,83.78255449,123.198807,83.87571626,123.2354292,83.96876861,123.271981,84.06184853,123.3084626,84.15495601,123.3448738,84.24809098,123.3812429,84.3411186,123.4175135,84.43430865,123.4537137,84.52752606,123.4898435,84.62077078,123.5259033,84.71404255,123.5618921,84.80734202,123.5978105,84.90066836,123.6336628,84.99401928,123.6695479,85.08739973,123.7052554,85.18080716,123.7408924,85.27424152,123.7764588,85.36770271,123.8119551,85.46119196,123.8473808,85.5547069,123.8827355,85.64824906,123.9180194,85.74181737,123.9532329,85.83541229,123.9883754,85.92903376,124.0234473,86.02268174,124.0584473,86.11635657,124.0933769,86.21005741,124.1282364,86.30378459,124.1630247,86.3975433,124.1977427,86.49132313,124.2323898,86.58513033,124.2669669,86.67896299,124.3014723,86.77282163,124.3359064,86.86670596,124.3702696,86.96061476,124.4045623,87.05455212,124.438784,87.14851421,124.4729354,87.24250211,124.5070152,87.33651576,124.5410223,87.43055511,124.57496,87.52461829,124.6088267,87.61870889,124.6426224,87.71281689,124.676347,87.80695846,124.7100004,87.90112547,124.7435828,87.99531785,124.777094,88.08953559,124.8105306,88.18377971,124.8438994,88.27804797,124.8771968,88.37234081,124.9104232,88.46665936,124.9435777,88.56100296,124.9766616,88.65537021,125.0096761,88.74976327,125.0426175,88.84418173,125.0754875,88.93862502,125.1082863,89.03309311,125.1410136,89.12758594,125.1736696,89.22210209,125.2062546,89.31664371,125.2387676,89.41121081,125.2712107,89.50580207,125.3035808,89.60041783,125.3358797,89.69505798,125.3681071,89.78972269,125.4002627,89.8844115,125.4323471,89.97912462,125.4643599,90.07386189,125.4963008,90.1686233,125.5281707,90.26340881,125.5599682,90.35821763,125.5916947,90.45305116,125.6233496,90.54790868,125.6549329,90.64279001,125.6864441,90.7376954,125.7176743,90.83285867,125.7489567,90.92806197,125.7805509,91.02280541,125.8117754,91.11755108,125.842929,91.21257431,125.8740101,91.30762134,125.9050195,91.40269516,125.9359587,91.49778928,125.9668244,91.59290651,125.9976184,91.68804707,126.0283404,91.78321085,126.058991,91.8783978,126.0895694,91.97360815,126.1200758,92.06884218,126.1505099,92.16409845,126.1808724,92.25937754,126.2111629,92.35467953,126.2413815,92.45000437,126.2716002,92.54572451,126.3015976,92.64072634,126.3316,92.73611941,126.3615289,92.831539,126.3913873,92.92697343,126.4211792,93.02245312,126.4509028,93.11793644,126.4805448,93.21344082,126.5101148,93.3089689,126.5396126,93.40451973,126.5690383,93.50008987,126.5983919,93.59568472,126.6276733,93.69130169,126.6568825,93.78694073,126.6860194,93.88260178,126.7150754,93.97828471,126.7440633,94.07397105,126.7729821,94.1696976,126.8018305,94.26544609,126.830606,94.36121267,126.8593094,94.45700461,126.8879407,94.55281819,126.9164994,94.64865341,126.9449836,94.74451015,126.9733975,94.84038835,127.0017393,94.93628796,127.0300087,95.03221312,127.0582057,95.12815541,127.0863321,95.22411896,127.1143911,95.32010131,127.142371,95.41610712,127.1702785,95.51213401,127.1981123,95.6081852,127.2258806,95.70425083,127.2535721,95.80034048,127.2811894,95.89645584,127.3087348,95.99258708,127.3362095,96.08873904,127.3636086,96.18491167,127.3909366,96.28110142,127.418149,96.37755325,127.4453319,96.47378705,127.4724411,96.57004289,127.4995223,96.66608146,127.5264896,96.76237449,127.5533826,96.85869043,127.5802016,96.95502659,127.6069496,97.051386,127.6336256,97.14775898,127.6602286,97.24415551,127.686759,97.34057201,127.7132169,97.43700858,127.7396023,97.53346488,127.7659152,97.62994098,127.7921558,97.72643683,127.8183237,97.82295235,127.8444202,97.91948718,127.8704431,98.0160419,127.8963935,98.11261613,127.9222713,98.20920708,127.9480764,98.30582022,127.9738092,98.40245246,127.9994696,98.49910426,128.0250564,98.59577532,128.0505714,98.6924653,128.0760138,98.78917265,128.101384,98.88590104,128.1266835,98.98270735,128.1519328,99.07947378,128.1770856,99.17625907,128.2021658,99.27306237,128.2271667,99.36988783,128.2521017,99.4667297,128.2769401,99.56358992,128.3017288,99.66040914,128.3264466,99.75730637,128.351092,99.85422204,128.3756663,99.9511561,128.4001677,100.0481081,128.4245958,100.1450788,128.4489516,100.2420677,128.4732351,100.3390752,128.4974462,100.4361059,128.5215879,100.5331492,128.5456541,100.6302104,128.5696481,100.7272895,128.5935699,100.8243865,128.6174194,100.9215012,128.6411965,101.0186336,128.6649014,101.1157838,128.688534,101.2129515,128.7120953,101.3101365,128.7339787,101.4073388,128.757395,101.5046563,128.7807395,101.6018938,128.804012,101.6991487,128.8272126,101.7963238,128.8503989,101.893613,128.8734556,101.9909192,128.8964402,102.0882359,128.919353,102.1855728,128.9421938,102.2829304,128.9649628,102.3803043,128.9876599,102.4776945,129.0102852,102.5751019,129.0328606,102.672526,129.0553423,102.7699667,129.0777522,102.867424,129.1000901,102.9648977,129.1223616,103.0623878,129.1445564,103.1599405,129.1666796,103.2574633,129.1902339,103.3550023,129.2107111,103.4525579,129.2326195,103.5501292,129.2559527,103.64767,129.2777162,103.7452733,129.2994077,103.8428927,129.321028,103.9405278,129.3425768,104.0381787,129.3640538,104.1358453,129.3854616,104.233526,129.4037692,104.331223,129.4280601,104.4289363,129.4492522,104.5266653,129.4703733,104.6244097,129.491423,104.722168,129.5124008,104.8199431,129.5333082,104.9177333,129.5541175,105.015675,129.5749357,105.1134978,129.5956882,105.2116153,129.6162551,105.3091866,129.6367563,105.4070529,129.6572655,105.5047975,129.6776767,105.6026928,129.6980168,105.7006014,129.7182889,105.7985403,129.7381551,105.8967442,129.758385,105.994697,129.7783429,106.0926642,129.7986656,106.190385,129.8185824,106.288382,129.8384282,106.3863935,129.8582035,106.4844191,129.8779077,106.5824591,129.8975374,106.6805127,129.9170979,106.7785657,129.9365923,106.8766476,129.955797,106.9749219,129.9753704,107.0728508,129.9946536,107.1709744,130.0138686,107.2691115,130.0330127,107.3672623,130.0520867,107.4654268,130.0710908,107.5636049,130.0900248,107.6617956,130.1088897,107.7600006,130.1276855,107.8582187,130.1464107,107.9564701,130.1650655,108.0547115,130.1836501,108.152968,130.2021674,108.2512386,130.2206167,108.3495219,130.2389954,108.4478186,130.2572963,108.5461315,130.2755366,108.6444539,130.293708,108.7427892,130.3118104,108.8411371,130.3298439,108.9394977,130.3478086,109.0378709,130.3657106,109.1362531,130.3835397,109.234656,130.4012986,109.3330666,130.418989,109.4314895,130.4366137,109.5299239,130.4541672,109.6283712,130.4716524,109.7268308,130.4890694,109.8253025,130.5064183,109.9237864,130.5236987,110.0222821,130.5409111,110.1207889,130.5580561,110.2193083,130.5751332,110.3178395,130.5921412,110.4163826,130.6090848,110.5149367,130.625959,110.6135029,130.6427652,110.7120805,130.6595044,110.8106695,130.6761738,110.9092644,130.6927781,111.0078762,130.7093152,111.1064996,130.7257853,111.2051339,130.7421868,111.3037797,130.7585256,111.4024395,130.7748055,111.5011024,130.7910106,111.5997815,130.8071461,111.698471,130.8232154,111.7971713,130.8392182,111.8958825,130.8551544,111.9946051,130.8710248,112.0933375,130.886829,112.1920808,130.902567,112.2908341,130.9182388,112.3895982,130.9338446,112.4883728,130.9483652,112.588077,130.9648553,112.6859535,130.9802634,112.7847591,130.9956075,112.8835736,131.0108835,112.9823987,131.0260953,113.0812316,131.0412457,113.1800768,131.0563229,113.278934,131.0713389,113.3778001,131.086291,113.4766757,131.1011773,113.5755614,131.1159988,113.6744566,131.1307556,113.7733621,131.1454478,113.8722768,131.1600753,113.971201,131.1746382,114.0701357,131.189137,114.1690789,131.2035676,114.2680324,131.2179774,114.3671634,131.2322485,114.4659648,131.2464913,114.5649453,131.2606708,114.6639348,131.2747846,114.7629338,131.2888357,114.8619417,131.302825,114.9609673,131.3167538,115.0599952,131.3306185,115.1590319,131.3444173,115.2580752,131.3581519,115.3571281,131.3718237,115.4561892,131.3854325,115.555259,131.3989784,115.6543415,131.4124618,115.7534284,131.4258842,115.852525,131.4392383,115.9516265,131.4525319,116.050731,131.4657658,116.1498511,131.478938,116.2489804,131.4920477,116.3481173,131.5050954,116.4472626,131.5180815,116.5464159,131.5310018,116.6455749,131.5438646,116.7447442,131.5566651,116.8439207,131.5694056,116.9431054,131.5820847,117.0422952,131.5947025,117.1414946,131.6072593,117.2407034,131.6197553,117.3399198,131.6321905,117.4391439,131.6445569,117.538377,131.6568729,117.637616,131.6691331,117.7368617,131.6813263,117.8361197,131.6933239,117.9356321,131.7056053,118.0350622,131.7176432,118.1343537,131.7295251,118.2332829,131.7414186,118.3325735,131.7532537,118.431873,131.7650295,118.5311783,131.7767228,118.6304756,131.7883825,118.7297402,131.7999809,118.8290653,131.8115176,118.9283954,131.823,119.0277343,131.8344404,119.1271348,131.8457922,119.2264257,131.8570986,119.3257849,131.8683469,119.4251506,131.8795388,119.5245228,131.8906714,119.6239016,131.901747,119.72329,131.9127653,119.8226828,131.9237185,119.9220816,131.9346201,120.021485,131.9454727,120.1208947,131.9562611,120.2203113,131.9669929,120.3197342,131.9776571,120.4191657,131.988219,120.5186387,131.9987813,120.6180797,132.0093384,120.7174886,132.0197872,120.8169383,132.0301807,120.9163971,132.0405234,121.0158663,132.0508032,121.1153398,132.0610296,121.214816,132.0712002,121.3142982,132.0813157,121.4137858,132.0913762,121.5132789,132.1013762,121.6127786,132.1113336,121.7122824,132.1212313,121.8117916,132.1310727,121.9113065,132.1408598,122.0108267,132.1505938,122.1103507,132.160272,122.2098799,132.1698965,122.3094159,132.1794673,122.408957,132.1889878,122.508503,132.19845,122.6080535,132.2078619,122.7076096,132.2172158,122.8071644,132.2265235,122.9067292,132.2356118,123.0064073,132.2449672,123.1058779,132.2541052,123.2054594,132.2631969,123.3050452,132.2722518,123.4046306,132.2812415,123.5042256,132.290179,123.6038298,132.2990638,123.7034341,132.307897,123.803043,132.3163044,123.9029487,132.3251486,124.0027739,132.3337174,124.1021863,132.3427165,124.2015231,132.3512914,124.30115,132.3598174,124.4007855,132.3682922,124.5004255,132.3767169,124.6000696,132.3850903,124.6997132,132.3934146,124.7993657,132.4016764,124.8990241,132.4099133,124.9986839,132.4180963,125.0983473,132.4262211,125.1980166,132.4343014,125.2976859,132.4423279,125.3973629,132.450305,125.4970437,132.4580454,125.5967283,132.4660979,125.696417,132.4739259,125.7961085,132.4817048,125.8958047,132.4894444,125.9955059,132.4971275,126.0952106,132.5047622,126.1949179,132.5123488,126.2946288,132.5198927,126.3943437,132.5273842,126.4940618,132.5348323,126.593786,132.5422242,126.6935114,132.5495823,126.7932407,132.5568856,126.8929731,132.5641416,126.9927086,132.571351,127.0924477,132.5785139,127.1921903,132.5856306,127.2919363,132.5927105,127.3916855,132.59973,127.4914356,132.6067087,127.5913229,132.6134875,127.6911263,132.6203761,127.7908884,132.6274106,127.8906535,132.6342312,127.9906023,132.6409089,128.0901507,132.6476178,128.1897963,132.6542789,128.289573,132.6608944,128.389354,132.6674707,128.4891364,132.6740032,128.5889324,132.6804887,128.6887217,132.6869301,128.7885144,132.693328,128.8883093,132.6996246,128.9881073,132.7059358,129.087908,132.7121952,129.1877114,132.7184285,129.2875162,132.7246676,129.387325,132.7307971,129.4871365,132.7369038,129.5869507,132.7429673,129.6867737,132.7489634,129.7865786,132.7549338,129.8864006,132.7608638,129.9862225,132.7667504,130.0860482,132.7725957,130.1858777,132.7784152,130.2857071,132.7841779,130.3855416,132.7898992,130.4853784,132.7955742,130.5852176,132.8012193,130.6850591,132.8068175,130.7849031,132.8123775,130.8847492,132.8178963,130.9845975,132.8229684,131.0844481,132.8288147,131.1843012,132.8342137,131.2841549,132.8395732,131.3840119,132.8448887,131.4838711,132.8501743,131.583732,132.8554161,131.6835954,132.860619,131.7834608,132.8656557,131.8833282,132.870908,131.9831976,132.8759941,132.0830692,132.8810429,132.1829426,132.8860545,132.2828179,132.8910273,132.3826952,132.895961,132.4825763,132.9006038,132.5824603,132.9054662,132.6823374,132.9105311,132.7822219,132.9153056,132.8821086,132.9200538,132.9819967,132.9247799,133.0818856,132.9294554,133.1817785,132.9340946,133.2816718,132.9386976,133.3815651,132.9432569,133.4814616,132.9477877,133.5813598,132.9522822,133.6812596,132.9567417,133.7811609,132.9611652,133.8810638,132.9655541,133.9809683,132.9699066,134.0808728,132.9742254,134.1807806,132.9785095,134.2806895,132.982759,134.3806,132.9868059,134.4805118,132.9909918,134.5804249,132.9951532,134.6803397,132.9994308,134.7802556,133.0035037,134.8801727,133.0075487,134.9800975,133.0115688,135.0800179,133.0155485,135.1799374,133.0194935,135.2798605,133.0233476,135.3797853,133.0272274,135.4797543,133.0307188,135.5799442,133.0344955,135.6796731,133.0386719,135.7795628,133.0424272,135.8794952,133.0461477,135.9794274,133.0498198,136.0793479,133.0534769,136.1792473,133.0571018,136.2791817,133.0606956,136.3791171,133.0642554,136.4790539,133.0677875,136.5789914,133.071289,136.6789302,133.074758,136.7788701,133.0782053,136.8788156,133.0816148,136.9787565,133.0849981,137.0786988,133.0883344,137.1786432,133.0916543,137.2785738,133.0949619,137.3785187,133.0982163,137.4784543,133.1014502,137.5784017,133.1046774,137.6783477,133.1078465,137.7782928,133.1109941,137.8782427,133.1141133,137.9781935,133.1172207,138.0781393,133.1202841,138.1780918,133.1233189,138.2780451,133.1263259,138.3779991,133.1293049,138.4779543,133.1322562,138.5779087,133.1351807,138.6778652,133.1380779,138.7778225,133.1409481,138.8777806,133.1437914,138.9777389,133.1466361,139.0776984,133.1494257,139.1776591,133.1521909,139.2776201,133.1549232,139.3775818,133.1576319,139.4775437,133.1603156,139.5775074,133.1629728,139.6774711,133.1655396,139.7774356,133.1681462,139.8774032,133.1707261,139.9773692,133.1732816,140.07734,133.1758767,140.1773075,133.1783834,140.2772762,133.1808648,140.3772443,133.1833207,140.477213,133.1857528,140.5771808,133.1881764,140.6771507,133.1905589,140.7771222,133.1929165,140.8770953,133.1952519,140.9770958,133.1975641,141.0770684,133.1998502,141.1770402,133.2021143,141.277015,133.2043564,141.3769899,133.2065748,141.4769653,133.2087692,141.5769413,133.210945,141.6771326,133.2131861,141.777218,133.2153132,141.8771934,133.2173272,141.9770597,133.2193932,142.0768024,133.2214539,142.1767813,133.2235116,142.2767598,133.2255295,142.3767395,133.227525,142.4767187,133.2294874,142.5767016,133.2314401,142.6766826,133.2333868,142.7766623,133.2352988,142.8766441,133.2370322,142.9767445,133.2389115,143.0767259,133.2406749,143.1767121,133.2427256,143.276576,133.2445354,143.3765614,133.2463236,143.4765457,133.248092,143.5765303,133.24984,143.6765172,133.2515697,143.7765022,133.2532634,143.8765666,133.2549349,143.9765533,133.2566041,144.0765392,133.2582714,144.176522,133.2599056,144.2765088,133.2615385,144.3764167,133.2631327,144.4764044,133.2647099,144.5763922,133.2663881,144.6766064,133.2679312,144.7765931,133.2690455,144.8766157,133.2708389,144.9763434,133.2723258,145.0763314,133.2737989,145.17632,133.2752512,145.2763096,133.2766861,145.3762995,133.2780942,145.4762898,133.2794946,145.5762805,133.2808866,145.6762711,133.2819024,145.7763002,133.2833085,145.8765507,133.2849231,145.9762143,133.2861138,146.0762095,133.2875418,146.176202,133.2888449,146.2761933,133.2901068,146.376186,133.2913433,146.4761925,133.2926009,146.576186,133.2938232,146.6761797,133.2950301,146.7761736,133.2962217,146.8761677,133.2973982,146.976162,133.2985595,147.0761568,133.2996838,147.176151,133.3008381,147.276146,133.3019551,147.376141,133.3030593,147.4761362,133.3041476,147.5761316,133.3052169,147.6761153,133.3062209,147.7761112,133.30734,147.8761046,133.3083717,147.9760983,133.3093733,148.0760944,133.3103773,148.1760907,133.31138,148.2760871,133.3123627,148.3760836,133.3133271,148.4760803,133.3142784,148.5760771,133.3152173,148.6760738,133.3161431,148.7760723,133.3170541,148.8760696,133.3179541,148.9760669,133.3188411,149.0760647,133.3197159,149.1760625,133.3205785,149.2760601,133.3213415,149.3760578,133.3222702,149.4760557,133.3230966,149.5760535,133.3239114,149.6760515,133.3247163,149.776049,133.3255077,149.876047,133.3262878,149.9760797,133.3270697,150.0760874,133.3278268,150.1760857,133.3285727,150.2760837,133.3292126,150.3762048,133.3300764,150.4762451,133.3306462,150.5762335,133.3313343,150.6761985,133.3320262,150.7761974,133.3327671,150.8761544,133.3334763,150.9760309,133.3341369,151.0760294,133.3347682,151.176028,133.3354061,151.2760286,133.3360566,151.3760257,133.3366786,151.4760216,133.3372894,151.5760203,133.3378907,151.6760189,133.3384824,151.7760176,133.3390563,151.8760218,133.3395348,151.9760151,133.3401067,152.0760126,133.3406825,152.1760114,133.3412276,152.2760155,133.3418334,152.3760136,133.342361,152.4760117,133.3428778,152.5769494,133.3433879,152.6760094,133.3438896,152.7760084,133.3443828,152.8760072,133.3448799,152.9760206,133.3453565,153.0760194,133.3458256,153.1760187,133.3462861,153.2760175,133.3465777,153.3760163,133.3471484,153.4760151,133.3476122,153.576014,133.3480414,153.6760127,133.3483169,153.7760113,133.3487289,153.8760104,133.3491263,153.9760063,133.3495268,154.0760027,133.3499215,154.1759631,133.3503082,154.2759628,133.3506881,154.3759624,133.3510608,154.4759616,133.3514307,154.5759609,133.3517907,154.675961,133.352136,154.7759589,133.35248,154.8759494,133.3528291,154.9759491,133.3531614,155.0759487,133.3534897,155.1759482,133.353811,155.2759466,133.3541273,155.3759442,133.3545406,155.4759439,133.3547368,155.5759434,133.3550605,155.6759432,133.355429,155.7759429,133.3557009,155.8759416,133.3559791,155.9759414,133.3562636,156.0759419,133.3565521,156.1759396,133.3568145,156.27594,133.3570719,156.3759398,133.3573252,156.4759394,133.3575716,156.5759393,133.3577215,156.6759414,133.3580596,156.7759354,133.3582912,156.8759353,133.3585179,156.9759352,133.3587398,157.0759351,133.3588229,157.1760177,133.3590352,157.2760173,133.3593776,157.3759347,133.3595811,157.4759346,133.3596522,157.57605,133.3599755,157.6759343,133.3601661,157.7759341,133.3603525,157.8759334,133.3605347,157.9759333,133.3607116,158.0759502,133.3608687,158.1760291,133.3610389,158.2760291,133.3612053,158.3760291,133.3613478,158.4760306,133.361506,158.5760304,133.3616784,158.6760306,133.361845,158.7759542,133.3620594,158.8762508,133.3621376,158.9759371,133.3622796,159.0759367,133.3624179,159.1759363,133.3625518,159.2759361,133.3626817,159.3759359,133.3627915,159.4759521,133.3629149,159.5759521,133.3630585,159.6759522,133.3631626,159.7759539,133.3632768,159.8759539,133.3633611,159.9759572,133.363513,160.0759516,133.3636197,160.1759514,133.363732,160.275957,133.3637102,160.3765445,133.3639326,160.4759564,133.3640278,160.5759585,133.3641177,160.6759415,133.3641786,160.7759427,133.3642572,160.8759357,133.3643749,160.975934,133.3644585,161.0759339,133.3645398,161.1759338,133.3646185,161.2759322,133.364695,161.375932,133.3647698,161.4759354,133.3648347,161.575938,133.364904,161.6759381,133.3649816,161.7759364,133.3650449,161.8759352,133.3651088,161.9759351,133.3651709,162.0759351,133.365231,162.1759351,133.3652113,162.2759961,133.3652679,162.3759966,133.365295,162.4759954,133.3654249,162.5759351,133.3655027,162.6759334,133.3655527,162.7759335,133.365601,162.8759318,133.3656452,162.9759322,133.3656916,163.0759323,133.3657251,163.1759785,133.3657728,163.2759332,133.3657902,163.375946,133.3658283,163.4759463,133.3658312,163.5759472,133.3658683,163.6759472,133.3659388,163.7759503,133.365972,163.8759506,133.366004,163.975951,133.3660347,164.0759514,133.366065,164.1759407,133.366097,164.2759411,133.3661247,164.3759416,133.3661505,164.4759422,133.366176,164.5759426,133.3662019,164.6759438,133.3662267,164.7759447,133.3662449,164.8759414,133.3662703,164.9759409,133.3661778,165.0759477,133.3663165,165.1759423,133.3663541,165.2759403,133.3663726,165.3759406,133.3663136,165.4760748,133.3663332,165.5760765,133.3663495,165.6760764,133.3663655,165.7760768,133.3664081,165.8759771,133.3664213,165.97598,133.3664345,166.0759805,133.3664904,166.1759426,133.3665043,166.2759429,133.3665154,166.3759431,133.3665261,166.4759434,133.3665243,166.5759436,133.3665302,166.6759439,133.3665513,166.7759404,133.3665593,166.8759399,133.3665671,166.975939,133.3664735,167.0760525,133.3664899,167.1763057,133.3664171,167.2763072,133.3664229,167.3759401,133.3664282,167.4759401,133.3664333,167.5759402,133.3664248,167.6759557,133.3663948,167.7759638,133.366411,167.8759618,133.3664381,167.9759409,133.3664412,168.0761811,133.366445,168.1759403,133.3664476,168.2759682,133.3664307,168.3759693,133.3664334,168.4759715,133.3664328,168.5759731,133.3664534,168.6759751,133.3664314,168.775977,133.3664323,168.8759789,133.3664609,168.9759829,133.3664729,169.075984,133.3664752,169.1759857,133.3664227,169.2759881,133.366463,169.3759897,133.3664801,169.4759919,133.3664822,169.5759939,133.3664671,169.6759944,133.3664669,169.7760061,133.3664853,169.8760076,133.3664889,169.9760091,133.3664894,170.0760215,133.3664428,170.1760119,133.3664432,170.2760131,133.3664437,170.3760129,133.3664902,170.4760139,133.3664903,170.5760027,133.3664728,170.6760037,133.3664728,170.776005,133.3664704,170.8760059,133.3664706,170.9760069,133.366432,171.0760079,133.3664304,171.1760096,133.3664696,171.2760137,133.3664694,171.3760135,133.36647,171.4760197,133.3664726,171.5760107,133.3664724,171.6760111,133.3664895,171.7760114,133.3664894,171.8759304,133.3664795,171.975932,133.3664883,172.0759302,133.3664877,172.1759302,133.3664735,172.2760381,133.366473,172.3760379,133.3664727,172.4760372,133.3664722,172.576037,133.366467,172.6760002,133.3664663,172.7760001,133.3664775,172.8759302,133.3664767,172.9759302,133.3664649,173.0759785,133.3664488,173.1759925,133.366453,173.2759474,133.3666765,173.3759475,133.3666762,173.4759473,133.3667026,173.5759477,133.3663248,173.6762908,133.3666174,173.7760041,133.3666179,173.8758959,133.3666191,173.9759028,133.3666992,174.0759099,133.3666938,174.1759174,133.3666542,174.2759253,133.3666545,174.3759334],Controls.PointCloud=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={})).Utilities=class{static TextConfigurationFromTextOptions(e,t,s=2){return new TcHmi.Common.BaseTypes.TextConfiguration({Text:t,Color:e.Color,FontStyle:e.FontStyle,FontWeight:e.FontWeight,FontFamily:e.FontFamily,HorizontalAlignment:e.HorizontalAlignment,VerticalAlignment:e.VerticalAlignment,FontSize:e.FontSize*s})}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e extends TcHmi.Common.Scenegraph.ImageNode{constructor(e,t,s,i,o){super(e.img,TcHmi.Common.Scenegraph.XSystemRenderer.MoverZIndex),this.Shade=!1,this.position=0,this.drawPositionNode=null,this.ToolsGroup=new TcHmi.Common.Scenegraph.VisualGroup(o),this.AddChild(this.ToolsGroup),this.metaData=e,this.indexInXpu=s,this.processingUnitIndex=t,this.id=i}get IndexInXpu(){return this.indexInXpu}get ProcessingUnitIndex(){return this.processingUnitIndex}get Id(){return this.id}get MetaData(){return this.metaData}drawImage(e){let t=this.metaData.centerMagnetPlate;e.drawImage(this.img,-t.X,-t.Y,this.metaData.width,this.metaData.height),this.Shade&&(e.globalCompositeOperation="source-atop",e.fillStyle=this.ShadeStyle,e.fillRect(-t.X,-t.Y,this.metaData.width,this.metaData.height),e.globalCompositeOperation="source-over")}GetBounds(){if(this.IsVisible)return new TcHmi.Common.BaseTypes.Rect;let e=TcHmi.Common.BaseTypes.M3.Identity;e.Translate(-this.metaData.centerMagnetPlate.X,-this.metaData.centerMagnetPlate.Y),e=this.worldMatrix.Multiply(e);let t=new TcHmi.Common.BaseTypes.Point(0,0).Transform(e),s=new TcHmi.Common.BaseTypes.Point(this.metaData.img.width,0).Transform(e),i=new TcHmi.Common.BaseTypes.Point(0,this.metaData.img.height).Transform(e),o=new TcHmi.Common.BaseTypes.Point(this.metaData.img.width,this.metaData.img.height).Transform(e),n=new TcHmi.Common.BaseTypes.Point;n.X=Math.min(t.X,s.X,i.X,o.X),n.Y=Math.min(t.Y,s.Y,i.Y,o.Y);let a=Math.max(t.X-n.X,s.X-n.X,i.X-n.X,o.X-n.X),r=Math.max(t.Y-n.Y,s.Y-n.Y,i.Y-n.Y,o.Y-n.Y);return new TcHmi.Common.BaseTypes.Rect(r,a,n)}SetPosition(e){this.position=e,this.drawPositionNode&&(this.drawPositionNode.textConfiguration.Text=this.position+" mm")}ClearTools(){this.ToolsGroup.ClearChilds()}RemoveTool(e){this.ToolsGroup.RemoveChild(e)}AddTool(e){this.ToolsGroup.AddChild(e)}SetTool(e){if(this.metaData.side==TcHmi.XTS.BaseTypes.ModuleSide.Encoder&&"Front"==e.MoverSide||this.metaData.side==TcHmi.XTS.BaseTypes.ModuleSide.Driver&&"Back"==e.MoverSide)switch(e.ToolType){case"Image":{let t=e.ImageSrc,s=new TcHmi.Common.BaseTypes.Point(e.OffsetX*Controls.ModuleMetaData.PixelRealityScale-this.metaData.centerMagnetPlate.X,e.OffsetY*Controls.ModuleMetaData.PixelRealityScale-this.metaData.centerMagnetPlate.Y),i=TcHmi.Common.Utilities.ImageHandler.GetImage(t),o=new TcHmi.Common.Scenegraph.ImageNode(i,e.zIndex);return this.ToolsGroup.AddChild(o),void o.Loaded((()=>{let t=TcHmi.Common.BaseTypes.M3.Identity,n=i.width/Controls.ModuleMetaData.PixelRealityScale,a=i.height/Controls.ModuleMetaData.PixelRealityScale;e.ImageWidth&&e.ImageHeight?t.Scale(e.ImageWidth/n,e.ImageHeight/a):e.ImageWidth?t.Scale(e.ImageWidth/n,e.ImageWidth/n):e.ImageHeight&&t.Scale(e.ImageHeight/a,e.ImageHeight/a),t.Rotate(e.Rotation),t.Translate(s.X,s.Y),o.TransformNode(t)}))}case"Text":{let t="";switch(e.TextType){case"Custom":t=e.CustomText;break;case"MoverId":t=this.id;break;case"MoverIndex":t=this.indexInXpu.toString();break;case"MoverPosition":t=this.position+" mm"}let s=Controls.Utilities.TextConfigurationFromTextOptions(e.TextOptions,t),i=new TcHmi.Common.Scenegraph.TextNode(s,e.zIndex);this.ToolsGroup.AddChild(i),"MoverPosition"==e.TextType?this.drawPositionNode=i:this.drawPositionNode=null;let o=TcHmi.Common.BaseTypes.M3.Identity;o.Rotate(e.Rotation);let n=new TcHmi.Common.BaseTypes.Point(e.OffsetX*Controls.ModuleMetaData.PixelRealityScale-this.metaData.centerMagnetPlate.X,e.OffsetY*Controls.ModuleMetaData.PixelRealityScale-this.metaData.centerMagnetPlate.Y);o.Translate(n.X,n.Y),i.TransformNode(o)}}}HitTest(e){if(!this.IsVisible)return!1;let t=TcHmi.Common.BaseTypes.M3.Identity;t.Translate(-this.metaData.centerMagnetPlate.X,-this.metaData.centerMagnetPlate.Y),t=this.worldMatrix.Multiply(t);let s=new TcHmi.Common.BaseTypes.Point(0,0).Transform(t),i=new TcHmi.Common.BaseTypes.Point(0,this.metaData.height).Transform(t),o=new TcHmi.Common.BaseTypes.Point(this.metaData.width,0).Transform(t),n=new TcHmi.Common.BaseTypes.Point(this.metaData.width,this.metaData.height).Transform(t);return TcHmi.Common.BaseTypes.Point.GetArea(s,e,n)+TcHmi.Common.BaseTypes.Point.GetArea(n,e,o)+TcHmi.Common.BaseTypes.Point.GetArea(o,e,i)+TcHmi.Common.BaseTypes.Point.GetArea(e,i,s)<=i.Sub(s).Length()*o.Sub(s).Length()}}Controls.XtsMoverVisual=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e{constructor(){this.img=new Image}static GetMetaDataById(e,t=TcHmi.XTS.BaseTypes.ModuleSide.Encoder){let s=this.AllMover[0];return this.AllMover.forEach((function(i){i.movertype==e&&i.side==t&&(s=i)})),s}static Initialize(t){let s=new e;s.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9011_0050,s.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0050-FrontSide.png",s.width=100,s.height=247,s.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(50,141),s.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(s);let i=new e;i.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9011_0050,i.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0050-BackSide.png",i.width=100,i.height=157,i.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(50,141),i.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(i);let o=new e;o.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9011_0070,o.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0070-FrontSide.png",o.width=140,o.height=252,o.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(70,145),o.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(o);let n=new e;n.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9011_0070,n.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0070-BackSide.png",n.width=140,n.height=161,n.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(70,145),n.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(n);let a=new e;a.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9012_0050,a.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9012-0050-FrontSide.png",a.width=102,a.height=247,a.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(50,141),a.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(a);let r=new e;r.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9012_0050,r.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9012-0050-BackSide.png",r.width=102,r.height=157,r.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(50,141),r.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(r);let l=new e;l.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9014_0055,l.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9014-0055-FrontSide.png",l.width=110,l.height=249,l.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(55,142),l.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(l);let h=new e;h.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9014_0055,h.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9014-0055-BackSide.png",h.width=110,h.height=158,h.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(55,142),h.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(h);let d=new e;d.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9014_0070,d.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9014-0070-FrontSide.png",d.width=140,d.height=251,d.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(55,144),d.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(d);let m=new e;m.movertype=TcHmi.XTS.BaseTypes.MoverType.AT9014_0070,m.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9014-0070-BackSide.png",m.width=140,m.height=161,m.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(55,144),m.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(m);let u=new e;u.movertype=TcHmi.XTS.BaseTypes.MoverType.ATH9011_0075,u.img.src=t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH9013-0075-FrontSide.png",u.width=150,u.height=224,u.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(75,170),u.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(u);let p=new e;p.movertype=TcHmi.XTS.BaseTypes.MoverType.ATH9011_0075,p.img.src=t+"/Themes/Base/Images/BeckhoffRail/Hygienic/ATH9013-0075-BackSide.png",p.width=150,p.height=214,p.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(75,170),p.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(p),e.userSpecific_FrontSide=new e,e.userSpecific_FrontSide.movertype=TcHmi.XTS.BaseTypes.MoverType.UserSpecific,e.userSpecific_FrontSide.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0070-FrontSide.png",e.userSpecific_FrontSide.width=140,e.userSpecific_FrontSide.height=252,e.userSpecific_FrontSide.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(70,145),e.userSpecific_FrontSide.side=TcHmi.XTS.BaseTypes.ModuleSide.Encoder,this.AllMover.push(e.userSpecific_FrontSide),e.userSpecific_BackSide=new e,e.userSpecific_BackSide.movertype=TcHmi.XTS.BaseTypes.MoverType.UserSpecific,e.userSpecific_BackSide.img.src=t+"/Themes/Base/Images/BeckhoffRail/AT9011-0070-BackSide.png",e.userSpecific_BackSide.width=140,e.userSpecific_BackSide.height=161,e.userSpecific_BackSide.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(70,145),e.userSpecific_BackSide.side=TcHmi.XTS.BaseTypes.ModuleSide.Driver,this.AllMover.push(e.userSpecific_BackSide)}}e.AllMover=[],Controls.MoverMetaData=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e extends TcHmi.Common.Scenegraph.ImageNode{constructor(e,t,s,i,o){super(e.Img,TcHmi.Common.Scenegraph.XSystemRenderer.ModuleZIndex),this.VisualChilds=this.AddChild(new TcHmi.Common.Scenegraph.VisualGroup(s.PartRenderer)),this.metaData=e,this.indexInPart=t,this.partViusal=s,this.startPositionInPart=i,this.gap=o,this.trackLength=o+e.ModuleLength}get IndexInPart(){return this.indexInPart}get MetaData(){return this.metaData}get PartViusal(){return this.partViusal}get StartPositionInPart(){return this.startPositionInPart}get Gap(){return this.gap}get TrackLength(){return this.trackLength}CalculateMoverTransform(e){return this.CalculateTransformMatrixAt(e)}GenerateDisplacementPoints(e,t,s){let i=this.matrix,o=[];switch(this.metaData.PathType){case TcHmi.XTS.BaseTypes.PathType.Straight:{let n=this.metaData.XScaling,a=-s*n,r=new TcHmi.Common.BaseTypes.Point(this.metaData.StartPoint.X>this.metaData.EndPoint.X?-e*n:e*n,a),l=new TcHmi.Common.BaseTypes.Point(this.metaData.StartPoint.X>this.metaData.EndPoint.X?-t*n:t*n,a);return o.push(r.Transform(i)),o.push(l.Transform(i)),o}case TcHmi.XTS.BaseTypes.PathType.Circular:{let n=e,a=(t-e)/30;for(let e=0;e<30;++e){let e=this.CalculateDisplacementPointOnCircularPath(n,s);o.push(e.Transform(i)),n+=a}let r=this.CalculateDisplacementPointOnCircularPath(t,s);return o.push(r.Transform(i)),o}case TcHmi.XTS.BaseTypes.PathType.Free:{let n=e,a=(t-e)/30;for(let e=0;e<30;++e){let e=this.CalculateDisplacementPointOnFreePath(n,s);o.push(e.Transform(i)),n+=a}let r=this.CalculateDisplacementPointOnFreePath(t,s);return o.push(r.Transform(i)),o}}}CalculateDisplacementPointOnCircularPath(e,t){let s=this.metaData.XScaling,i=this.metaData.StartPoint.X>0?-this.metaData.EndAngle:this.metaData.EndAngle,o=e*(i/this.metaData.ModuleLength)*(Math.PI/180),n=360/i*this.metaData.ModuleLength/(2*Math.PI),a=n*Math.sin(o),r=n*Math.cos(o);this.metaData.StartPoint.X>this.metaData.EndPoint.X&&(a=-a);let l=a,h=n-r,d=n,m=l-0,u=h-d,p=Math.sqrt(m*m+u*u),T=t*(m/p),c=t*(u/p);return d<0&&(T=-T,c=-c),new TcHmi.Common.BaseTypes.Point((l+T)*s,(h+c)*s)}CalculateDisplacementPointOnFreePath(e,t){let s,i,o=this.metaData.XScaling,n=Math.floor(e/.1);n<this.metaData.PointCloud.length-1?(s=this.metaData.PointCloud[n],i=this.metaData.PointCloud[n+1]):(s=this.metaData.PointCloud[this.metaData.PointCloud.length-2],i=this.metaData.PointCloud[this.metaData.PointCloud.length-1]);let a=i.Y-s.Y,r=i.X-s.X,l=s.X+r/2,h=s.Y+a/2,d=l-s.X,m=h-s.Y,u=m,p=-d;this.metaData.StartPoint.X>this.metaData.EndPoint.X&&(u=-m,p=d);let T=Math.sqrt(u*u+p*p),c=t*(u/T),g=t*(p/T);return new TcHmi.Common.BaseTypes.Point((l+c)*o,(h+g)*o)}CalculateEndTransform(){let e=this.metaData.EndPoint.Sub(this.metaData.StartPoint),t=this.Gap*this.metaData.XScaling,s=TcHmi.Common.BaseTypes.M3.Identity;return s.Rotate(this.metaData.EndAngle),s.Translate(t+e.X,e.Y),s=this.matrix.Multiply(s),s}GetBounds(){if(!this.IsVisible)return new TcHmi.Common.BaseTypes.Rect;let e=TcHmi.Common.BaseTypes.M3.Identity;e.Translate(-this.metaData.StartPoint.X+this.gap*this.metaData.XScaling,-this.metaData.StartPoint.Y),e=this.worldMatrix.Multiply(e);let t=new TcHmi.Common.BaseTypes.Point(0,0).Transform(e),s=new TcHmi.Common.BaseTypes.Point(this.metaData.Img.width,0).Transform(e),i=new TcHmi.Common.BaseTypes.Point(0,this.metaData.Img.height).Transform(e),o=new TcHmi.Common.BaseTypes.Point(this.metaData.Img.width,this.metaData.Img.height).Transform(e),n=new TcHmi.Common.BaseTypes.Point;n.X=Math.min(t.X,s.X,i.X,o.X),n.Y=Math.min(t.Y,s.Y,i.Y,o.Y);let a=Math.max(t.X-n.X,s.X-n.X,i.X-n.X,o.X-n.X),r=Math.max(t.Y-n.Y,s.Y-n.Y,i.Y-n.Y,o.Y-n.Y);return new TcHmi.Common.BaseTypes.Rect(r,a,n)}drawImage(e){e.drawImage(this.img,-this.metaData.StartPoint.X+this.gap*this.metaData.XScaling,-this.metaData.StartPoint.Y),this.Shade&&(e.globalCompositeOperation="source-atop",e.fillStyle=this.ShadeStyle,e.fillRect(-this.metaData.StartPoint.X+this.gap*this.metaData.XScaling,-this.metaData.StartPoint.Y,this.metaData.Width,this.metaData.Height),e.globalCompositeOperation="source-over")}HitTest(e){if(!this.IsVisible)return!1;let t=TcHmi.Common.BaseTypes.M3.Identity;t.Translate(-this.metaData.StartPoint.X,-this.metaData.StartPoint.Y),t=this.worldMatrix.Multiply(t);let s=new TcHmi.Common.BaseTypes.Point(0,0).Transform(t),i=new TcHmi.Common.BaseTypes.Point(0,this.metaData.Height).Transform(t),o=new TcHmi.Common.BaseTypes.Point(this.metaData.Width,0).Transform(t),n=new TcHmi.Common.BaseTypes.Point(this.metaData.Width,this.metaData.Height).Transform(t);return TcHmi.Common.BaseTypes.Point.GetArea(s,e,n)+TcHmi.Common.BaseTypes.Point.GetArea(n,e,o)+TcHmi.Common.BaseTypes.Point.GetArea(o,e,i)+TcHmi.Common.BaseTypes.Point.GetArea(e,i,s)<=i.Sub(s).Length()*o.Sub(s).Length()}CalculateTransformMatrixAt(e,t=!0){let s=this.metaData.EndPoint.X-this.metaData.StartPoint.X>0?1:-1,i=TcHmi.Common.BaseTypes.M3.Identity;if(e<this.gap){let t=s*e*this.metaData.XScaling;i.Translate(t,0)}else{switch(e-=this.gap,this.metaData.PathType){case TcHmi.XTS.BaseTypes.PathType.Straight:var o=s*e*this.metaData.XScaling;i.Translate(o,0);break;case TcHmi.XTS.BaseTypes.PathType.Circular:{let t=this.metaData.XScaling,o=this.metaData.ModuleLength,n=360/Math.abs(this.metaData.EndAngle)*o/(2*Math.PI),a=e/n,r=n*Math.sin(a)*s,l=n*Math.cos(a);if(this.metaData.EndAngle>0){let e=r*t,o=(n-l)*t*s,h=180*a/Math.PI;i.Rotate(h),i.Translate(e,o)}else{let e=r*t,o=-(n-l)*t*s,h=180*-a/Math.PI;i.Rotate(h),i.Translate(e,o)}break}case TcHmi.XTS.BaseTypes.PathType.Free:{let t=this.metaData.XScaling,s=Math.floor(e/.1),o=this.metaData.PointCloud;if(s+1<o.length){let e=o[s],n=o[s+1],a=e.X*t,r=e.Y*t,l=n.Sub(e),h=new TcHmi.Common.BaseTypes.Point(1,0),d=Math.acos((l.X*h.X+l.Y*h.Y)/(Math.sqrt(Math.pow(l.X,2)+Math.pow(l.Y,2))*Math.sqrt(Math.pow(h.X,2)+Math.pow(h.Y,2))));d=180*d/Math.PI,this.metaData.Side==TcHmi.XTS.BaseTypes.ModuleSide.Driver&&(d+=180),i.Rotate(d),i.Translate(a,r)}break}}var n=s*this.gap*this.metaData.XScaling;i.Translate(n,0)}return t&&(i=this.matrix.Multiply(i)),i}DrawDebugVisuals(e){let t=this.GetBounds(),s=TcHmi.Common.BaseTypes.M3.Identity;s.Translate(-this.metaData.StartPoint.X+this.gap*this.metaData.XScaling,-this.metaData.StartPoint.Y),s=this.worldMatrix.Multiply(s);let i=new TcHmi.Common.BaseTypes.Point(0,0).Transform(s),o=new TcHmi.Common.BaseTypes.Point(this.metaData.Img.width,0).Transform(s),n=new TcHmi.Common.BaseTypes.Point(0,this.metaData.Img.height).Transform(s),a=new TcHmi.Common.BaseTypes.Point(this.metaData.Img.width,this.metaData.Img.height).Transform(s);e.resetTransform(),e.fillStyle=TcHmi.Common.Utilities.ColorConverter.FromArgb(Math.floor(16777215*Math.random())),e.strokeStyle=e.fillStyle,e.strokeRect(t.topLeft.X,t.topLeft.Y,t.width,t.height),e.fillRect(i.X-5,i.Y-5,10,10),e.fillRect(o.X-5,o.Y-5,10,10),e.fillRect(n.X-5,n.Y-5,10,10),e.fillRect(a.X-5,a.Y-5,10,10)}}Controls.XtsModuleVisual=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e extends TcHmi.Common.Scenegraph.RenderableBase{constructor(e,t,s){super(s),this.segmentPoints=[],this.infoBarModel=e,this.infoBarModel.Visual=this,this.renderer=t,this.markerGroupVisual=new TcHmi.Common.Scenegraph.VisualGroup(t),this.textGroupVisual=new TcHmi.Common.Scenegraph.VisualGroup(t),this.AddChild(this.markerGroupVisual),this.AddChild(this.textGroupVisual),this.InitializeRender()}get InfoBarModel(){return this.infoBarModel}get MarkerGroupVisual(){return this.markerGroupVisual}get TextGroupVisual(){return this.textGroupVisual}get Renderer(){return this.renderer}InitializeRender(){this.infoBarModel.PartVisual&&(this.segmentPoints=this.infoBarModel.PartVisual.CalculateDisplacementPoints(this.infoBarModel.PartStart,this.infoBarModel.PartEnd,this.infoBarModel.Displacement))}Render(e){this.IsVisible&&(super.Render(e),this.RenderSegments(e))}RenderSegments(e){if(this.segmentPoints.length>1){e.strokeStyle=this.infoBarModel.Color,e.lineWidth=this.infoBarModel.Thickness*Controls.ModuleMetaData.PixelRealityScale,e.beginPath(),e.moveTo(this.segmentPoints[0].X,this.segmentPoints[0].Y);for(let t=1;t<this.segmentPoints.length;t++)e.lineTo(this.segmentPoints[t].X,this.segmentPoints[t].Y);e.stroke()}}GetStartPoint(){return this.segmentPoints[0]?new TcHmi.Common.BaseTypes.Point(this.segmentPoints[0].X,this.segmentPoints[0].Y):new TcHmi.Common.BaseTypes.Point}GetBounds(){if(!this.IsVisible)return new TcHmi.Common.BaseTypes.Rect;let e=new TcHmi.Common.BaseTypes.Point(1/0,1/0),t=new TcHmi.Common.BaseTypes.Point(-1/0,-1/0);for(let s of this.segmentPoints){let i=s.Transform(this.worldMatrix);i.X<e.X&&(e.X=i.X),i.Y<e.Y&&(e.Y=i.Y),i.X>t.X&&(t.X=i.X),i.Y>t.Y&&(t.Y=i.Y)}return new TcHmi.Common.BaseTypes.Rect(t.Y-e.Y,t.X-e.X,e)}}Controls.XInfoBarVisual=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class e extends TcHmi.Common.Scenegraph.TransformableBase{constructor(e,t,s,i){super(),this.trackLength=0,this.RotationServer=0,this.OffsetServer=new TcHmi.Common.BaseTypes.Point,this.PartRenderer=i,this.moduleGroup=this.AddChild(new TcHmi.Common.Scenegraph.VisualGroup(i)),this.moverGroup=this.AddChild(new TcHmi.Common.Scenegraph.VisualGroup(i)),this.infoBarGroup=this.AddChild(new TcHmi.Common.Scenegraph.VisualGroup(i)),this.partIndex=s,this.processingUnitIndex=t,this.globalNumber=e}get IndexInXpu(){return this.partIndex}get ProcessingUnitIndex(){return this.processingUnitIndex}get GlobalNumber(){return this.globalNumber}get TrackLength(){return this.trackLength}static CreateFromExisting(t){let s=new e(t.globalNumber,t.processingUnitIndex,t.partIndex,t.PartRenderer);return s.IsVisible=t.IsVisible,s.RotationServer=t.RotationServer,s.OffsetServer=t.OffsetServer,s.PartSideServer=t.PartSideServer,s}AddExistingMover(e,t){e.ActualPart=this,this.moverGroup.AddChild(e),this.TransformMoverToPosition(e,t)}RemoveMover(e){this.moverGroup.RemoveChild(e)}AddModule(e,t,s){let i=new Controls.XtsModuleVisual(e,this.moduleGroup.Length,this,this.trackLength,t);this.moduleGroup.AddChild(i),this.trackLength+=i.TrackLength;let o=null;for(let e of this.moduleGroup.Childs){let t=TcHmi.Common.BaseTypes.M3.Identity;o&&(t=o.CalculateEndTransform()),e.TransformNode(t),o=e}i.Loaded((function(){s&&s()}))}TransformMoverToPosition(e,t){e.SetPosition(t);let s=this.GetModuleVisualContaining(t);if(s){let i=t-s.StartPositionInPart,o=s.CalculateMoverTransform(i);e.TransformNode(o)}}GetModuleVisualContaining(e){if(e==this.trackLength)return this.moduleGroup.Childs[this.moduleGroup.Childs.length-1];for(let t of this.moduleGroup.Childs)if(e<t.StartPositionInPart+t.TrackLength)return t;return null}LoadPart(e,t,s){this.partSide=t,this.PartSideServer=e.ModuleSide;let i=0;for(let t of e.Modules)this.AddModule(Controls.ModuleMetaData.GetMetaDataByModuleType(t.ModuleType,this.partSide,TcHmi.XTS.BaseTypes.RailSystem.Normal),t.Gap,(()=>{i++,i==e.Modules.length&&(null==s||s.call(this))}))}LoadPartFromExisting(e,t,s){this.partSide=t,this.partIndex=e.partIndex;let i=0,o=this;for(let t of e.moduleGroup.Childs)this.AddModule(Controls.ModuleMetaData.GetMetaDataByModuleType(t.MetaData.ModuleType,this.partSide,TcHmi.XTS.BaseTypes.RailSystem.Normal),t.Gap,(function(){i++,i==e.moduleGroup.Childs.length&&(null==s||s.call(o))}))}ClearTools(){for(let e of this.moverGroup.Childs)e.ClearTools()}HitTest(e){if(!this.IsVisible)return null;for(let t of this.moverGroup.Childs)if(t.HitTest(e))return t;for(let t of this.moduleGroup.Childs)if(t.HitTest(e))return t;return null}CreateInfoBar(e,t){e.PartVisual=this;let s=new Controls.XInfoBarModel(e),i=new Controls.XInfoBarVisual(s,this.PartRenderer,t);return s.Visual=i,this.infoBarGroup.AddChild(i),s}CalculateDisplacementPoints(e,t,s){let i=[],o=this.GetModuleVisualContaining(e),n=this.GetModuleVisualContaining(t);if(t==this.trackLength&&(n=this.moduleGroup.Childs[this.moduleGroup.Childs.length-1]),!o||!n)return i;let a=e-o.StartPositionInPart,r=t-n.StartPositionInPart,l=this.moduleGroup.Childs.indexOf(o),h=this.moduleGroup.Childs.indexOf(n);if(o==n)i=i.concat(o.GenerateDisplacementPoints(a,r,s));else{i=i.concat(o.GenerateDisplacementPoints(a,o.TrackLength,s));for(let e=l+1;e<h;e++){let t=this.moduleGroup.Childs[e];i=i.concat(t.GenerateDisplacementPoints(0,t.TrackLength,s))}0!=r&&(i=i.concat(n.GenerateDisplacementPoints(0,r,s)))}return i}}Controls.XtsPartVisual=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;(function(Controls){class XtsView extends TcHmi.Controls.System.TcHmiControl{constructor(e,t,s){super(e,t,s),this.refreshRate=16}__previnit(){super.__previnit();let e=TcHmi.Environment.getControlBasePathEx(this);Controls.ModuleMetaData.Initialize(e),Controls.MoverMetaData.Initialize(e);let t=this.getElement().get(0).firstChild;this.systemRenderer=new TcHmi.Common.Scenegraph.XSystemRenderer(t),this.systemVisual=new Controls.XSystemVisual(this.systemRenderer,e),this.systemRenderer.System=this.systemVisual,this.selectionManager=new Controls.SelectionManager(this.systemVisual,this.systemRenderer,this.SetMoverSelection.bind(this),this.SetModuleSelection.bind(this)),this.interactionHandler=new TcHmi.Common.Scenegraph.VisualInteractionHandler(this.systemRenderer,this.selectionManager),this.systemVisual.TransformationChanged=()=>{TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"Transformation"})}}__init(){super.__init()}__attach(){super.__attach()}__detach(){super.__detach(),this.DeinitControl()}destroy(){this.__keepAlive||super.destroy()}InitControl(){var e;this.CreateCanvas(),this.systemVisual.ReloadInfoImages(),null===(e=this.serverConnection)||void 0===e||e.UpdateModel((e=>{this.systemVisual.CreateVisuals(e,(()=>{this.AddPartTransformationSubscription(),this.InitMoverSubscription(),this.AddDriveStateSubscription(),this.selectionManager.ReloadModuleSelection(),this.selectionManager.ReloadMoverSelection(),this.systemVisual.ReloadMoverTools(),this.systemVisual.ReloadDimensions(),this.systemVisual.ReloadStations(),this.systemVisual.ReloadInfoBars(),e.InfoServer&&(this.systemVisual.Stations=e.InfoServer.Stations),this.systemRenderer.ZoomToFit()}))}))}InitMoverSubscription(){var e,t;null===(e=this.serverConnection)||void 0===e||e.OnMoverPositionChanged((e=>{this.systemVisual.UpdateMoverPositions(e)})),null===(t=this.serverConnection)||void 0===t||t.SetMoverPositionSubscription()}DeinitControl(){var e,t,s;this.resizeEventDestroyFunction&&this.resizeEventDestroyFunction(),null===(e=this.serverConnection)||void 0===e||e.UnsubscribePartTransformation(),null===(t=this.serverConnection)||void 0===t||t.UnsubscribeMoverPosition(),null===(s=this.serverConnection)||void 0===s||s.UnsubscribeModuleDriveStates(),this.systemVisual.Delete()}AddPartTransformationSubscription(){var e,t;let s=!0;null===(e=this.serverConnection)||void 0===e||e.OnPartTransformationChanged((e=>{this.systemVisual.PartTransformationsServer=e,s&&(s=!1,this.systemVisual.ReloadPartTransformations(),this.systemRenderer.ZoomToFit())})),null===(t=this.serverConnection)||void 0===t||t.SetPartTransformationSubscription()}AddDriveStateSubscription(){var e,t;null===(e=this.serverConnection)||void 0===e||e.OnModuleDriveStatesChanged((e=>{this.systemVisual.ModuleDriveStates=e})),null===(t=this.serverConnection)||void 0===t||t.SetModuleDriveStateSubscription()}CreateCanvas(){var e,t;let s=null!==(e=this.getRenderedWidth())&&void 0!==e?e:0,i=null!==(t=this.getRenderedHeight())&&void 0!==t?t:0;this.systemRenderer.CreateCanvas(s,i),this.resizeEventDestroyFunction=TcHmi.EventProvider.register(this.__id+".onResized",this.Resized.bind(this))}Resized(){var e,t;let s=null!==(e=this.getRenderedWidth())&&void 0!==e?e:0,i=null!==(t=this.getRenderedHeight())&&void 0!==t?t:0;this.systemRenderer.Resize(s,i),this.systemRenderer.ZoomToFit()}GetTargetName(){var e;return null===(e=this.serverConnection)||void 0===e?void 0:e.TargetName}SetTargetName(e){this.serverConnection&&this.serverConnection.TargetName==e||(this.DeinitControl(),this.serverConnection=new XTS.Server.ServerConnection(e,this.refreshRate),this.InitControl(),TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"TargetName"}))}GetRefreshRate(){return this.refreshRate}SetRefreshRate(e){this.refreshRate=e,this.serverConnection&&(this.serverConnection.RefreshRate=e),TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"RefreshRate"})}GetInfoImages(){return this.systemVisual.InfoImages}SetInfoImages(e){this.ObjectResolverHandler("InfoImages",e,(e=>{tchmi_equal(e,this.systemVisual.InfoImages)||(this.systemVisual.InfoImages=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"InfoImages"}))}))}GetLockPan(){return this.interactionHandler.LockPan}SetLockPan(e){this.interactionHandler.LockPan!=e&&(this.interactionHandler.LockPan=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"LockPan"}))}GetLockZoom(){return this.interactionHandler.LockZoom}SetLockZoom(e){this.interactionHandler.LockZoom!=e&&(this.interactionHandler.LockZoom=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"GetLockZoom"}))}SetToolArray(e){let t=this;this.ObjectResolverHandler("Tools",e,(function(e){tchmi_equal(e,t.systemVisual.ToolArray)||(t.systemVisual.ToolArray=e,TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"Tools"}))}))}GetToolArray(){return this.systemVisual.ToolArray}SetPartTransformations(e){let t=this;this.ObjectResolverHandler("PartTransformations",e,(function(e){tchmi_equal(e,t.systemVisual.PartTransformationsClient)||(t.systemVisual.PartTransformationsClient=e,t.systemVisual.CheckTransformationForReload()&&(t.DeinitControl(),t.systemVisual.Delete(),t.InitControl()),TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"PartTransformations"}))}))}GetPartTransformations(){return this.systemVisual.PartTransformationsClient}SetLayout(e){this.systemVisual.Layout!=e&&(this.systemVisual.Layout=e,this.systemRenderer.ZoomToFit(),this.systemVisual.CheckTransformationForReload()&&(this.DeinitControl(),this.systemVisual.Delete(),this.InitControl()),TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"Layout"}))}GetLayout(){return this.systemVisual.Layout}GetPadding(){return this.systemRenderer.Padding}SetPadding(e){this.systemRenderer.Padding!=e&&(this.systemRenderer.Padding=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"Padding"}))}SetModuleSelection(e){this.selectionManager.ModuleSelection!=e&&(this.selectionManager.ModuleSelection=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ModuleSelection"}),TcHmi.EventProvider.raise(this.__id+".onSelectedModulesChanged"))}GetModuleSelection(){return this.selectionManager.ModuleSelection}SetMoverSelection(e){this.selectionManager.MoverSelection!=e&&(this.selectionManager.MoverSelection=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"MoverSelection"}),TcHmi.EventProvider.raise(this.__id+".onSelectedMoverChanged"))}GetMoverSelection(){return this.selectionManager.MoverSelection}SetModuleSelectionColor(e){this.selectionManager.ModuleSelectionColor!=e&&(this.selectionManager.ModuleSelectionColor=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ModuleSelectionColor"}))}GetModuleSelectionColor(){return this.selectionManager.ModuleSelectionColor}SetMoverSelectionColor(e){this.selectionManager.MoverSelectionColor!=e&&(this.selectionManager.MoverSelectionColor=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"MoverSelectionColor"}))}GetMoverSelectionColor(){return this.selectionManager.MoverSelectionColor}SetSelectionMode(e){this.selectionManager.SelectionMode!=e&&(this.selectionManager.SelectionMode=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"SelectionMode"}))}GetSelectionMode(){return this.selectionManager.SelectionMode}SetStationOptions(e){let t=this;this.ObjectResolverHandler("StationOptions",e,(function(e){tchmi_equal(e,t.systemVisual.StationOptions)||(t.systemVisual.StationOptions=e,TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"StationOptions"}))}))}GetStationOptions(){return this.systemVisual.StationOptions}SetDisplayStations(e){this.systemVisual.DisplayStations!=e&&(this.systemVisual.DisplayStations=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"DisplayStations"}))}GetDisplayStations(){return this.systemVisual.DisplayStations}SetStationMarkerOptions(e){let t=this;this.ObjectResolverHandler("StationMarkerOptions",e,(function(e){tchmi_equal(e,t.systemVisual.StationMarkerOptions)||(t.systemVisual.StationMarkerOptions=e,TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"StationMarkerOptions"}))}))}GetMarkerOptions(){return this.systemVisual.StationMarkerOptions}SetDisplayDimensions(e){this.systemVisual.DisplayDimensions!=e&&(this.systemVisual.DisplayDimensions=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"DisplayDimensions"}))}GetDisplayDimensions(){return this.systemVisual.DisplayDimensions}SetDimensionOptions(e){let t=this;this.ObjectResolverHandler("DimensionOptions",e,(function(e){tchmi_equal(e,t.systemVisual.DimensionOptions)||(t.systemVisual.DimensionOptions=e,TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"DimensionOptions"}))}))}GetDimensionOptions(){return this.systemVisual.DimensionOptions}SetInfoBars(e){let t=this;this.ObjectResolverHandler("InfoBars",e,(function(e){tchmi_equal(e,t.systemVisual.InfoBars)||(t.systemVisual.InfoBars=e,TcHmi.EventProvider.raise(t.__id+".onPropertyChanged",{propertyName:"DimensionOptions"}))}))}GetInfoBars(){return this.systemVisual.InfoBars}GetInvertDimensions(){return this.systemVisual.InvertDimensions}SetInvertDimensions(e){this.systemVisual.InvertDimensions!=e&&(this.systemVisual.InvertDimensions=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"InvertDimensions"}))}GetTransformation(){return this.systemVisual.Transformation.Values}SetTransformation(e){e&&3==e.length&&3==e[0].length&&(this.systemVisual.TransformNode(TcHmi.Common.BaseTypes.M3.FromValues(e)),this.systemRenderer.RenderAll())}SetViewRotation(e){this.systemVisual.Rotation=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ViewRotation"})}GetViewRotation(){return this.systemVisual.Rotation}SetMoverType(e){this.systemVisual.MoverType=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"MoverType"})}GetMoverType(){return this.systemVisual.MoverType}SetCustomMoverLayout(e){this.ObjectResolverHandler("CustomMoverLayout",e,(e=>{this.systemVisual.CustomMoverLayout=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"CustomMoverLayout"})}))}GetCustomMoverLayout(){return this.systemVisual.CustomMoverLayout}SetShowDriveErrors(e){this.systemVisual.IsShowDriveErrorEnabled!=e&&(this.systemVisual.IsShowDriveErrorEnabled=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ShowDriveError"}))}GetShowDriveErrors(){return this.systemVisual.IsShowDriveErrorEnabled}SetShowDriveWarnings(e){this.systemVisual.IsShowDriveWarningEnabled!=e&&(this.systemVisual.IsShowDriveWarningEnabled=e,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ShowDriveWarning"}))}GetShowDriveWarnings(){return this.systemVisual.IsShowDriveWarningEnabled}ObjectResolverHandler(e,t,s){let i=TcHmi.ValueConverter.toObject(t);null===i&&(i=this.getAttributeDefaultValueInternal(e));let o=this.__objectResolvers.get(e);o&&(o.watchDestroyer&&o.watchDestroyer(),o.resolver.destroy());let n=new TcHmi.Symbol.ObjectResolver(i),a=this,r=function(t){!1===a.__isAttached&&a.__suspendObjectResolver(e),t.error===TcHmi.Errors.NONE?s.call(a,t.value):TCHMI_CONSOLE_LOG_LEVEL>=1&&TcHmi.Log.error("[Source=Control, Module=TcHmi.Controls.System.TcHmiControl, Id="+a.getId()+", Attribute=Value] Resolving symbols from object failed with error: "+TcHmi.Log.buildMessage(t.details))};this.__objectResolvers.set(e,{resolver:n,watchCallback:r,watchDestroyer:n.watch(r)})}ZoomToFit(){this.systemRenderer.ZoomToFit()}}Controls.XtsView=XtsView})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),TcHmi.Controls.registerEx("XtsView","TcHmi.XTS.Controls",TcHmi.XTS.Controls.XtsView),function(TcHmi){var XTS;(function(Controls){class e extends TcHmi.Common.Scenegraph.RenderableBase{constructor(e,t,s){super(s),this.infoBarMarkerModel=e,this.infoBarMarkerModel.Visual=this,this.textGroupVisual=new TcHmi.Common.Scenegraph.VisualGroup(t),this.AddChild(this.textGroupVisual)}get MarkerModel(){return this.infoBarMarkerModel}get TextGroupVisual(){return this.textGroupVisual}Render(e){this.IsVisible&&(super.Render(e),this.RenderMarker(e))}RenderMarker(e){e.lineWidth=this.infoBarMarkerModel.Thickness*Controls.ModuleMetaData.PixelRealityScale;let t=this.infoBarMarkerModel.Size*Controls.ModuleMetaData.PixelRealityScale/2;switch(this.infoBarMarkerModel.MarkerType){case"Diamond":e.fillStyle=this.infoBarMarkerModel.Color,e.beginPath(),e.moveTo(t/2,0),e.lineTo(0,t),e.lineTo(-t/2,0),e.lineTo(0,-t),e.lineTo(t/2,0),e.fill(),e.strokeStyle="black";break;case"Tick":e.strokeStyle=this.infoBarMarkerModel.Color,e.beginPath(),e.moveTo(0,-t),e.lineTo(0,t),e.stroke()}}}Controls.XInfoBarMarkerVisual=e})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,Controls;XTS=TcHmi.XTS||(TcHmi.XTS={}),(Controls=XTS.Controls||(XTS.Controls={})).XInfoBarModel=class{constructor(e){this.displacement=0,this.partEnd=0,this.partStart=0,this.Thickness=0,this.Color="black",this.Marker=[],this.Id=0,Object.assign(this,e)}get Displacement(){return this.displacement}set Displacement(e){this.displacement=e,this.UpdateVisual()}get PartEnd(){return this.partEnd}set PartEnd(e){this.partEnd=e,this.UpdateVisual()}get PartStart(){return this.partStart}set PartStart(e){this.partStart=e,this.UpdateVisual()}CreateMarker(e,t){var s;e.InfoBar=this;let i=new Controls.XInfoBarMarkerModel(e);this.Marker.push(i);let o=new Controls.XInfoBarMarkerVisual(i,this.Visual.Renderer,t);return i.Visual=o,this.UpdateMarkerTransformationFor(o),null===(s=this.Visual)||void 0===s||s.MarkerGroupVisual.AddChild(o),i}AddTextNode(e,t,s){let i=new TcHmi.Common.Scenegraph.TextNode(e);var o=new Controls.StationTextModel({TextConfig:e,Placement:t,Displacement:s});i.Model=o,this.UpdateTextTransformationFor(i),this.Visual.TextGroupVisual.AddChild(i)}contains(e){return e.PartEnd<=this.PartEnd&&e.PartEnd>this.PartStart||e.PartStart<this.PartEnd&&e.PartStart>=this.PartStart||e.PartStart<this.PartStart&&e.PartEnd>this.PartEnd}DeleteFromPart(){this.PartVisual.infoBarGroup.RemoveChild(this.Visual)}UpdateVisual(){if(this.Visual){this.Visual.InitializeRender();for(let e of this.Visual.MarkerGroupVisual.Childs)this.UpdateMarkerTransformationFor(e);for(let e of this.Visual.TextGroupVisual.Childs)this.UpdateTextTransformationFor(e)}}UpdateMarkerTransformationFor(e){let t=TcHmi.Common.BaseTypes.M3.Identity,s=this.PartVisual.GetModuleVisualContaining(e.MarkerModel.PartPosition);if(s){let i=e.MarkerModel.PartPosition-s.StartPositionInPart;t.Translate(0,-this.Displacement*Controls.ModuleMetaData.PixelRealityScale),t=s.CalculateTransformMatrixAt(i).Multiply(t),e.TransformNode(t)}}UpdateTextTransformationFor(e){if(e.Model instanceof Controls.StationTextModel){let t=this.PartStart;switch(e.Model.Placement){case"Left":t=this.PartStart;break;case"Center":t=(this.PartStart+this.PartEnd)/2;break;case"Right":t=this.PartEnd}let s=this.PartVisual.GetModuleVisualContaining(t);if(!s)return;let i=t-s.StartPositionInPart,o=TcHmi.Common.BaseTypes.M3.Identity;o.Translate(0,-(this.Displacement*Controls.ModuleMetaData.PixelRealityScale+e.Model.Displacement*Controls.ModuleMetaData.PixelRealityScale)),o=s.CalculateTransformMatrixAt(i).Multiply(o),e.TransformNode(o)}}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,Controls;XTS=TcHmi.XTS||(TcHmi.XTS={}),(Controls=XTS.Controls||(XTS.Controls={})).XInfoBarMarkerModel=class{constructor(e){this.PartPosition=0,this.MarkerType="None",this.Size=6,this.Thickness=8,Object.assign(this,e)}AddTextNode(e,t,s){let i=new TcHmi.Common.Scenegraph.TextNode(e,s),o=TcHmi.Common.BaseTypes.M3.Identity;o.Translate(0,-t*Controls.ModuleMetaData.PixelRealityScale),i.TransformNode(o),this.Visual.TextGroupVisual.AddChild(i)}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={})).InfoBarLayouter=class{constructor(e){this.levels=[],this.part=e}Layout(e,t){for(let i of this.part.infoBarGroup.Childs){let o=!1;for(let s=0;s<this.levels.length;s++)if(this.CanAddToLevel(s,i.InfoBarModel)){this.levels[s].push(i.InfoBarModel),i.InfoBarModel.Displacement=e+t*s,o=!0;break}if(!o){var s=this.levels.push([i.InfoBarModel]);i.InfoBarModel.Displacement=e+t*(s-1)}}}CanAddToLevel(e,t){for(let s of this.levels[e])if(s.contains(t))return!1;return!0}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={})).StationTextModel=class{constructor(e){Object.assign(this,e)}}}(TcHmi||(TcHmi={})),function(TcHmi){var XTS;((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={})).GlobalMoverList=class{constructor(){this.Locations=[],this.moverList=[]}get Length(){return this.moverList.length}get Movers(){return this.moverList}RegisterXpu(e,t){if(this.moverList.length<=e)for(let t=0;t<e+1-this.moverList.length;t++)this.moverList.push([]);this.moverList[e]=t}GetMoverByIndex(e,t){return this.moverList.length>e&&this.moverList[e].length>t?this.moverList[e][t]:null}GetMoversById(e,t){if(e>=this.moverList.length)return[];var s=[];for(let i of this.moverList[e])i.Id==t&&s.push(i);return s}Clear(){this.moverList=[]}ClearFor(e){this.moverList[e]&&(this.moverList[e]=[])}Replace(e,t,s){this.moverList.length>e&&this.moverList[e].length>t&&(this.moverList[e][t]=s)}IndexOf(e){for(let t=0;t<this.moverList.length;t++)for(let s=0;s<this.moverList[t].length;s++)if(this.moverList[t][s]==e)return{ProcessingUnitIndex:t,MoverIndex:s};return null}}}(TcHmi||(TcHmi={}));var TcHmi,e=function(e,t,s,i){return new(s||(s=Promise))((function(o,n){function a(e){try{l(i.next(e))}catch(e){n(e)}}function r(e){try{l(i.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,r)}l((i=i.apply(e,t||[])).next())}))};!function(TcHmi){var XTS;(function(Controls){class t extends TcHmi.Common.Scenegraph.TransformableBase{constructor(e,t){super(),this.xtsPartGroupVisual=new TcHmi.Common.Scenegraph.TransformableBase,this.moverList=new Controls.GlobalMoverList,this.xtsPartsVisual=[],this.xtsPartsVisualByGlobalId={},this.partsVisualByProcessingUnitIndex={},this.xtsStationModels=[],this.dimensionModels=[],this.infoBarModels=[],this.toolArray=[],this.partTransformationsClient=[],this.partTransformationsServer=[],this.layout="SystemView",this.infoImages=[],this.displayStations=!0,this.stations=[],this.displayDimensions=!1,this.invertDimensions=!1,this.infoBars=[],this.moduleDriveStates=[],this.isShowDriveErrorEnabled=!0,this.isShowDriveWarningEnabled=!0,this.systemRenderer=e,this.basePath=t,this.infoImagesGroupVisual=new TcHmi.Common.Scenegraph.VisualGroup(e),this.AddChild(this.xtsPartGroupVisual),this.AddChild(this.infoImagesGroupVisual)}get CustomMoverLayout(){return this.customMoverLayout}set CustomMoverLayout(e){var t,s;if(tchmi_equal(this.customMoverLayout,e))return;this.customMoverLayout=e;let i=Controls.ModuleMetaData.PixelRealityScale;if(this.customMoverMetaDataFront=new Controls.MoverMetaData,this.customMoverMetaDataFront.img.src=null!==(t=e.ImageSrcFrontSide)&&void 0!==t?t:"",this.customMoverMetaDataFront.movertype=XTS.BaseTypes.MoverType.UserSpecific,this.customMoverMetaDataFront.width=e.ImageWidthFrontSide*i,this.customMoverMetaDataFront.height=e.ImageHeightFrontSide*i,this.customMoverMetaDataFront.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(e.XOffsetFrontSide*i,e.YOffsetFrontSide*i),this.customMoverMetaDataFront.side=XTS.BaseTypes.ModuleSide.Encoder,this.customMoverMetaDataBack=new Controls.MoverMetaData,this.customMoverMetaDataBack.img.src=null!==(s=e.ImageSrcBackSide)&&void 0!==s?s:"",this.customMoverMetaDataBack.movertype=XTS.BaseTypes.MoverType.UserSpecific,this.customMoverMetaDataBack.width=e.ImageWidthBackSide*i,this.customMoverMetaDataBack.height=e.ImageHeightBackSide*i,this.customMoverMetaDataBack.centerMagnetPlate=new TcHmi.Common.BaseTypes.Point(e.XOffsetBackSide*i,e.YOffsetBackSide*i),this.customMoverMetaDataBack.side=XTS.BaseTypes.ModuleSide.Driver,this.xtsModel){let e=0;for(let t=0;t<this.xtsModel.ProcessingUnits.length;t++){var o=this.xtsModel.ProcessingUnits[t];this.CreateMoverVisuals(o.Movers,t,o.MoverType,(()=>{e++,e==this.xtsModel.ProcessingUnits.length&&(this.UpdateMoverPositions(this.lastMoverPositions),this.ReloadMoverTools())}))}}}get MoverType(){return this.moverType}set MoverType(e){if(this.moverType!=e&&(this.moverType=e,this.xtsModel)){let e=0;for(let s=0;s<this.xtsModel.ProcessingUnits.length;s++){var t=this.xtsModel.ProcessingUnits[s];this.CreateMoverVisuals(t.Movers,s,t.MoverType,(()=>{e++,e==this.xtsModel.ProcessingUnits.length&&(this.UpdateMoverPositions(this.lastMoverPositions),this.ReloadMoverTools())}))}}}get DimensionOptions(){return this.dimensionOptions}set DimensionOptions(e){tchmi_equal(this.dimensionOptions,e)||(this.dimensionOptions=e,this.ReloadDimensions())}get DisplayDimensions(){return this.displayDimensions}set DisplayDimensions(e){tchmi_equal(this.displayDimensions,e)||(this.displayDimensions=e,this.ReloadDimensions())}get IsShowDriveErrorEnabled(){return this.isShowDriveErrorEnabled}set IsShowDriveErrorEnabled(e){this.isShowDriveErrorEnabled=e,this.UpdateShowModuleDriveWarningError()}get IsShowDriveWarningEnabled(){return this.isShowDriveWarningEnabled}set IsShowDriveWarningEnabled(e){this.isShowDriveWarningEnabled=e,this.UpdateShowModuleDriveWarningError()}get ModuleDriveStates(){return this.moduleDriveStates}set ModuleDriveStates(e){tchmi_equal(this.moduleDriveStates,e)||(this.moduleDriveStates=e,this.UpdateShowModuleDriveWarningError())}get MoverList(){return this.moverList}get Rotation(){return this.rotation}set Rotation(e){this.rotation=e;var t=TcHmi.Common.BaseTypes.M3.Identity;t.Rotate(e),this.TransformNode(t),this.systemRenderer.RenderAll()}set TransformationChanged(e){this.transformationChanged=e}get XtsPartGroupVisual(){return this.xtsPartGroupVisual}get XtsPartsVisual(){return this.xtsPartsVisual}set ToolArray(e){tchmi_equal(this.toolArray,e)||(this.toolArray=e,this.ReloadMoverTools())}get ToolArray(){return this.toolArray}get PartTransformationsClient(){return this.partTransformationsClient}set PartTransformationsClient(e){tchmi_equal(this.partTransformationsClient,e)||(this.partTransformationsClient=e,this.ReloadPartTransformations(),this.systemRenderer.ZoomToFit())}get PartTransformationsServer(){return this.partTransformationsServer}set PartTransformationsServer(e){tchmi_equal(this.partTransformationsServer,e)||(this.partTransformationsServer=e,this.ReloadPartTransformations())}set Layout(e){this.layout=e,this.ReloadPartTransformations()}get Layout(){return this.layout}set InfoImages(e){tchmi_equal(this.infoImages,e)||(this.infoImages=e,this.ReloadInfoImagesAsync())}get InfoImages(){return this.infoImages}set StationOptions(e){tchmi_equal(this.stationOptions,e)||(this.stationOptions=e,this.ReloadStations())}get StationOptions(){return this.stationOptions}set StationMarkerOptions(e){tchmi_equal(this.stationMarkerOptions,e)||(this.stationMarkerOptions=e,this.ReloadStations())}get StationMarkerOptions(){return this.stationMarkerOptions}get DisplayStations(){return this.displayStations}set DisplayStations(e){tchmi_equal(this.displayStations,e)||(this.displayStations=e,this.ReloadStations())}get InvertDimensions(){return this.invertDimensions}set InvertDimensions(e){tchmi_equal(this.invertDimensions,e)||(this.invertDimensions=e,this.ReloadDimensions())}get Stations(){return this.stations}set Stations(e){tchmi_equal(this.stations,e)||(this.stations=e,this.ReloadStations())}get InfoBars(){return this.infoBars}set InfoBars(e){tchmi_equal(e,this.infoBars)||(this.infoBars=e,this.ReloadInfoBars())}GetPartsForXpuIndex(e){let t=this.partsVisualByProcessingUnitIndex[e];return t||[]}AddPartVisual(e){var t;this.xtsPartsVisualByGlobalId[e.GlobalNumber]=e,this.xtsPartsVisual.push(e),this.xtsPartGroupVisual.AddChild(e),this.partsVisualByProcessingUnitIndex[e.ProcessingUnitIndex]?null===(t=this.partsVisualByProcessingUnitIndex[e.ProcessingUnitIndex])||void 0===t||t.push(e):this.partsVisualByProcessingUnitIndex[e.ProcessingUnitIndex]=[e]}CheckTransformationForReload(){for(let e of this.xtsPartsVisual)if(e.partSide!=this.GetPartSideOf(e))return!0;return!1}CreateMoverVisuals(e,t,s,i){this.DeleteMoverVisualFor(t);let o=[],n=0;for(let a=0;a<e.length;a++){let r=this.CreateNewMoverVisual(s,t,a,e[a].Id);o.push(r),a==e.length-1&&this.moverList.RegisterXpu(t,o),r.Loaded((()=>{n++,n==e.length&&(null==i||i.call(this))}))}return o}CreateVisuals(e,t){this.DeletePartsVisual(),this.xtsModel=e;let s=0,i=[];for(let o=0;o<e.ProcessingUnits.length;o++){let n=e.ProcessingUnits[o],a=!1,r=!1;i.push(this.CreateMoverVisuals(n.Movers,o,n.MoverType,(()=>{r=!0,r&&a&&(s++,s==e.ProcessingUnits.length&&t&&t())})));let l=0,h=0;for(let i of n.Parts){let d=new Controls.XtsPartVisual(i.ObjectId,o,l,this.systemRenderer);d.PartSideServer=i.ModuleSide,this.AddPartVisual(d),d.LoadPart(i,this.GetPartSideOf(d),(()=>{h++,h==n.Parts.length&&(a=!0),r&&a&&(s++,s==e.ProcessingUnits.length&&t&&t())})),l++}}}Delete(){this.DeleteMoverVisual(),this.DeletePartsVisual(),this.DeleteStations(),this.DeleteToolsVisual()}HitTest(e){let t=null;for(let s=this.xtsPartsVisual.length-1;s>=0;s--)if(t=this.xtsPartsVisual[s].HitTest(e),t)return t;return t}ReloadDimensions(){if(this.DeleteDimensions(),this.displayDimensions&&this.dimensionOptions){for(let e of this.XtsPartsVisual){let t=e.CreateInfoBar({PartStart:0,PartEnd:e.TrackLength,Color:this.dimensionOptions.InfoBarColor.color,Id:-1,Displacement:this.dimensionOptions.Displacement,Thickness:this.dimensionOptions.InfoBarThickness},this.dimensionOptions.zIndex);this.dimensionModels.push(t);let s=0,i=0;for(let o=this.invertDimensions?e.moduleGroup.Length-1:0;this.invertDimensions?o>=0:o<e.moduleGroup.Length;this.invertDimensions?o--:o++){let n=e.moduleGroup.Childs[o],a=n.StartPositionInPart+(this.invertDimensions?n.TrackLength:0),r=t.CreateMarker({PartPosition:a,MarkerType:this.dimensionOptions.MarkerType,Size:this.dimensionOptions.MarkerSize,Color:this.dimensionOptions.MarkerColor.color,Thickness:this.dimensionOptions.MarkerThickness},this.dimensionOptions.zIndex);if(0==s){let e=Controls.Utilities.TextConfigurationFromTextOptions(this.dimensionOptions.TextOptions,i.toString());r.AddTextNode(e,this.dimensionOptions.TextDisplacement,this.dimensionOptions.zIndex)}s+=1/this.dimensionOptions.TextPattern,s=s>=1?0:s,i+=n.TrackLength}}this.systemRenderer.RenderAll()}else this.systemRenderer.RenderAll()}ReloadInfoBars(){this.DeleteInfoBars();for(let e of this.infoBars){let t=this.partsVisualByProcessingUnitIndex[e.ProcessingUnitIndex];if(!t)continue;let s=t[e.PartIndex];if(!s||!e.Visible)continue;let i=s.CreateInfoBar({PartStart:e.PartStartPosition,PartEnd:e.PartEndPosition,Color:e.InfoBarColor.color,Displacement:e.InfoBarDisplacement,Thickness:e.InfoBarThickness},e.zIndex);this.infoBarModels.push(i),e.InfoBarText&&i.AddTextNode(Controls.Utilities.TextConfigurationFromTextOptions(e.TextOptions,e.InfoBarText),e.TextPlacement,e.TextDisplacement);for(let t of e.Marker){let s=i.CreateMarker({PartPosition:t.InfoBarPosition+e.PartStartPosition,MarkerType:t.MarkerType,Size:t.MarkerSize,Color:t.MarkerColor.color,Thickness:t.MarkerThickness},t.zIndex);t.MarkerText&&s.AddTextNode(Controls.Utilities.TextConfigurationFromTextOptions(t.TextOptions,t.MarkerText),t.TextDisplacement,t.zIndex)}}this.systemRenderer.RenderAll()}ReloadInfoImagesAsync(){return e(this,void 0,void 0,(function*(){yield this.ReloadInfoImages()}))}ReloadInfoImages(){if(this.infoImagesGroupVisual.ClearChilds(),this.infoImages&&this.systemRenderer.IsCanvasAvailable){for(let e of this.infoImages){if(e.View!=this.layout||!e.Visible||!e.ImageSrc)continue;let t=new Image;t.src=e.ImageSrc;let s=new TcHmi.Common.Scenegraph.ImageNode(t,e.zIndex);this.infoImagesGroupVisual.AddChild(s),s.RenderWidth=e.Width?e.Width*Controls.ModuleMetaData.PixelRealityScale:null,s.RenderHeight=e.Height?e.Height*Controls.ModuleMetaData.PixelRealityScale:null;let i=TcHmi.Common.BaseTypes.M3.Identity;e.Rotation&&i.Rotate(e.Rotation),i.Translate(e.PositionX*Controls.ModuleMetaData.PixelRealityScale,e.PositionY*Controls.ModuleMetaData.PixelRealityScale),s.TransformNode(i)}this.systemRenderer.RenderAll()}else this.systemRenderer.RenderAll()}ReloadMoverTools(){this.DeleteToolsVisual();for(let e of this.toolArray)if("MoverId"==e.IdentificationMode)for(let t of this.MoverList.GetMoversById(e.ProcessingUnitIndex,e.IdentificationId))t&&e.Visible&&t.SetTool(e);else if("MoverIndex"==e.IdentificationMode){let t=this.MoverList.GetMoverByIndex(e.ProcessingUnitIndex,parseInt(e.IdentificationId));t&&e.Visible&&t.SetTool(e)}else if("All"==e.IdentificationMode){let t=this.moverList.Movers[e.ProcessingUnitIndex];if(t)for(let s of t)s&&e.Visible&&s.SetTool(e)}this.systemRenderer.RenderAll()}ReloadPartTransformations(){for(let e of this.xtsPartsVisual)switch(this.layout){case"SystemView":case"InvertedSystemView":{let t=this.partTransformationsServer[e.ProcessingUnitIndex][e.IndexInXpu];if(!t)break;e.OffsetServer=new TcHmi.Common.BaseTypes.Point(t.OffsetX?t.OffsetX:0,t.OffsetY?t.OffsetY:0),e.RotationServer=t.Rotation,"InvertedSystemView"==this.layout&&(e.OffsetServer=new TcHmi.Common.BaseTypes.Point(-e.OffsetServer.X,e.OffsetServer.Y));let s=TcHmi.Common.BaseTypes.M3.Identity,i=e.partSide==TcHmi.XTS.BaseTypes.ModuleSide.Driver?-e.RotationServer:e.RotationServer;s.Rotate(i),s.Translate(e.OffsetServer.X*Controls.ModuleMetaData.PixelRealityScale,e.OffsetServer.Y*Controls.ModuleMetaData.PixelRealityScale),e.TransformNode(s);break}case"Custom":{let t=this.partTransformationsClient.filter((t=>t.PartIndex==e.IndexInXpu&&t.ProcessingUnitIndex==e.ProcessingUnitIndex))[0],s=TcHmi.Common.BaseTypes.M3.Identity;if(!t){e.TransformNode(s);break}!1===t.Visible?e.IsVisible=!1:e.IsVisible=!0;let i=t.AxisBindingX?t.AxisBindingX:0,o=t.AxisBindingY?t.AxisBindingY:0,n=e.partSide==TcHmi.XTS.BaseTypes.ModuleSide.Driver?-t.Rotation:t.Rotation;s.Rotate(n),s.Translate((t.OffsetX+i)*Controls.ModuleMetaData.PixelRealityScale,(t.OffsetY+o)*Controls.ModuleMetaData.PixelRealityScale),e.TransformNode(s);break}}this.systemRenderer.RenderAll()}ReloadStations(){if(this.DeleteStations(),this.displayStations){for(let e of this.stations){if(!e.IsEnabled)continue;let t=TcHmi.Common.Utilities.ColorConverter.FromArgb(e.StationColor);if(1==e.Parts.length&&e.EndPositionOnPart<e.StartPositionOnPart&&e.Parts.push(e.Parts[0]),!this.xtsPartsVisualByGlobalId[e.Parts[0]])return;let s=-e.StartPositionOnPart;for(let i=0;i<e.Parts.length;i++){let o=this.xtsPartsVisualByGlobalId[e.Parts[i]];if(!o)return void TcHmi.Log.error("Part with object id "+e.Parts[i]+" does not exist in current context");let n=o.CreateInfoBar({PartStart:0==i?e.StartPositionOnPart:0,PartEnd:i==e.Parts.length-1?e.EndPositionOnPart:o.TrackLength,Displacement:this.stationOptions.DisplacementToFirst,Thickness:this.stationOptions.Thickness,Color:t,Id:e.StationId},this.stationOptions.zIndex);this.xtsStationModels.push(n);let a=Controls.Utilities.TextConfigurationFromTextOptions(this.stationOptions.TextOptions);switch(a.Color={color:t},this.stationOptions.Text){case"None":break;case"StationDescription":a.Text=e.Description,null==n||n.AddTextNode(a,this.stationOptions.TextInfoBarPlacement,this.stationOptions.TextDisplacement);break;case"StationId":a.Text=e.StationId.toString(),null==n||n.AddTextNode(a,this.stationOptions.TextInfoBarPlacement,this.stationOptions.TextDisplacement)}let r=e.StopPositions?e.StopPositions.filter((e=>e>=s&&e<=s+o.TrackLength)):[];for(let e of r){let i=e-s,o=null==n?void 0:n.CreateMarker({Color:t,MarkerType:this.stationMarkerOptions.MarkerType,PartPosition:i,Size:this.stationMarkerOptions.Size,Thickness:this.stationMarkerOptions.Thickness},this.stationMarkerOptions.zIndex);if("StopPosition"===this.stationMarkerOptions.Text){let s=Controls.Utilities.TextConfigurationFromTextOptions(this.stationMarkerOptions.TextOptions);s.Color={color:t},s.Text=e.toString(),o.AddTextNode(s,this.stationMarkerOptions.TextDisplacement,this.stationMarkerOptions.zIndex)}}s+=o.TrackLength}}for(let e of this.xtsPartsVisual)new Controls.InfoBarLayouter(e).Layout(this.stationOptions.DisplacementToFirst,this.stationOptions.SpaceBetweenStackedStations);this.systemRenderer.RenderAll()}else this.systemRenderer.RenderAll()}UpdateMoverPositions(e){var t;this.lastMoverPositions=e;for(let s=0;s<e.length;s++)for(let i=0;i<e[s].length;i++){let o=this.moverList.GetMoverByIndex(s,i);if(o){let n=this.xtsPartsVisualByGlobalId[e[s][i].PartOid];if(o.ActualPart==n)n.TransformMoverToPosition(o,e[s][i].PartPosition);else if(n)if(null===(t=o.ActualPart)||void 0===t||t.RemoveMover(o),o.MetaData.side!=n.partSide){let t=this.CreateNewMoverVisual(o.MetaData.movertype,i,o.IndexInXpu,o.Id,n.partSide);n.AddExistingMover(t,e[s][i].PartPosition),this.moverList.Replace(s,i,t),this.ReloadMoverToolsFor(t)}else n.AddExistingMover(o,e[s][i].PartPosition)}}this.systemRenderer.RenderMover()}TransformNode(e){var t;super.TransformNode(e),null===(t=this.transformationChanged)||void 0===t||t.call(this,this.Transformation)}DeleteDimensions(){for(let e of this.dimensionModels)e.DeleteFromPart()}DeleteInfoBars(){for(let e of this.infoBarModels)e.DeleteFromPart()}DeleteMoverVisualFor(e){var t,s=null!==(t=this.partsVisualByProcessingUnitIndex[e])&&void 0!==t?t:[];for(let e of s)e.moverGroup.ClearChilds();this.moverList.ClearFor(e)}DeleteMoverVisual(){for(let e of this.xtsPartsVisual)e.moverGroup.ClearChilds();this.moverList.Clear()}DeletePartsVisual(){for(let e of this.xtsPartsVisual)e.ClearChilds();this.partsVisualByProcessingUnitIndex={},this.xtsPartsVisualByGlobalId={},this.xtsPartGroupVisual.ClearChilds(),this.xtsPartsVisual=[]}DeleteStations(){for(let e of this.xtsStationModels)e.DeleteFromPart()}DeleteToolsVisual(){for(let e=0;e<this.xtsPartsVisual.length;e++)this.xtsPartsVisual[e].ClearTools()}GetPartSideOf(e){switch(this.layout){case"SystemView":return e.PartSideServer;case"InvertedSystemView":return TcHmi.XTS.BaseTypes.ModuleSideUtil.Invert(e.PartSideServer);case"Custom":let t=this.partTransformationsClient.filter((t=>t.PartIndex==e.IndexInXpu&&t.ProcessingUnitIndex==e.ProcessingUnitIndex))[0];if(t)switch(t.PartSide){case"Default":return e.PartSideServer;case"Front":return TcHmi.XTS.BaseTypes.ModuleSide.Encoder;case"Back":return TcHmi.XTS.BaseTypes.ModuleSide.Driver}return TcHmi.XTS.BaseTypes.ModuleSide.Encoder}}ReloadMoverToolsFor(e){var t=this.toolArray.filter((t=>t.ProcessingUnitIndex==e.ProcessingUnitIndex&&("All"==t.IdentificationMode||"MoverId"==t.IdentificationMode&&e.Id==t.IdentificationId||"MoverIndex"==t.IdentificationMode&&e.IndexInXpu==Number(t.IdentificationId))));for(let s of t)e.SetTool(s)}CreateNewMoverVisual(e,t,s,i,o=XTS.BaseTypes.ModuleSide.Encoder){return"SystemView"!=this.MoverType&&this.customMoverMetaDataFront?o===XTS.BaseTypes.ModuleSide.Driver?new Controls.XtsMoverVisual(this.customMoverMetaDataBack,t,s,i,this.systemRenderer):new Controls.XtsMoverVisual(this.customMoverMetaDataFront,t,s,i,this.systemRenderer):new Controls.XtsMoverVisual(Controls.MoverMetaData.GetMetaDataById(e,o),t,s,i,this.systemRenderer)}UpdateShowModuleDriveWarningError(){if(this.moduleDriveStates)for(let e=0;e<this.moduleDriveStates.length;++e){let t=this.partsVisualByProcessingUnitIndex[e],s=0;if(t){for(let i of t)for(let t of i.moduleGroup.Childs){let i=this.moduleDriveStates[e][s];t.VisualChilds.ClearChilds();let o,n=TcHmi.Common.Utilities.BitUtil.IsBitSet(i,7);if(TcHmi.Common.Utilities.BitUtil.IsBitSet(i,3)&&this.isShowDriveErrorEnabled?o=TcHmi.Common.Utilities.ImageHandler.GetImage(this.basePath+"/Icons/Error_64px.png"):n&&this.isShowDriveWarningEnabled&&(o=TcHmi.Common.Utilities.ImageHandler.GetImage(this.basePath+"/Icons/Warning_64px.png")),o){let e=new TcHmi.Common.Scenegraph.ImageNode(o,t.ZIndex);e.RenderWidth=128,e.RenderHeight=128,e.HorizontalAlignment="Center",t.VisualChilds.AddChild(e);let s=t.CalculateTransformMatrixAt(t.MetaData.ModuleLength/2,!1);e.TransformNode(s)}++s}this.systemRenderer.RenderAll()}}}}Controls.XSystemVisual=t})((XTS=TcHmi.XTS||(TcHmi.XTS={})).Controls||(XTS.Controls={}))}(TcHmi||(TcHmi={})),function(TcHmi){var XTS,Controls;XTS=TcHmi.XTS||(TcHmi.XTS={}),(Controls=XTS.Controls||(XTS.Controls={})).SelectionManager=class{constructor(e,t,s,i){this.moduleSelectionColor={color:"Transparent"},this.moverSelectionColor={color:"Transparent"},this.moverSelection=[],this.moduleSelection=[],this.systemVisual=e,this.systemRenderer=t,this.moverSelectionChanged=s,this.moduleSelectionChanged=i}get SelectionMode(){return this.selectionMode}set SelectionMode(e){this.selectionMode!=e&&(this.selectionMode=e,"Off"==e&&(this.ModuleSelection=[],this.MoverSelection=[]))}get ModuleSelection(){return this.moduleSelection}set ModuleSelection(e){var t,s;if(this.systemVisual.XtsPartsVisual.length<=0)return void(this.moduleSelection=e);let i=e.filter((e=>this.moduleSelection.filter((t=>t.ModuleIndex==e.ModuleIndex&&t.PartIndex==e.PartIndex&&t.ProcessingUnitIndex==e.ProcessingUnitIndex)).length<=0)),o=this.moduleSelection.filter((t=>e.filter((e=>t.ModuleIndex==e.ModuleIndex&&t.PartIndex==e.PartIndex&&t.ProcessingUnitIndex==e.ProcessingUnitIndex)).length<=0));for(let e of o){let s=null===(t=this.systemVisual.GetPartsForXpuIndex(e.ProcessingUnitIndex)[e.PartIndex])||void 0===t?void 0:t.moduleGroup.Childs[e.ModuleIndex];s&&(s.Shade=!1)}for(let e of i){let t=null===(s=this.systemVisual.GetPartsForXpuIndex(e.ProcessingUnitIndex)[e.PartIndex])||void 0===s?void 0:s.moduleGroup.Childs[e.ModuleIndex];t&&(t.Shade=!0,t.ShadeStyle=this.moduleSelectionColor.color)}this.moduleSelection=e,this.systemRenderer.RenderVisuals()}get ModuleSelectionColor(){return this.moduleSelectionColor}set ModuleSelectionColor(e){var t;if(this.moduleSelectionColor=e,!(this.systemVisual.XtsPartsVisual.length<=0||this.moduleSelection.length<=0)){for(let s of this.moduleSelection){let i=null===(t=this.systemVisual.GetPartsForXpuIndex(s.ProcessingUnitIndex)[s.PartIndex])||void 0===t?void 0:t.moduleGroup.Childs[s.ModuleIndex];i&&(i.ShadeStyle=e.color)}this.systemRenderer.RenderVisuals()}}get MoverSelection(){return this.moverSelection}set MoverSelection(e){if(this.systemVisual.MoverList.Length<=0)return void(this.moverSelection=e);let t=e.filter((e=>this.moverSelection.filter((t=>t.MoverIndex==e.MoverIndex&&t.ProcessingUnitIndex==e.ProcessingUnitIndex)).length<=0)),s=this.moverSelection.filter((t=>e.filter((e=>t.MoverIndex==e.MoverIndex&&t.ProcessingUnitIndex==e.ProcessingUnitIndex)).length<=0));for(let e of t){let t=this.systemVisual.MoverList.GetMoverByIndex(e.ProcessingUnitIndex,e.MoverIndex);t&&(t.Shade=!0,t.ShadeStyle=this.moverSelectionColor.color)}for(let e of s){let t=this.systemVisual.MoverList.GetMoverByIndex(e.ProcessingUnitIndex,e.MoverIndex);t&&(t.Shade=!1)}this.moverSelection=e,this.systemRenderer.RenderMover()}get MoverSelectionColor(){return this.moverSelectionColor}set MoverSelectionColor(e){if(this.moverSelectionColor=e,!(this.systemVisual.MoverList.Length<=0||this.moverSelection.length<=0)){for(let t of this.moverSelection){let s=this.systemVisual.MoverList.GetMoverByIndex(t.ProcessingUnitIndex,t.MoverIndex);s&&(s.ShadeStyle=e.color)}this.systemRenderer.RenderMover()}}ReloadMoverSelection(){for(let e of this.systemVisual.MoverList.Movers)for(let t of e)t.Shade=this.moverSelection.filter((e=>e.MoverIndex==t.IndexInXpu&&e.ProcessingUnitIndex==t.ProcessingUnitIndex)).length>0,t.ShadeStyle=this.moverSelectionColor.color}ReloadModuleSelection(){for(let e of this.systemVisual.XtsPartsVisual)for(let t of e.moduleGroup.Childs)t.Shade=this.moduleSelection.filter((s=>s.ModuleIndex==t.IndexInPart&&s.PartIndex==e.IndexInXpu&&s.ProcessingUnitIndex==e.ProcessingUnitIndex)).length>0,t.ShadeStyle=this.moduleSelectionColor.color}Click(e){if("Off"==this.SelectionMode)return null;let t=this.systemVisual.HitTest(e);switch(this.SelectionMode){case"SingleSelection":if(t){if(t instanceof Controls.XtsMoverVisual){let e=this.systemVisual.MoverList.IndexOf(t),s=[];e&&(s=[e]),this.moverSelectionChanged(s)}else if(t instanceof Controls.XtsModuleVisual){let e=[{ProcessingUnitIndex:t.PartViusal.ProcessingUnitIndex,PartIndex:t.PartViusal.IndexInXpu,ModuleIndex:t.IndexInPart}];this.moduleSelectionChanged(e)}}else this.moverSelectionChanged([]),this.moduleSelectionChanged([]);return;case"MultiSelection":if(t)if(t instanceof Controls.XtsMoverVisual){let e=this.systemVisual.MoverList.IndexOf(t);if(!e)return;let s=[],i=!1;for(let t of this.moverSelection)t.MoverIndex==e.MoverIndex&&t.ProcessingUnitIndex==e.ProcessingUnitIndex?i=!0:s.push(t);i||s.push(e),this.moverSelectionChanged(s)}else if(t instanceof Controls.XtsModuleVisual){let e=[],s={ProcessingUnitIndex:t.PartViusal.ProcessingUnitIndex,PartIndex:t.PartViusal.IndexInXpu,ModuleIndex:t.IndexInPart},i=!1;for(let t of this.moduleSelection)t.ModuleIndex!=s.ModuleIndex||t.PartIndex!=s.PartIndex?e.push(t):i=!0;i||e.push(s),this.moduleSelectionChanged(e)}return null;default:return null}}}}(TcHmi||(TcHmi={}));
