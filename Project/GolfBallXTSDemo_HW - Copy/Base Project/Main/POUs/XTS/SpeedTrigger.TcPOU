<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="SpeedTrigger" Id="{ceb84e98-9bb3-44af-9526-f95d6c0344e5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK SpeedTrigger EXTENDS Objective
VAR

    {attribute 'hide'}
    internalThresholdVelocity : LREAL;

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Methods" Id="{509b1e5d-b79a-449e-ba49-e162eb42b6fc}" />
    <Folder Name="Properties" Id="{dbd68162-6541-404e-b05a-0fec2a8ff4c5}" />
    <Property Name="CurrentMover" Id="{7f0937a7-bed5-48ff-acf8-6553ecfccecb}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'variable'}
PROPERTY CurrentMover : REFERENCE TO Mover]]></Declaration>
      <Get Name="Get" Id="{579026c0-dbc9-45df-a0d9-58debaf1382a}">
        <Declaration><![CDATA[VAR
    i : ULINT;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[CurrentMover REF= 0;

FOR i := 0 TO SIZEOF(internalTrackedMovers) / SIZEOF(internalTrackedMovers[0]) - 1 DO

    IF internalTrackedMovers[i] <> 0 AND_THEN (ABS(internalTrackedMovers[i]^.AxisReference.NcToPlc.ActVelo) >= ThresholdVelocity) THEN
        CurrentMover                    REF= internalTrackedMovers[i]^;
        CurrentMover.SourceInstancePath := THIS^.InstancePath;
    END_IF

END_FOR

// If the Trigger has no CurrentMover, then return an imposter ErrorMover, whose method calls all trigger an error message
IF __ISVALIDREF(CurrentMover) = FALSE THEN
    ErrorMover.SourceInstancePath := THIS^.InstancePath;
    CurrentMover                  REF= ErrorMover;
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MoverInVelocity" Id="{7c83a599-b5f9-45c9-9131-e8a02b23529a}" FolderPath="Properties\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'variable'}
PROPERTY MoverInVelocity : BOOL]]></Declaration>
      <Get Name="Get" Id="{2ea072c0-2f9e-44bb-b822-47a0341f43bf}">
        <Declaration><![CDATA[VAR
    i : ulint;
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoverInVelocity := FALSE;

FOR i := 0 TO SIZEOF(TrackedMovers) / SIZEOF(internalTrackedMovers[0]) - 1 DO

    IF internalTrackedMovers[i] <> 0 AND_THEN (ABS(internalTrackedMovers[i]^.AxisReference.NcToPlc.ActVelo) >= ThresholdVelocity) THEN
        MoverInVelocity := TRUE;
    END_IF

END_FOR]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ThresholdVelocity" Id="{1f1a632c-f4e8-446f-9260-5f7e4c9c9017}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY ThresholdVelocity : LREAL]]></Declaration>
      <Get Name="Get" Id="{02cc51fd-1552-49da-a92a-6edba1c95096}">
        <Declaration><![CDATA[VAR
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[ThresholdVelocity := internalThresholdVelocity;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{dfd5cdd4-fa57-4379-b145-1e679363cb0e}">
        <Declaration><![CDATA[VAR
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[internalThresholdVelocity := ThresholdVelocity;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="SpeedTrigger">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SpeedTrigger.CurrentMover.Get">
      <LineId Id="37" Count="14" />
      <LineId Id="21" Count="0" />
    </LineIds>
    <LineIds Name="SpeedTrigger.MoverInVelocity.Get">
      <LineId Id="24" Count="7" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="SpeedTrigger.ThresholdVelocity.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="SpeedTrigger.ThresholdVelocity.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>